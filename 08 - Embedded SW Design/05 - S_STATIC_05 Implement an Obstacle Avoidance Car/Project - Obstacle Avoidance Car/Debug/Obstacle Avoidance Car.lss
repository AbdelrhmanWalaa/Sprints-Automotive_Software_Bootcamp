
Obstacle Avoidance Car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002416  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005c  00800060  00002416  000024aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000020  008000bc  008000bc  00002506  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002506  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002538  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000350  00000000  00000000  00002574  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004239  00000000  00000000  000028c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001383  00000000  00000000  00006afd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000220c  00000000  00000000  00007e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000870  00000000  00000000  0000a08c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000011b9  00000000  00000000  0000a8fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002388  00000000  00000000  0000bab5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a0  00000000  00000000  0000de3d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__vector_1>
       8:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__vector_2>
       c:	0c 94 11 09 	jmp	0x1222	; 0x1222 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 dd 0b 	jmp	0x17ba	; 0x17ba <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 e8 0e 	jmp	0x1dd0	; 0x1dd0 <__vector_10>
      2c:	0c 94 16 0f 	jmp	0x1e2c	; 0x1e2c <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e1       	ldi	r30, 0x16	; 22
      68:	f4 e2       	ldi	r31, 0x24	; 36
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 3b       	cpi	r26, 0xBC	; 188
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac eb       	ldi	r26, 0xBC	; 188
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 3d       	cpi	r26, 0xDC	; 220
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8d 06 	call	0xd1a	; 0xd1a <main>
      8a:	0c 94 09 12 	jmp	0x2412	; 0x2412 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <APP_initialization>:
 Description: Function to Initialize the Application.
*/ 
void APP_initialization(void)
{
	/* MCAL Initialization */
	GLI_enableGIE();
      92:	0e 94 3a 09 	call	0x1274	; 0x1274 <GLI_enableGIE>
	
	/* HAL Initialization */
	BTN_init( C, P4 );
      96:	64 e0       	ldi	r22, 0x04	; 4
      98:	82 e0       	ldi	r24, 0x02	; 2
      9a:	0e 94 1b 03 	call	0x636	; 0x636 <BTN_init>
	LCD_init();
      9e:	0e 94 da 04 	call	0x9b4	; 0x9b4 <LCD_init>
	KPD_initialization();
      a2:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <KPD_initialization>
	US_init( B, P3, EN_INT2 );
      a6:	42 e0       	ldi	r20, 0x02	; 2
      a8:	63 e0       	ldi	r22, 0x03	; 3
      aa:	81 e0       	ldi	r24, 0x01	; 1
      ac:	0e 94 27 06 	call	0xc4e	; 0xc4e <US_init>
	DCM_initialization( ast_g_DCMs );
      b0:	80 e6       	ldi	r24, 0x60	; 96
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	0e 94 2d 03 	call	0x65a	; 0x65a <DCM_initialization>
      b8:	08 95       	ret

000000ba <APP_stopCar>:
 Input: void
 Output: void
 Description: Function to Stop the car. 
*/
vd APP_stopCar( void )
{
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	1f 92       	push	r1
      c0:	cd b7       	in	r28, 0x3d	; 61
      c2:	de b7       	in	r29, 0x3e	; 62
	u8 u8_l_keyValue = KPD_U8_KEY_NOT_PRESSED;
      c4:	8f ef       	ldi	r24, 0xFF	; 255
      c6:	89 83       	std	Y+1, r24	; 0x01
	
	KPD_getPressedKey( &u8_l_keyValue );
      c8:	ce 01       	movw	r24, r28
      ca:	01 96       	adiw	r24, 0x01	; 1
      cc:	0e 94 1b 04 	call	0x836	; 0x836 <KPD_getPressedKey>
	
	if ( u8_l_keyValue == '2' )
      d0:	89 81       	ldd	r24, Y+1	; 0x01
      d2:	82 33       	cpi	r24, 0x32	; 50
      d4:	e9 f4       	brne	.+58     	; 0x110 <APP_stopCar+0x56>
	{
		DCM_controlDCMSpeed( 30 );
      d6:	8e e1       	ldi	r24, 0x1E	; 30
      d8:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
		DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_STOP );
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	80 e6       	ldi	r24, 0x60	; 96
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
		DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	84 e6       	ldi	r24, 0x64	; 100
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
		
		LCD_setCursor( 0, 0 );
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
		LCD_sendString( ( u8* ) "Speed:00% Dir:S" );
      f8:	88 e6       	ldi	r24, 0x68	; 104
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
		
		while ( u8_l_keyValue != '1' )
     100:	04 c0       	rjmp	.+8      	; 0x10a <APP_stopCar+0x50>
		{
			KPD_getPressedKey( &u8_l_keyValue );
     102:	ce 01       	movw	r24, r28
     104:	01 96       	adiw	r24, 0x01	; 1
     106:	0e 94 1b 04 	call	0x836	; 0x836 <KPD_getPressedKey>
		DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
		
		LCD_setCursor( 0, 0 );
		LCD_sendString( ( u8* ) "Speed:00% Dir:S" );
		
		while ( u8_l_keyValue != '1' )
     10a:	89 81       	ldd	r24, Y+1	; 0x01
     10c:	81 33       	cpi	r24, 0x31	; 49
     10e:	c9 f7       	brne	.-14     	; 0x102 <APP_stopCar+0x48>
		{
			KPD_getPressedKey( &u8_l_keyValue );
		}
	}	
}
     110:	0f 90       	pop	r0
     112:	df 91       	pop	r29
     114:	cf 91       	pop	r28
     116:	08 95       	ret

00000118 <APP_startProgram>:
 Input: void
 Output: void
 Description: Function to Start the basic flow of the Application. 
*/
void APP_startProgram  (void)
{
     118:	cf 93       	push	r28
     11a:	df 93       	push	r29
     11c:	00 d0       	rcall	.+0      	; 0x11e <APP_startProgram+0x6>
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
	u8 u8_l_keyValue = KPD_U8_KEY_NOT_PRESSED;
     122:	8f ef       	ldi	r24, 0xFF	; 255
     124:	89 83       	std	Y+1, r24	; 0x01
	u8 u8_l_btnValue;

	while ( u8_l_keyValue != '1' )
     126:	04 c0       	rjmp	.+8      	; 0x130 <APP_startProgram+0x18>
	{
		KPD_getPressedKey( &u8_l_keyValue );
     128:	ce 01       	movw	r24, r28
     12a:	01 96       	adiw	r24, 0x01	; 1
     12c:	0e 94 1b 04 	call	0x836	; 0x836 <KPD_getPressedKey>
void APP_startProgram  (void)
{
	u8 u8_l_keyValue = KPD_U8_KEY_NOT_PRESSED;
	u8 u8_l_btnValue;

	while ( u8_l_keyValue != '1' )
     130:	89 81       	ldd	r24, Y+1	; 0x01
     132:	81 33       	cpi	r24, 0x31	; 49
     134:	c9 f7       	brne	.-14     	; 0x128 <APP_startProgram+0x10>
	{
		KPD_getPressedKey( &u8_l_keyValue );
	}
	
	TMR0_timeoutMS( 5000 );
     136:	60 e0       	ldi	r22, 0x00	; 0
     138:	70 e4       	ldi	r23, 0x40	; 64
     13a:	8c e9       	ldi	r24, 0x9C	; 156
     13c:	95 e4       	ldi	r25, 0x45	; 69
     13e:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <TMR0_timeoutMS>
	
	LCD_setCursor( 0, 0 );
     142:	60 e0       	ldi	r22, 0x00	; 0
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
	LCD_sendString( ( u8* ) "Set Def. Rot." );
     14a:	88 e7       	ldi	r24, 0x78	; 120
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
	
	while( !g_timeout_flag )
     152:	2b c0       	rjmp	.+86     	; 0x1aa <APP_startProgram+0x92>
	{
		LCD_setCursor( 1, 0 );
     154:	60 e0       	ldi	r22, 0x00	; 0
     156:	81 e0       	ldi	r24, 0x01	; 1
     158:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
		
		if ( u8_g_select == APP_U8_CAR_ROTATE_RGT )
     15c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     160:	81 11       	cpse	r24, r1
     162:	05 c0       	rjmp	.+10     	; 0x16e <APP_startProgram+0x56>
		{
			LCD_sendString( ( u8* ) "Right" );
     164:	86 e8       	ldi	r24, 0x86	; 134
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
     16c:	04 c0       	rjmp	.+8      	; 0x176 <APP_startProgram+0x5e>
		}
		else
		{
			LCD_sendString( ( u8* ) "Left" );
     16e:	8c e8       	ldi	r24, 0x8C	; 140
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
		}

		BTN_read( C, P4, &u8_l_btnValue );
     176:	ae 01       	movw	r20, r28
     178:	4e 5f       	subi	r20, 0xFE	; 254
     17a:	5f 4f       	sbci	r21, 0xFF	; 255
     17c:	64 e0       	ldi	r22, 0x04	; 4
     17e:	82 e0       	ldi	r24, 0x02	; 2
     180:	0e 94 2a 03 	call	0x654	; 0x654 <BTN_read>
		
		if ( u8_l_btnValue == LOW )
     184:	8a 81       	ldd	r24, Y+2	; 0x02
     186:	81 11       	cpse	r24, r1
     188:	10 c0       	rjmp	.+32     	; 0x1aa <APP_startProgram+0x92>
		{
			u8_g_select = ~u8_g_select;
     18a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     18e:	80 95       	com	r24
     190:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end>
			
			while ( u8_l_btnValue == LOW )
     194:	07 c0       	rjmp	.+14     	; 0x1a4 <APP_startProgram+0x8c>
			{
				BTN_read( C, P4, &u8_l_btnValue );
     196:	ae 01       	movw	r20, r28
     198:	4e 5f       	subi	r20, 0xFE	; 254
     19a:	5f 4f       	sbci	r21, 0xFF	; 255
     19c:	64 e0       	ldi	r22, 0x04	; 4
     19e:	82 e0       	ldi	r24, 0x02	; 2
     1a0:	0e 94 2a 03 	call	0x654	; 0x654 <BTN_read>
		
		if ( u8_l_btnValue == LOW )
		{
			u8_g_select = ~u8_g_select;
			
			while ( u8_l_btnValue == LOW )
     1a4:	8a 81       	ldd	r24, Y+2	; 0x02
     1a6:	88 23       	and	r24, r24
     1a8:	b1 f3       	breq	.-20     	; 0x196 <APP_startProgram+0x7e>
	TMR0_timeoutMS( 5000 );
	
	LCD_setCursor( 0, 0 );
	LCD_sendString( ( u8* ) "Set Def. Rot." );
	
	while( !g_timeout_flag )
     1aa:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <g_timeout_flag>
     1ae:	88 23       	and	r24, r24
     1b0:	89 f2       	breq	.-94     	; 0x154 <APP_startProgram+0x3c>
				BTN_read( C, P4, &u8_l_btnValue );
			}
		}
	}
	
	LCD_clear();
     1b2:	0e 94 62 05 	call	0xac4	; 0xac4 <LCD_clear>

	DCM_controlDCMSpeed( 30 );
     1b6:	8e e1       	ldi	r24, 0x1E	; 30
     1b8:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
	DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_STOP );
     1bc:	60 e0       	ldi	r22, 0x00	; 0
     1be:	80 e6       	ldi	r24, 0x60	; 96
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
	DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
     1c6:	60 e0       	ldi	r22, 0x00	; 0
     1c8:	84 e6       	ldi	r24, 0x64	; 100
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
	
	LCD_setCursor( 0, 0 );
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
	LCD_sendString( ( u8* ) "Speed:00% Dir:S" );
     1d8:	88 e6       	ldi	r24, 0x68	; 104
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
	
	TMR0_delayMS( 2000 );
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	8a ef       	ldi	r24, 0xFA	; 250
     1e6:	94 e4       	ldi	r25, 0x44	; 68
     1e8:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
	
	u16 u16_l_distance = 0;
	
	u16_l_distance = US_readDistance();
     1ec:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     1f0:	8c 01       	movw	r16, r24
	
	LCD_setCursor( 1, 0 );
     1f2:	60 e0       	ldi	r22, 0x00	; 0
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
	
	LCD_sendString( ( u8* ) "Dist.:     cm");
     1fa:	81 e9       	ldi	r24, 0x91	; 145
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
	LCD_setCursor( 1, 7 );
     202:	67 e0       	ldi	r22, 0x07	; 7
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
	LCD_floatToString( u16_l_distance );
     20a:	b8 01       	movw	r22, r16
     20c:	80 e0       	ldi	r24, 0x00	; 0
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     214:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
	while (1)
	{
		/************************************************************************************/
		/*****************************First State********************************************/
		/************************************************************************************/
		u16_l_distance = US_readDistance();
     218:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     21c:	8c 01       	movw	r16, r24
		
		LCD_setCursor( 1, 7 );
     21e:	67 e0       	ldi	r22, 0x07	; 7
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
		LCD_floatToString(u16_l_distance);
     226:	b8 01       	movw	r22, r16
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     230:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
			
		if ( u16_l_distance > 70 )
     234:	07 34       	cpi	r16, 0x47	; 71
     236:	11 05       	cpc	r17, r1
     238:	08 f4       	brcc	.+2      	; 0x23c <APP_startProgram+0x124>
     23a:	6b c0       	rjmp	.+214    	; 0x312 <APP_startProgram+0x1fa>
		{
			TMR0_timeoutMS( 5000 );
     23c:	60 e0       	ldi	r22, 0x00	; 0
     23e:	70 e4       	ldi	r23, 0x40	; 64
     240:	8c e9       	ldi	r24, 0x9C	; 156
     242:	95 e4       	ldi	r25, 0x45	; 69
     244:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <TMR0_timeoutMS>
			
			while( !g_timeout_flag && u16_l_distance > 70 )
     248:	2c c0       	rjmp	.+88     	; 0x2a2 <APP_startProgram+0x18a>
			{
				DCM_controlDCMSpeed( 30 );
     24a:	8e e1       	ldi	r24, 0x1E	; 30
     24c:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
				DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CW );
     250:	61 e0       	ldi	r22, 0x01	; 1
     252:	80 e6       	ldi	r24, 0x60	; 96
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CW );
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	84 e6       	ldi	r24, 0x64	; 100
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				
				u16_l_distance = US_readDistance();
     264:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     268:	8c 01       	movw	r16, r24
				
				LCD_setCursor( 0, 6 );
     26a:	66 e0       	ldi	r22, 0x06	; 6
     26c:	80 e0       	ldi	r24, 0x00	; 0
     26e:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendString( ( u8* ) "30" );
     272:	8f e9       	ldi	r24, 0x9F	; 159
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
				LCD_setCursor( 0,14 );
     27a:	6e e0       	ldi	r22, 0x0E	; 14
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendCharacter( 'F' );
     282:	86 e4       	ldi	r24, 0x46	; 70
     284:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
				LCD_setCursor( 1, 7 );
     288:	67 e0       	ldi	r22, 0x07	; 7
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_floatToString( u16_l_distance );
     290:	b8 01       	movw	r22, r16
     292:	80 e0       	ldi	r24, 0x00	; 0
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     29a:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
				
				APP_stopCar();
     29e:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
			
		if ( u16_l_distance > 70 )
		{
			TMR0_timeoutMS( 5000 );
			
			while( !g_timeout_flag && u16_l_distance > 70 )
     2a2:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <g_timeout_flag>
     2a6:	81 11       	cpse	r24, r1
     2a8:	30 c0       	rjmp	.+96     	; 0x30a <APP_startProgram+0x1f2>
     2aa:	07 34       	cpi	r16, 0x47	; 71
     2ac:	11 05       	cpc	r17, r1
     2ae:	68 f6       	brcc	.-102    	; 0x24a <APP_startProgram+0x132>
     2b0:	2c c0       	rjmp	.+88     	; 0x30a <APP_startProgram+0x1f2>
				
				APP_stopCar();
			}
			while( u16_l_distance > 70 )
			{
				DCM_controlDCMSpeed( 50 );
     2b2:	82 e3       	ldi	r24, 0x32	; 50
     2b4:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
				DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CW );
     2b8:	61 e0       	ldi	r22, 0x01	; 1
     2ba:	80 e6       	ldi	r24, 0x60	; 96
     2bc:	90 e0       	ldi	r25, 0x00	; 0
     2be:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CW );
     2c2:	61 e0       	ldi	r22, 0x01	; 1
     2c4:	84 e6       	ldi	r24, 0x64	; 100
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				
				u16_l_distance = US_readDistance();
     2cc:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     2d0:	8c 01       	movw	r16, r24
				
				LCD_setCursor( 0, 6 );
     2d2:	66 e0       	ldi	r22, 0x06	; 6
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendString( ( u8* ) "50" );
     2da:	82 ea       	ldi	r24, 0xA2	; 162
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
				LCD_setCursor( 0, 14 );
     2e2:	6e e0       	ldi	r22, 0x0E	; 14
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendCharacter( 'F' );
     2ea:	86 e4       	ldi	r24, 0x46	; 70
     2ec:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
				LCD_setCursor( 1, 7 );
     2f0:	67 e0       	ldi	r22, 0x07	; 7
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_floatToString( u16_l_distance );
     2f8:	b8 01       	movw	r22, r16
     2fa:	80 e0       	ldi	r24, 0x00	; 0
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     302:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
				
				APP_stopCar();
     306:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
				LCD_setCursor( 1, 7 );
				LCD_floatToString( u16_l_distance );
				
				APP_stopCar();
			}
			while( u16_l_distance > 70 )
     30a:	07 34       	cpi	r16, 0x47	; 71
     30c:	11 05       	cpc	r17, r1
     30e:	88 f6       	brcc	.-94     	; 0x2b2 <APP_startProgram+0x19a>
     310:	83 cf       	rjmp	.-250    	; 0x218 <APP_startProgram+0x100>
			}
		}
		/************************************************************************************/
		/*****************************Second State*******************************************/
		/************************************************************************************/
		else if ( ( u16_l_distance <= 70 ) && ( u16_l_distance > 30 ) )
     312:	c8 01       	movw	r24, r16
     314:	4f 97       	sbiw	r24, 0x1f	; 31
     316:	88 97       	sbiw	r24, 0x28	; 40
     318:	68 f5       	brcc	.+90     	; 0x374 <APP_startProgram+0x25c>
		{
			DCM_controlDCMSpeed( 30 );
     31a:	8e e1       	ldi	r24, 0x1E	; 30
     31c:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
			DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CW );
     320:	61 e0       	ldi	r22, 0x01	; 1
     322:	80 e6       	ldi	r24, 0x60	; 96
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CW );
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	84 e6       	ldi	r24, 0x64	; 100
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			
			u16_l_distance = US_readDistance();
     334:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     338:	8c 01       	movw	r16, r24
			
			LCD_setCursor( 0, 6 );
     33a:	66 e0       	ldi	r22, 0x06	; 6
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendString( ( u8* ) "30" );
     342:	8f e9       	ldi	r24, 0x9F	; 159
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
			LCD_setCursor( 0, 14 );
     34a:	6e e0       	ldi	r22, 0x0E	; 14
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendCharacter( 'F' );
     352:	86 e4       	ldi	r24, 0x46	; 70
     354:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
			LCD_setCursor( 1, 7 );
     358:	67 e0       	ldi	r22, 0x07	; 7
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_floatToString( u16_l_distance );
     360:	b8 01       	movw	r22, r16
     362:	80 e0       	ldi	r24, 0x00	; 0
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     36a:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
			
			APP_stopCar();
     36e:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
     372:	52 cf       	rjmp	.-348    	; 0x218 <APP_startProgram+0x100>
		}
		/************************************************************************************/
		/*****************************Third State********************************************/
		/************************************************************************************/
		else if ( ( u16_l_distance <= 30 ) && ( u16_l_distance > 20 ) )
     374:	c8 01       	movw	r24, r16
     376:	45 97       	sbiw	r24, 0x15	; 21
     378:	0a 97       	sbiw	r24, 0x0a	; 10
     37a:	08 f0       	brcs	.+2      	; 0x37e <APP_startProgram+0x266>
     37c:	bf c0       	rjmp	.+382    	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
		{
			DCM_controlDCMSpeed( 30 );
     37e:	8e e1       	ldi	r24, 0x1E	; 30
     380:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
			DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_STOP );
     384:	60 e0       	ldi	r22, 0x00	; 0
     386:	80 e6       	ldi	r24, 0x60	; 96
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
     38e:	60 e0       	ldi	r22, 0x00	; 0
     390:	84 e6       	ldi	r24, 0x64	; 100
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			
			u16_l_distance = US_readDistance();
     398:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     39c:	8c 01       	movw	r16, r24
			
			LCD_setCursor( 0,6 );
     39e:	66 e0       	ldi	r22, 0x06	; 6
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendString( ( u8* ) "00" );
     3a6:	85 ea       	ldi	r24, 0xA5	; 165
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
			LCD_setCursor(0,14);
     3ae:	6e e0       	ldi	r22, 0x0E	; 14
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendCharacter('S');
     3b6:	83 e5       	ldi	r24, 0x53	; 83
     3b8:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
			
			while( u16_l_distance <= 30 )
     3bc:	2c c0       	rjmp	.+88     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
			{
				DCM_controlDCMSpeed( 30 );
     3be:	8e e1       	ldi	r24, 0x1E	; 30
     3c0:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
				DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CCW );
     3c4:	62 e0       	ldi	r22, 0x02	; 2
     3c6:	80 e6       	ldi	r24, 0x60	; 96
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CCW );
     3ce:	62 e0       	ldi	r22, 0x02	; 2
     3d0:	84 e6       	ldi	r24, 0x64	; 100
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				
				u16_l_distance = US_readDistance();
     3d8:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     3dc:	8c 01       	movw	r16, r24
				
				LCD_setCursor( 0, 6 );
     3de:	66 e0       	ldi	r22, 0x06	; 6
     3e0:	80 e0       	ldi	r24, 0x00	; 0
     3e2:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendString( ( u8* ) "30" );
     3e6:	8f e9       	ldi	r24, 0x9F	; 159
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
				LCD_setCursor( 0, 14 );
     3ee:	6e e0       	ldi	r22, 0x0E	; 14
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendCharacter( 'B' );
     3f6:	82 e4       	ldi	r24, 0x42	; 66
     3f8:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
				LCD_setCursor( 1 ,7 );
     3fc:	67 e0       	ldi	r22, 0x07	; 7
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_floatToString( u16_l_distance );
     404:	b8 01       	movw	r22, r16
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     40e:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
				APP_stopCar();
     412:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
			LCD_setCursor( 0,6 );
			LCD_sendString( ( u8* ) "00" );
			LCD_setCursor(0,14);
			LCD_sendCharacter('S');
			
			while( u16_l_distance <= 30 )
     416:	0f 31       	cpi	r16, 0x1F	; 31
     418:	11 05       	cpc	r17, r1
     41a:	88 f2       	brcs	.-94     	; 0x3be <APP_startProgram+0x2a6>
				LCD_setCursor( 1 ,7 );
				LCD_floatToString( u16_l_distance );
				APP_stopCar();
			}
			
			if ( u8_g_select == APP_U8_CAR_ROTATE_RGT )
     41c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     420:	81 11       	cpse	r24, r1
     422:	1d c0       	rjmp	.+58     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
			{
				DCM_controlDCMSpeed( 30 );
     424:	8e e1       	ldi	r24, 0x1E	; 30
     426:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
				DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CCW );
     42a:	62 e0       	ldi	r22, 0x02	; 2
     42c:	80 e6       	ldi	r24, 0x60	; 96
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CW );
     434:	61 e0       	ldi	r22, 0x01	; 1
     436:	84 e6       	ldi	r24, 0x64	; 100
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				
				LCD_setCursor( 0 ,6 );
     43e:	66 e0       	ldi	r22, 0x06	; 6
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendString( ( u8* ) "30" );
     446:	8f e9       	ldi	r24, 0x9F	; 159
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
				LCD_setCursor( 0, 14 );
     44e:	6e e0       	ldi	r22, 0x0E	; 14
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendCharacter( 'R' );
     456:	82 e5       	ldi	r24, 0x52	; 82
     458:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
     45c:	1c c0       	rjmp	.+56     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
			}
			
			else
			{
				DCM_controlDCMSpeed( 30 );
     45e:	8e e1       	ldi	r24, 0x1E	; 30
     460:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
				DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CW );
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	80 e6       	ldi	r24, 0x60	; 96
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CCW );
     46e:	62 e0       	ldi	r22, 0x02	; 2
     470:	84 e6       	ldi	r24, 0x64	; 100
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
				
				LCD_setCursor( 0, 6 );
     478:	66 e0       	ldi	r22, 0x06	; 6
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendString( ( u8* ) "30" );
     480:	8f e9       	ldi	r24, 0x9F	; 159
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
				LCD_setCursor( 0, 14 );
     488:	6e e0       	ldi	r22, 0x0E	; 14
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
				LCD_sendCharacter( 'R' );
     490:	82 e5       	ldi	r24, 0x52	; 82
     492:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
			}
			
			TMR0_delayMS( 600 );
     496:	60 e0       	ldi	r22, 0x00	; 0
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	86 e1       	ldi	r24, 0x16	; 22
     49c:	94 e4       	ldi	r25, 0x44	; 68
     49e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
			
			u16_l_distance = US_readDistance();
     4a2:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     4a6:	8c 01       	movw	r16, r24
			
			LCD_setCursor( 1, 7 );
     4a8:	67 e0       	ldi	r22, 0x07	; 7
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_floatToString( u16_l_distance );
     4b0:	b8 01       	movw	r22, r16
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     4ba:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
			
			DCM_controlDCMSpeed( 30 );
     4be:	8e e1       	ldi	r24, 0x1E	; 30
     4c0:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
			DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_STOP );
     4c4:	60 e0       	ldi	r22, 0x00	; 0
     4c6:	80 e6       	ldi	r24, 0x60	; 96
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
     4ce:	60 e0       	ldi	r22, 0x00	; 0
     4d0:	84 e6       	ldi	r24, 0x64	; 100
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			
			LCD_setCursor( 0, 6 );
     4d8:	66 e0       	ldi	r22, 0x06	; 6
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendString( ( u8* ) "00" );
     4e0:	85 ea       	ldi	r24, 0xA5	; 165
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
			LCD_setCursor( 0, 14 );
     4e8:	6e e0       	ldi	r22, 0x0E	; 14
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendCharacter( 'S' );
     4f0:	83 e5       	ldi	r24, 0x53	; 83
     4f2:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
			APP_stopCar();
     4f6:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
     4fa:	8e ce       	rjmp	.-740    	; 0x218 <APP_startProgram+0x100>
		}
		/************************************************************************************/
		/*****************************Forth State********************************************/
		/************************************************************************************/
		else if ( u16_l_distance <= 20 )
     4fc:	05 31       	cpi	r16, 0x15	; 21
     4fe:	11 05       	cpc	r17, r1
     500:	08 f0       	brcs	.+2      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     502:	8a ce       	rjmp	.-748    	; 0x218 <APP_startProgram+0x100>
		{
			DCM_controlDCMSpeed( 30 );
     504:	8e e1       	ldi	r24, 0x1E	; 30
     506:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
			DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_STOP );
     50a:	60 e0       	ldi	r22, 0x00	; 0
     50c:	80 e6       	ldi	r24, 0x60	; 96
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	84 e6       	ldi	r24, 0x64	; 100
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
			
			u16_l_distance = US_readDistance();
     51e:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     522:	8c 01       	movw	r16, r24
			
			LCD_setCursor( 0, 6 );
     524:	66 e0       	ldi	r22, 0x06	; 6
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendString( ( u8* ) "00" );
     52c:	85 ea       	ldi	r24, 0xA5	; 165
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
			LCD_setCursor( 0, 14 );
     534:	6e e0       	ldi	r22, 0x0E	; 14
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_sendCharacter( 'S' );
     53c:	83 e5       	ldi	r24, 0x53	; 83
     53e:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
			LCD_setCursor( 1, 7 );
     542:	67 e0       	ldi	r22, 0x07	; 7
     544:	81 e0       	ldi	r24, 0x01	; 1
     546:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
			LCD_floatToString( u16_l_distance );
     54a:	b8 01       	movw	r22, r16
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	0e 94 b9 10 	call	0x2172	; 0x2172 <__floatunsisf>
     554:	0e 94 99 05 	call	0xb32	; 0xb32 <LCD_floatToString>
			
			u8 u8_l_counter = 0;
     558:	f1 2c       	mov	r15, r1
			
			while ( ( u8_l_counter < 4 ) && ( u16_l_distance <= 20 ) )
     55a:	3b c0       	rjmp	.+118    	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
			{
				APP_stopCar();
     55c:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
				
				u16_l_distance = US_readDistance();
     560:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     564:	8c 01       	movw	r16, r24
				
				u8_l_counter++;
     566:	f3 94       	inc	r15
				
				if ( u8_g_select == APP_U8_CAR_ROTATE_RGT )
     568:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     56c:	81 11       	cpse	r24, r1
     56e:	16 c0       	rjmp	.+44     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
				{
					DCM_controlDCMSpeed( 30 );
     570:	8e e1       	ldi	r24, 0x1E	; 30
     572:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
					DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CCW );
     576:	62 e0       	ldi	r22, 0x02	; 2
     578:	80 e6       	ldi	r24, 0x60	; 96
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
					DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CW );
     580:	61 e0       	ldi	r22, 0x01	; 1
     582:	84 e6       	ldi	r24, 0x64	; 100
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
					
					LCD_setCursor( 1, 0 );
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
					LCD_sendString((u8*)"Speed:30% Dir:R");
     592:	88 ea       	ldi	r24, 0xA8	; 168
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
     59a:	15 c0       	rjmp	.+42     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
				}
				
				else
				{
					DCM_controlDCMSpeed( 30 );
     59c:	8e e1       	ldi	r24, 0x1E	; 30
     59e:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
					DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_ROTATE_CW );
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	80 e6       	ldi	r24, 0x60	; 96
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
					DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_ROTATE_CCW );
     5ac:	62 e0       	ldi	r22, 0x02	; 2
     5ae:	84 e6       	ldi	r24, 0x64	; 100
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
					
					LCD_setCursor( 1, 0 );
     5b6:	60 e0       	ldi	r22, 0x00	; 0
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
					LCD_sendString( ( u8* ) "Speed:30% Dir:R" );
     5be:	88 ea       	ldi	r24, 0xA8	; 168
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
				}
				
				TMR0_delayMS( 600 );
     5c6:	60 e0       	ldi	r22, 0x00	; 0
     5c8:	70 e0       	ldi	r23, 0x00	; 0
     5ca:	86 e1       	ldi	r24, 0x16	; 22
     5cc:	94 e4       	ldi	r25, 0x44	; 68
     5ce:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
			LCD_setCursor( 1, 7 );
			LCD_floatToString( u16_l_distance );
			
			u8 u8_l_counter = 0;
			
			while ( ( u8_l_counter < 4 ) && ( u16_l_distance <= 20 ) )
     5d2:	83 e0       	ldi	r24, 0x03	; 3
     5d4:	8f 15       	cp	r24, r15
     5d6:	20 f0       	brcs	.+8      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     5d8:	05 31       	cpi	r16, 0x15	; 21
     5da:	11 05       	cpc	r17, r1
     5dc:	08 f4       	brcc	.+2      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     5de:	be cf       	rjmp	.-132    	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
				}
				
				TMR0_delayMS( 600 );
			}
			
			if ( u8_l_counter == 4 )
     5e0:	84 e0       	ldi	r24, 0x04	; 4
     5e2:	f8 12       	cpse	r15, r24
     5e4:	25 c0       	rjmp	.+74     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
     5e6:	21 c0       	rjmp	.+66     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
			{
				while( u16_l_distance <= 20 )
				{
					DCM_controlDCMSpeed( 30 );
     5e8:	8e e1       	ldi	r24, 0x1E	; 30
     5ea:	0e 94 a0 03 	call	0x740	; 0x740 <DCM_controlDCMSpeed>
					DCM_controlDCM( &ast_g_DCMs[0], DCM_U8_STOP );
     5ee:	60 e0       	ldi	r22, 0x00	; 0
     5f0:	80 e6       	ldi	r24, 0x60	; 96
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
					DCM_controlDCM( &ast_g_DCMs[1], DCM_U8_STOP );
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	84 e6       	ldi	r24, 0x64	; 100
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 67 03 	call	0x6ce	; 0x6ce <DCM_controlDCM>
					
					u16_l_distance = US_readDistance();
     602:	0e 94 76 06 	call	0xcec	; 0xcec <US_readDistance>
     606:	8c 01       	movw	r16, r24
					
					LCD_setCursor( 0, 6 );
     608:	66 e0       	ldi	r22, 0x06	; 6
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
					LCD_sendString( ( u8* ) "00" );
     610:	85 ea       	ldi	r24, 0xA5	; 165
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
					LCD_setCursor( 0, 14 );
     618:	6e e0       	ldi	r22, 0x0E	; 14
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	0e 94 6f 05 	call	0xade	; 0xade <LCD_setCursor>
					LCD_sendCharacter( 'S' );
     620:	83 e5       	ldi	r24, 0x53	; 83
     622:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
					APP_stopCar();
     626:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
				TMR0_delayMS( 600 );
			}
			
			if ( u8_l_counter == 4 )
			{
				while( u16_l_distance <= 20 )
     62a:	05 31       	cpi	r16, 0x15	; 21
     62c:	11 05       	cpc	r17, r1
     62e:	e0 f2       	brcs	.-72     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
					LCD_sendCharacter( 'S' );
					APP_stopCar();
				}
			}
			
			APP_stopCar();
     630:	0e 94 5d 00 	call	0xba	; 0xba <APP_stopCar>
     634:	f1 cd       	rjmp	.-1054   	; 0x218 <APP_startProgram+0x100>

00000636 <BTN_init>:
     636:	cf 93       	push	r28
     638:	df 93       	push	r29
     63a:	c8 2f       	mov	r28, r24
     63c:	d6 2f       	mov	r29, r22
     63e:	40 e0       	ldi	r20, 0x00	; 0
     640:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     644:	41 e0       	ldi	r20, 0x01	; 1
     646:	6d 2f       	mov	r22, r29
     648:	8c 2f       	mov	r24, r28
     64a:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	08 95       	ret

00000654 <BTN_read>:
     654:	0e 94 7e 07 	call	0xefc	; 0xefc <DIO_read>
     658:	08 95       	ret

0000065a <DCM_initialization>:
     65a:	ef 92       	push	r14
     65c:	ff 92       	push	r15
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	00 97       	sbiw	r24, 0x00	; 0
     666:	01 f5       	brne	.+64     	; 0x6a8 <DCM_initialization+0x4e>
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	2b c0       	rjmp	.+86     	; 0x6c2 <DCM_initialization+0x68>
     66c:	c1 2f       	mov	r28, r17
     66e:	d0 e0       	ldi	r29, 0x00	; 0
     670:	cc 0f       	add	r28, r28
     672:	dd 1f       	adc	r29, r29
     674:	cc 0f       	add	r28, r28
     676:	dd 1f       	adc	r29, r29
     678:	ce 0d       	add	r28, r14
     67a:	df 1d       	adc	r29, r15
     67c:	69 81       	ldd	r22, Y+1	; 0x01
     67e:	41 e0       	ldi	r20, 0x01	; 1
     680:	88 81       	ld	r24, Y
     682:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     686:	6b 81       	ldd	r22, Y+3	; 0x03
     688:	41 e0       	ldi	r20, 0x01	; 1
     68a:	8a 81       	ldd	r24, Y+2	; 0x02
     68c:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     690:	69 81       	ldd	r22, Y+1	; 0x01
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	88 81       	ld	r24, Y
     696:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     69a:	6b 81       	ldd	r22, Y+3	; 0x03
     69c:	40 e0       	ldi	r20, 0x00	; 0
     69e:	8a 81       	ldd	r24, Y+2	; 0x02
     6a0:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     6a4:	1f 5f       	subi	r17, 0xFF	; 255
     6a6:	02 c0       	rjmp	.+4      	; 0x6ac <DCM_initialization+0x52>
     6a8:	7c 01       	movw	r14, r24
     6aa:	10 e0       	ldi	r17, 0x00	; 0
     6ac:	12 30       	cpi	r17, 0x02	; 2
     6ae:	f0 f2       	brcs	.-68     	; 0x66c <DCM_initialization+0x12>
     6b0:	2d ec       	ldi	r18, 0xCD	; 205
     6b2:	3c ec       	ldi	r19, 0xCC	; 204
     6b4:	4c e4       	ldi	r20, 0x4C	; 76
     6b6:	5e e3       	ldi	r21, 0x3E	; 62
     6b8:	64 e0       	ldi	r22, 0x04	; 4
     6ba:	83 e0       	ldi	r24, 0x03	; 3
     6bc:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <PWM_initialization>
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	1f 91       	pop	r17
     6c8:	ff 90       	pop	r15
     6ca:	ef 90       	pop	r14
     6cc:	08 95       	ret

000006ce <DCM_controlDCM>:
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	00 97       	sbiw	r24, 0x00	; 0
     6d4:	69 f1       	breq	.+90     	; 0x730 <DCM_controlDCM+0x62>
     6d6:	63 30       	cpi	r22, 0x03	; 3
     6d8:	68 f5       	brcc	.+90     	; 0x734 <DCM_controlDCM+0x66>
     6da:	ec 01       	movw	r28, r24
     6dc:	61 30       	cpi	r22, 0x01	; 1
     6de:	81 f0       	breq	.+32     	; 0x700 <DCM_controlDCM+0x32>
     6e0:	18 f0       	brcs	.+6      	; 0x6e8 <DCM_controlDCM+0x1a>
     6e2:	62 30       	cpi	r22, 0x02	; 2
     6e4:	c9 f0       	breq	.+50     	; 0x718 <DCM_controlDCM+0x4a>
     6e6:	28 c0       	rjmp	.+80     	; 0x738 <DCM_controlDCM+0x6a>
     6e8:	69 81       	ldd	r22, Y+1	; 0x01
     6ea:	40 e0       	ldi	r20, 0x00	; 0
     6ec:	88 81       	ld	r24, Y
     6ee:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     6f2:	6b 81       	ldd	r22, Y+3	; 0x03
     6f4:	40 e0       	ldi	r20, 0x00	; 0
     6f6:	8a 81       	ldd	r24, Y+2	; 0x02
     6f8:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	1d c0       	rjmp	.+58     	; 0x73a <DCM_controlDCM+0x6c>
     700:	69 81       	ldd	r22, Y+1	; 0x01
     702:	41 e0       	ldi	r20, 0x01	; 1
     704:	88 81       	ld	r24, Y
     706:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     70a:	6b 81       	ldd	r22, Y+3	; 0x03
     70c:	40 e0       	ldi	r20, 0x00	; 0
     70e:	8a 81       	ldd	r24, Y+2	; 0x02
     710:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	11 c0       	rjmp	.+34     	; 0x73a <DCM_controlDCM+0x6c>
     718:	69 81       	ldd	r22, Y+1	; 0x01
     71a:	40 e0       	ldi	r20, 0x00	; 0
     71c:	88 81       	ld	r24, Y
     71e:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     722:	6b 81       	ldd	r22, Y+3	; 0x03
     724:	41 e0       	ldi	r20, 0x01	; 1
     726:	8a 81       	ldd	r24, Y+2	; 0x02
     728:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	05 c0       	rjmp	.+10     	; 0x73a <DCM_controlDCM+0x6c>
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	03 c0       	rjmp	.+6      	; 0x73a <DCM_controlDCM+0x6c>
     734:	80 e0       	ldi	r24, 0x00	; 0
     736:	01 c0       	rjmp	.+2      	; 0x73a <DCM_controlDCM+0x6c>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	df 91       	pop	r29
     73c:	cf 91       	pop	r28
     73e:	08 95       	ret

00000740 <DCM_controlDCMSpeed>:
     740:	85 36       	cpi	r24, 0x65	; 101
     742:	20 f4       	brcc	.+8      	; 0x74c <DCM_controlDCMSpeed+0xc>
     744:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <PWM_generatePWM>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	08 95       	ret
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	08 95       	ret

00000750 <ICU_init>:
 * 	2. Set the required edge detection.
 * 	3. Enable the External Interrupt source.
 * 	4. Initialize Timer1 Registers
 */
EN_state ICU_init(const ST_ICU_ConfigType * Config_Ptr)
{
     750:	0f 93       	push	r16
     752:	1f 93       	push	r17
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	cd b7       	in	r28, 0x3d	; 61
     75a:	de b7       	in	r29, 0x3e	; 62
     75c:	27 97       	sbiw	r28, 0x07	; 7
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	f8 94       	cli
     762:	de bf       	out	0x3e, r29	; 62
     764:	0f be       	out	0x3f, r0	; 63
     766:	cd bf       	out	0x3d, r28	; 61
	if(Config_Ptr != NULL)
     768:	00 97       	sbiw	r24, 0x00	; 0
     76a:	a9 f0       	breq	.+42     	; 0x796 <ICU_init+0x46>
     76c:	8c 01       	movw	r16, r24
	{
		ST_TME1_ConfigType ST_L_Timer;
		ST_L_Timer.CLK_source=Config_Ptr->clock;
     76e:	fc 01       	movw	r30, r24
     770:	80 81       	ld	r24, Z
     772:	8a 83       	std	Y+2, r24	; 0x02
		ST_L_Timer.TMR_mode=Normal;
     774:	19 82       	std	Y+1, r1	; 0x01
		ST_L_Timer.INT_state=Disable;
     776:	1b 82       	std	Y+3, r1	; 0x03
		TMR1_init(&ST_L_Timer);
     778:	ce 01       	movw	r24, r28
     77a:	01 96       	adiw	r24, 0x01	; 1
     77c:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <TMR1_init>
		EXI_enablePIE(Config_Ptr->source,Config_Ptr->edge);
     780:	f8 01       	movw	r30, r16
     782:	61 81       	ldd	r22, Z+1	; 0x01
     784:	82 81       	ldd	r24, Z+2	; 0x02
     786:	0e 94 2b 08 	call	0x1056	; 0x1056 <EXI_enablePIE>
		EN_g_edge=Config_Ptr->edge;
		EN_g_source=Config_Ptr->source;
     78a:	f8 01       	movw	r30, r16
     78c:	82 81       	ldd	r24, Z+2	; 0x02
     78e:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <EN_g_source>
		return valid;
     792:	81 e0       	ldi	r24, 0x01	; 1
     794:	01 c0       	rjmp	.+2      	; 0x798 <ICU_init+0x48>
	}
	return invalid;
     796:	80 e0       	ldi	r24, 0x00	; 0
}
     798:	27 96       	adiw	r28, 0x07	; 7
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	f8 94       	cli
     79e:	de bf       	out	0x3e, r29	; 62
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	cd bf       	out	0x3d, r28	; 61
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	1f 91       	pop	r17
     7aa:	0f 91       	pop	r16
     7ac:	08 95       	ret

000007ae <ICU_setCallBack>:
/*
 * Description: Function to set the Call Back function address.
 */
EN_state ICU_setCallBack(void(*a_ptr)(void))
{
	if(a_ptr != NULL)
     7ae:	00 97       	sbiw	r24, 0x00	; 0
     7b0:	39 f0       	breq	.+14     	; 0x7c0 <ICU_setCallBack+0x12>
     7b2:	bc 01       	movw	r22, r24
	{
		EXI_intSetCallBack(EN_g_source,a_ptr);
     7b4:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <EN_g_source>
     7b8:	0e 94 ac 08 	call	0x1158	; 0x1158 <EXI_intSetCallBack>
		return valid;
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	08 95       	ret
	}
	return invalid;
     7c0:	80 e0       	ldi	r24, 0x00	; 0
}
     7c2:	08 95       	ret

000007c4 <ICU_setEdgeDetectionType>:
 * Description: Function to set the required edge detection.
 */
EN_state ICU_setEdgeDetectionType(const EN_ICU_EdgeType edgeType)
{
	EN_state en_l_state;
		if(edgeType==RISING)
     7c4:	83 30       	cpi	r24, 0x03	; 3
     7c6:	39 f4       	brne	.+14     	; 0x7d6 <ICU_setEdgeDetectionType+0x12>
		{
			EXI_enablePIE(EN_g_source,EXI_U8_SENSE_RISING_EDGE);
     7c8:	63 e0       	ldi	r22, 0x03	; 3
     7ca:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <EN_g_source>
     7ce:	0e 94 2b 08 	call	0x1056	; 0x1056 <EXI_enablePIE>
			en_l_state=valid;
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	08 95       	ret
		}
		else if(edgeType==FALLING)
     7d6:	82 30       	cpi	r24, 0x02	; 2
     7d8:	39 f4       	brne	.+14     	; 0x7e8 <ICU_setEdgeDetectionType+0x24>
		{
			EXI_enablePIE(EN_g_source,EXI_U8_SENSE_FALLING_EDGE);
     7da:	62 e0       	ldi	r22, 0x02	; 2
     7dc:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <EN_g_source>
     7e0:	0e 94 2b 08 	call	0x1056	; 0x1056 <EXI_enablePIE>
			en_l_state=valid;
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	08 95       	ret
		}
		else
			en_l_state=invalid;
     7e8:	80 e0       	ldi	r24, 0x00	; 0
			
		return en_l_state;
}
     7ea:	08 95       	ret

000007ec <ICU_getInputCaptureValue>:
 * Description: Function to get the Timer1 Value when the input is captured
 *              The value stored at Input Capture Register ICR1
 */
u16 ICU_getInputCaptureValue(void)
{
	return TMR1_readTime();
     7ec:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <TMR1_readTime>
}
     7f0:	08 95       	ret

000007f2 <ICU_clearTimerValue>:
/*
 * Description: Function to clear the Timer1 Value to start count from ZERO
 */
void ICU_clearTimerValue(void)
{
	TMR1_clear();
     7f2:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <TMR1_clear>
     7f6:	08 95       	ret

000007f8 <KPD_initialization>:
     7f8:	41 e0       	ldi	r20, 0x01	; 1
     7fa:	62 e0       	ldi	r22, 0x02	; 2
     7fc:	82 e0       	ldi	r24, 0x02	; 2
     7fe:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     802:	40 e0       	ldi	r20, 0x00	; 0
     804:	65 e0       	ldi	r22, 0x05	; 5
     806:	82 e0       	ldi	r24, 0x02	; 2
     808:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	66 e0       	ldi	r22, 0x06	; 6
     810:	82 e0       	ldi	r24, 0x02	; 2
     812:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     816:	41 e0       	ldi	r20, 0x01	; 1
     818:	62 e0       	ldi	r22, 0x02	; 2
     81a:	82 e0       	ldi	r24, 0x02	; 2
     81c:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     820:	41 e0       	ldi	r20, 0x01	; 1
     822:	65 e0       	ldi	r22, 0x05	; 5
     824:	82 e0       	ldi	r24, 0x02	; 2
     826:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     82a:	41 e0       	ldi	r20, 0x01	; 1
     82c:	66 e0       	ldi	r22, 0x06	; 6
     82e:	82 e0       	ldi	r24, 0x02	; 2
     830:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     834:	08 95       	ret

00000836 <KPD_getPressedKey>:
     836:	af 92       	push	r10
     838:	bf 92       	push	r11
     83a:	cf 92       	push	r12
     83c:	df 92       	push	r13
     83e:	ef 92       	push	r14
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	1f 92       	push	r1
     84c:	cd b7       	in	r28, 0x3d	; 61
     84e:	de b7       	in	r29, 0x3e	; 62
     850:	00 97       	sbiw	r24, 0x00	; 0
     852:	09 f4       	brne	.+2      	; 0x856 <KPD_getPressedKey+0x20>
     854:	56 c0       	rjmp	.+172    	; 0x902 <__stack+0xa3>
     856:	7c 01       	movw	r14, r24
     858:	8f ef       	ldi	r24, 0xFF	; 255
     85a:	f7 01       	movw	r30, r14
     85c:	80 83       	st	Z, r24
     85e:	00 e0       	ldi	r16, 0x00	; 0
     860:	c1 2c       	mov	r12, r1
     862:	4a c0       	rjmp	.+148    	; 0x8f8 <__stack+0x99>
     864:	40 e0       	ldi	r20, 0x00	; 0
     866:	62 e0       	ldi	r22, 0x02	; 2
     868:	82 e0       	ldi	r24, 0x02	; 2
     86a:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     86e:	10 e0       	ldi	r17, 0x00	; 0
     870:	38 c0       	rjmp	.+112    	; 0x8e2 <__stack+0x83>
     872:	a1 2e       	mov	r10, r17
     874:	b1 2c       	mov	r11, r1
     876:	f5 01       	movw	r30, r10
     878:	e8 54       	subi	r30, 0x48	; 72
     87a:	ff 4f       	sbci	r31, 0xFF	; 255
     87c:	d0 80       	ld	r13, Z
     87e:	ae 01       	movw	r20, r28
     880:	4f 5f       	subi	r20, 0xFF	; 255
     882:	5f 4f       	sbci	r21, 0xFF	; 255
     884:	6d 2d       	mov	r22, r13
     886:	82 e0       	ldi	r24, 0x02	; 2
     888:	0e 94 7e 07 	call	0xefc	; 0xefc <DIO_read>
     88c:	89 81       	ldd	r24, Y+1	; 0x01
     88e:	81 11       	cpse	r24, r1
     890:	27 c0       	rjmp	.+78     	; 0x8e0 <__stack+0x81>
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	80 ea       	ldi	r24, 0xA0	; 160
     898:	91 e4       	ldi	r25, 0x41	; 65
     89a:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     89e:	ae 01       	movw	r20, r28
     8a0:	4f 5f       	subi	r20, 0xFF	; 255
     8a2:	5f 4f       	sbci	r21, 0xFF	; 255
     8a4:	6d 2d       	mov	r22, r13
     8a6:	82 e0       	ldi	r24, 0x02	; 2
     8a8:	0e 94 7e 07 	call	0xefc	; 0xefc <DIO_read>
     8ac:	07 c0       	rjmp	.+14     	; 0x8bc <__stack+0x5d>
     8ae:	ae 01       	movw	r20, r28
     8b0:	4f 5f       	subi	r20, 0xFF	; 255
     8b2:	5f 4f       	sbci	r21, 0xFF	; 255
     8b4:	6d 2d       	mov	r22, r13
     8b6:	82 e0       	ldi	r24, 0x02	; 2
     8b8:	0e 94 7e 07 	call	0xefc	; 0xefc <DIO_read>
     8bc:	89 81       	ldd	r24, Y+1	; 0x01
     8be:	88 23       	and	r24, r24
     8c0:	b1 f3       	breq	.-20     	; 0x8ae <__stack+0x4f>
     8c2:	80 2f       	mov	r24, r16
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	88 0f       	add	r24, r24
     8c8:	99 1f       	adc	r25, r25
     8ca:	86 54       	subi	r24, 0x46	; 70
     8cc:	9f 4f       	sbci	r25, 0xFF	; 255
     8ce:	fc 01       	movw	r30, r24
     8d0:	ea 0d       	add	r30, r10
     8d2:	fb 1d       	adc	r31, r11
     8d4:	80 81       	ld	r24, Z
     8d6:	f7 01       	movw	r30, r14
     8d8:	80 83       	st	Z, r24
     8da:	cc 24       	eor	r12, r12
     8dc:	c3 94       	inc	r12
     8de:	03 c0       	rjmp	.+6      	; 0x8e6 <__stack+0x87>
     8e0:	1f 5f       	subi	r17, 0xFF	; 255
     8e2:	12 30       	cpi	r17, 0x02	; 2
     8e4:	30 f2       	brcs	.-116    	; 0x872 <__stack+0x13>
     8e6:	41 e0       	ldi	r20, 0x01	; 1
     8e8:	62 e0       	ldi	r22, 0x02	; 2
     8ea:	82 e0       	ldi	r24, 0x02	; 2
     8ec:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     8f0:	f1 e0       	ldi	r31, 0x01	; 1
     8f2:	cf 16       	cp	r12, r31
     8f4:	21 f0       	breq	.+8      	; 0x8fe <__stack+0x9f>
     8f6:	0f 5f       	subi	r16, 0xFF	; 255
     8f8:	00 23       	and	r16, r16
     8fa:	09 f4       	brne	.+2      	; 0x8fe <__stack+0x9f>
     8fc:	b3 cf       	rjmp	.-154    	; 0x864 <__stack+0x5>
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	01 c0       	rjmp	.+2      	; 0x904 <__stack+0xa5>
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	0f 90       	pop	r0
     906:	df 91       	pop	r29
     908:	cf 91       	pop	r28
     90a:	1f 91       	pop	r17
     90c:	0f 91       	pop	r16
     90e:	ff 90       	pop	r15
     910:	ef 90       	pop	r14
     912:	df 90       	pop	r13
     914:	cf 90       	pop	r12
     916:	bf 90       	pop	r11
     918:	af 90       	pop	r10
     91a:	08 95       	ret

0000091c <LCD_sendCommand>:
     91c:	cf 93       	push	r28
     91e:	c8 2f       	mov	r28, r24
     920:	68 2f       	mov	r22, r24
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	0e 94 df 07 	call	0xfbe	; 0xfbe <DIO_setHigherNibble>
     928:	40 e0       	ldi	r20, 0x00	; 0
     92a:	61 e0       	ldi	r22, 0x01	; 1
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	62 e0       	ldi	r22, 0x02	; 2
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     93c:	41 e0       	ldi	r20, 0x01	; 1
     93e:	63 e0       	ldi	r22, 0x03	; 3
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	70 e0       	ldi	r23, 0x00	; 0
     94a:	80 e8       	ldi	r24, 0x80	; 128
     94c:	9f e3       	ldi	r25, 0x3F	; 63
     94e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     952:	40 e0       	ldi	r20, 0x00	; 0
     954:	63 e0       	ldi	r22, 0x03	; 3
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     95c:	60 e0       	ldi	r22, 0x00	; 0
     95e:	70 e0       	ldi	r23, 0x00	; 0
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	90 e4       	ldi	r25, 0x40	; 64
     964:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     968:	6c 2f       	mov	r22, r28
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	0e 94 ff 07 	call	0xffe	; 0xffe <DIO_setLowerNibble>
     970:	40 e0       	ldi	r20, 0x00	; 0
     972:	61 e0       	ldi	r22, 0x01	; 1
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     97a:	40 e0       	ldi	r20, 0x00	; 0
     97c:	62 e0       	ldi	r22, 0x02	; 2
     97e:	80 e0       	ldi	r24, 0x00	; 0
     980:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     984:	41 e0       	ldi	r20, 0x01	; 1
     986:	63 e0       	ldi	r22, 0x03	; 3
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     98e:	60 e0       	ldi	r22, 0x00	; 0
     990:	70 e0       	ldi	r23, 0x00	; 0
     992:	80 e8       	ldi	r24, 0x80	; 128
     994:	9f e3       	ldi	r25, 0x3F	; 63
     996:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     99a:	40 e0       	ldi	r20, 0x00	; 0
     99c:	63 e0       	ldi	r22, 0x03	; 3
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     9a4:	60 e0       	ldi	r22, 0x00	; 0
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	80 e4       	ldi	r24, 0x40	; 64
     9aa:	90 e4       	ldi	r25, 0x40	; 64
     9ac:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     9b0:	cf 91       	pop	r28
     9b2:	08 95       	ret

000009b4 <LCD_init>:
     9b4:	41 e0       	ldi	r20, 0x01	; 1
     9b6:	67 e0       	ldi	r22, 0x07	; 7
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9be:	41 e0       	ldi	r20, 0x01	; 1
     9c0:	66 e0       	ldi	r22, 0x06	; 6
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9c8:	41 e0       	ldi	r20, 0x01	; 1
     9ca:	65 e0       	ldi	r22, 0x05	; 5
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9d2:	41 e0       	ldi	r20, 0x01	; 1
     9d4:	64 e0       	ldi	r22, 0x04	; 4
     9d6:	80 e0       	ldi	r24, 0x00	; 0
     9d8:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9dc:	41 e0       	ldi	r20, 0x01	; 1
     9de:	63 e0       	ldi	r22, 0x03	; 3
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9e6:	41 e0       	ldi	r20, 0x01	; 1
     9e8:	62 e0       	ldi	r22, 0x02	; 2
     9ea:	80 e0       	ldi	r24, 0x00	; 0
     9ec:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9f0:	41 e0       	ldi	r20, 0x01	; 1
     9f2:	61 e0       	ldi	r22, 0x01	; 1
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
     9fa:	60 e0       	ldi	r22, 0x00	; 0
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	80 ea       	ldi	r24, 0xA0	; 160
     a00:	91 e4       	ldi	r25, 0x41	; 65
     a02:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     a06:	82 e0       	ldi	r24, 0x02	; 2
     a08:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     a0c:	88 e2       	ldi	r24, 0x28	; 40
     a0e:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     a12:	8c e0       	ldi	r24, 0x0C	; 12
     a14:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     a18:	86 e0       	ldi	r24, 0x06	; 6
     a1a:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     a24:	80 e8       	ldi	r24, 0x80	; 128
     a26:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     a2a:	08 95       	ret

00000a2c <LCD_sendCharacter>:
     a2c:	cf 93       	push	r28
     a2e:	c8 2f       	mov	r28, r24
     a30:	68 2f       	mov	r22, r24
     a32:	80 e0       	ldi	r24, 0x00	; 0
     a34:	0e 94 df 07 	call	0xfbe	; 0xfbe <DIO_setHigherNibble>
     a38:	41 e0       	ldi	r20, 0x01	; 1
     a3a:	61 e0       	ldi	r22, 0x01	; 1
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a42:	40 e0       	ldi	r20, 0x00	; 0
     a44:	62 e0       	ldi	r22, 0x02	; 2
     a46:	80 e0       	ldi	r24, 0x00	; 0
     a48:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a4c:	41 e0       	ldi	r20, 0x01	; 1
     a4e:	63 e0       	ldi	r22, 0x03	; 3
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	80 e8       	ldi	r24, 0x80	; 128
     a5c:	9f e3       	ldi	r25, 0x3F	; 63
     a5e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     a62:	40 e0       	ldi	r20, 0x00	; 0
     a64:	63 e0       	ldi	r22, 0x03	; 3
     a66:	80 e0       	ldi	r24, 0x00	; 0
     a68:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a6c:	60 e0       	ldi	r22, 0x00	; 0
     a6e:	70 e0       	ldi	r23, 0x00	; 0
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	90 e4       	ldi	r25, 0x40	; 64
     a74:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     a78:	6c 2f       	mov	r22, r28
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	0e 94 ff 07 	call	0xffe	; 0xffe <DIO_setLowerNibble>
     a80:	41 e0       	ldi	r20, 0x01	; 1
     a82:	61 e0       	ldi	r22, 0x01	; 1
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a8a:	40 e0       	ldi	r20, 0x00	; 0
     a8c:	62 e0       	ldi	r22, 0x02	; 2
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a94:	41 e0       	ldi	r20, 0x01	; 1
     a96:	63 e0       	ldi	r22, 0x03	; 3
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     a9e:	60 e0       	ldi	r22, 0x00	; 0
     aa0:	70 e0       	ldi	r23, 0x00	; 0
     aa2:	80 e8       	ldi	r24, 0x80	; 128
     aa4:	9f e3       	ldi	r25, 0x3F	; 63
     aa6:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     aaa:	40 e0       	ldi	r20, 0x00	; 0
     aac:	63 e0       	ldi	r22, 0x03	; 3
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     ab4:	60 e0       	ldi	r22, 0x00	; 0
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	80 e0       	ldi	r24, 0x00	; 0
     aba:	90 e4       	ldi	r25, 0x40	; 64
     abc:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     ac0:	cf 91       	pop	r28
     ac2:	08 95       	ret

00000ac4 <LCD_clear>:
     ac4:	81 e0       	ldi	r24, 0x01	; 1
     ac6:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     aca:	60 e0       	ldi	r22, 0x00	; 0
     acc:	70 e0       	ldi	r23, 0x00	; 0
     ace:	80 e0       	ldi	r24, 0x00	; 0
     ad0:	90 e4       	ldi	r25, 0x40	; 64
     ad2:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
     ad6:	80 e8       	ldi	r24, 0x80	; 128
     ad8:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     adc:	08 95       	ret

00000ade <LCD_setCursor>:
     ade:	81 11       	cpse	r24, r1
     ae0:	08 c0       	rjmp	.+16     	; 0xaf2 <LCD_setCursor+0x14>
     ae2:	60 31       	cpi	r22, 0x10	; 16
     ae4:	30 f4       	brcc	.+12     	; 0xaf2 <LCD_setCursor+0x14>
     ae6:	86 2f       	mov	r24, r22
     ae8:	8f 70       	andi	r24, 0x0F	; 15
     aea:	80 68       	ori	r24, 0x80	; 128
     aec:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     af0:	08 95       	ret
     af2:	81 30       	cpi	r24, 0x01	; 1
     af4:	39 f4       	brne	.+14     	; 0xb04 <LCD_setCursor+0x26>
     af6:	60 31       	cpi	r22, 0x10	; 16
     af8:	28 f4       	brcc	.+10     	; 0xb04 <LCD_setCursor+0x26>
     afa:	86 2f       	mov	r24, r22
     afc:	8f 70       	andi	r24, 0x0F	; 15
     afe:	80 6c       	ori	r24, 0xC0	; 192
     b00:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_sendCommand>
     b04:	08 95       	ret

00000b06 <LCD_sendString>:
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	8c 01       	movw	r16, r24
     b10:	c0 e0       	ldi	r28, 0x00	; 0
     b12:	d0 e0       	ldi	r29, 0x00	; 0
     b14:	03 c0       	rjmp	.+6      	; 0xb1c <LCD_sendString+0x16>
     b16:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_sendCharacter>
     b1a:	21 96       	adiw	r28, 0x01	; 1
     b1c:	f8 01       	movw	r30, r16
     b1e:	ec 0f       	add	r30, r28
     b20:	fd 1f       	adc	r31, r29
     b22:	80 81       	ld	r24, Z
     b24:	81 11       	cpse	r24, r1
     b26:	f7 cf       	rjmp	.-18     	; 0xb16 <LCD_sendString+0x10>
     b28:	df 91       	pop	r29
     b2a:	cf 91       	pop	r28
     b2c:	1f 91       	pop	r17
     b2e:	0f 91       	pop	r16
     b30:	08 95       	ret

00000b32 <LCD_floatToString>:
     b32:	0f 93       	push	r16
     b34:	1f 93       	push	r17
     b36:	cf 93       	push	r28
     b38:	df 93       	push	r29
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2a 97       	sbiw	r28, 0x0a	; 10
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	40 e2       	ldi	r20, 0x20	; 32
     b50:	51 e4       	ldi	r21, 0x41	; 65
     b52:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__mulsf3>
     b56:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
     b5a:	10 e0       	ldi	r17, 0x00	; 0
     b5c:	00 e0       	ldi	r16, 0x00	; 0
     b5e:	14 c0       	rjmp	.+40     	; 0xb88 <LCD_floatToString+0x56>
     b60:	2a e0       	ldi	r18, 0x0A	; 10
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	40 e0       	ldi	r20, 0x00	; 0
     b66:	50 e0       	ldi	r21, 0x00	; 0
     b68:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__udivmodsi4>
     b6c:	e1 e0       	ldi	r30, 0x01	; 1
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	ec 0f       	add	r30, r28
     b72:	fd 1f       	adc	r31, r29
     b74:	e1 0f       	add	r30, r17
     b76:	f1 1d       	adc	r31, r1
     b78:	60 5d       	subi	r22, 0xD0	; 208
     b7a:	60 83       	st	Z, r22
     b7c:	62 2f       	mov	r22, r18
     b7e:	73 2f       	mov	r23, r19
     b80:	84 2f       	mov	r24, r20
     b82:	95 2f       	mov	r25, r21
     b84:	0f 5f       	subi	r16, 0xFF	; 255
     b86:	1f 5f       	subi	r17, 0xFF	; 255
     b88:	61 15       	cp	r22, r1
     b8a:	71 05       	cpc	r23, r1
     b8c:	81 05       	cpc	r24, r1
     b8e:	91 05       	cpc	r25, r1
     b90:	39 f7       	brne	.-50     	; 0xb60 <LCD_floatToString+0x2e>
     b92:	8f ef       	ldi	r24, 0xFF	; 255
     b94:	81 0f       	add	r24, r17
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	12 c0       	rjmp	.+36     	; 0xbbe <LCD_floatToString+0x8c>
     b9a:	a1 e0       	ldi	r26, 0x01	; 1
     b9c:	b0 e0       	ldi	r27, 0x00	; 0
     b9e:	ac 0f       	add	r26, r28
     ba0:	bd 1f       	adc	r27, r29
     ba2:	a8 0f       	add	r26, r24
     ba4:	b1 1d       	adc	r27, r1
     ba6:	2c 91       	ld	r18, X
     ba8:	e1 e0       	ldi	r30, 0x01	; 1
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	ec 0f       	add	r30, r28
     bae:	fd 1f       	adc	r31, r29
     bb0:	e9 0f       	add	r30, r25
     bb2:	f1 1d       	adc	r31, r1
     bb4:	30 81       	ld	r19, Z
     bb6:	3c 93       	st	X, r19
     bb8:	20 83       	st	Z, r18
     bba:	81 50       	subi	r24, 0x01	; 1
     bbc:	9f 5f       	subi	r25, 0xFF	; 255
     bbe:	98 17       	cp	r25, r24
     bc0:	60 f3       	brcs	.-40     	; 0xb9a <LCD_floatToString+0x68>
     bc2:	80 2f       	mov	r24, r16
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	fc 01       	movw	r30, r24
     bc8:	31 97       	sbiw	r30, 0x01	; 1
     bca:	21 e0       	ldi	r18, 0x01	; 1
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	2c 0f       	add	r18, r28
     bd0:	3d 1f       	adc	r19, r29
     bd2:	e2 0f       	add	r30, r18
     bd4:	f3 1f       	adc	r31, r19
     bd6:	20 81       	ld	r18, Z
     bd8:	a1 e0       	ldi	r26, 0x01	; 1
     bda:	b0 e0       	ldi	r27, 0x00	; 0
     bdc:	ac 0f       	add	r26, r28
     bde:	bd 1f       	adc	r27, r29
     be0:	a8 0f       	add	r26, r24
     be2:	b9 1f       	adc	r27, r25
     be4:	2c 93       	st	X, r18
     be6:	2e e2       	ldi	r18, 0x2E	; 46
     be8:	20 83       	st	Z, r18
     bea:	01 96       	adiw	r24, 0x01	; 1
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	ec 0f       	add	r30, r28
     bf2:	fd 1f       	adc	r31, r29
     bf4:	e8 0f       	add	r30, r24
     bf6:	f9 1f       	adc	r31, r25
     bf8:	10 82       	st	Z, r1
     bfa:	ce 01       	movw	r24, r28
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	0e 94 83 05 	call	0xb06	; 0xb06 <LCD_sendString>
     c02:	2a 96       	adiw	r28, 0x0a	; 10
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	de bf       	out	0x3e, r29	; 62
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	cd bf       	out	0x3d, r28	; 61
     c0e:	df 91       	pop	r29
     c10:	cf 91       	pop	r28
     c12:	1f 91       	pop	r17
     c14:	0f 91       	pop	r16
     c16:	08 95       	ret

00000c18 <US_edgeProcessing>:

/*============= FUNCTION DEFINITION =============*/

void US_edgeProcessing(void)
{
	u8_g_edgeCount++;
     c18:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <u8_g_edgeCount>
     c1c:	8f 5f       	subi	r24, 0xFF	; 255
     c1e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <u8_g_edgeCount>
	if(u8_g_edgeCount==1)
     c22:	81 30       	cpi	r24, 0x01	; 1
     c24:	31 f4       	brne	.+12     	; 0xc32 <US_edgeProcessing+0x1a>
	{
		ICU_clearTimerValue();
     c26:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <ICU_clearTimerValue>
		ICU_setEdgeDetectionType(FALLING);
     c2a:	82 e0       	ldi	r24, 0x02	; 2
     c2c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <ICU_setEdgeDetectionType>
     c30:	08 95       	ret
	}
	else if(u8_g_edgeCount==2)
     c32:	82 30       	cpi	r24, 0x02	; 2
     c34:	59 f4       	brne	.+22     	; 0xc4c <US_edgeProcessing+0x34>
	{
		u16_g_timeHigh=ICU_getInputCaptureValue();
     c36:	0e 94 f6 03 	call	0x7ec	; 0x7ec <ICU_getInputCaptureValue>
     c3a:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <u16_g_timeHigh+0x1>
     c3e:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <u16_g_timeHigh>
		ICU_clearTimerValue();
     c42:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <ICU_clearTimerValue>
		ICU_setEdgeDetectionType(RISING);
     c46:	83 e0       	ldi	r24, 0x03	; 3
     c48:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <ICU_setEdgeDetectionType>
     c4c:	08 95       	ret

00000c4e <US_init>:
  u8 a_triggerPort:trigger port 
  a_triggerPin:trigger pin
  en_a_echoPin: interrupt source pin [EN_INT0,EN_INT1,EN_INT2]
 */
EN_state US_init(u8 a_triggerPort,u8 a_triggerPin,EN_ICU_Source en_a_echoPin)
{
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	00 d0       	rcall	.+0      	; 0xc58 <US_init+0xa>
     c58:	1f 92       	push	r1
     c5a:	cd b7       	in	r28, 0x3d	; 61
     c5c:	de b7       	in	r29, 0x3e	; 62
	if(a_triggerPin <= P7 && a_triggerPin >= P0 && a_triggerPort >= A && a_triggerPort <= D && en_a_echoPin < MAX_INT)
     c5e:	68 30       	cpi	r22, 0x08	; 8
     c60:	18 f5       	brcc	.+70     	; 0xca8 <US_init+0x5a>
     c62:	84 30       	cpi	r24, 0x04	; 4
     c64:	18 f5       	brcc	.+70     	; 0xcac <US_init+0x5e>
     c66:	43 30       	cpi	r20, 0x03	; 3
     c68:	18 f5       	brcc	.+70     	; 0xcb0 <US_init+0x62>
     c6a:	16 2f       	mov	r17, r22
     c6c:	08 2f       	mov	r16, r24
	{
		ST_ICU_ConfigType ST_L_IcuConfig={F_CPU_8,RISING,en_a_echoPin};
     c6e:	82 e0       	ldi	r24, 0x02	; 2
     c70:	89 83       	std	Y+1, r24	; 0x01
     c72:	83 e0       	ldi	r24, 0x03	; 3
     c74:	8a 83       	std	Y+2, r24	; 0x02
     c76:	4b 83       	std	Y+3, r20	; 0x03
		u8_g_triggerPort=a_triggerPort;
     c78:	00 93 bf 00 	sts	0x00BF, r16	; 0x8000bf <u8_g_triggerPort>
		u8_g_triggerPin=a_triggerPin;
     c7c:	60 93 be 00 	sts	0x00BE, r22	; 0x8000be <u8_g_triggerPin>
		ICU_init(&ST_L_IcuConfig);
     c80:	ce 01       	movw	r24, r28
     c82:	01 96       	adiw	r24, 0x01	; 1
     c84:	0e 94 a8 03 	call	0x750	; 0x750 <ICU_init>
		ICU_setCallBack(US_edgeProcessing);
     c88:	8c e0       	ldi	r24, 0x0C	; 12
     c8a:	96 e0       	ldi	r25, 0x06	; 6
     c8c:	0e 94 d7 03 	call	0x7ae	; 0x7ae <ICU_setCallBack>
		DIO_init(a_triggerPort, a_triggerPin, OUT);		 //setup trigger pin direction as output
     c90:	41 e0       	ldi	r20, 0x01	; 1
     c92:	61 2f       	mov	r22, r17
     c94:	80 2f       	mov	r24, r16
     c96:	0e 94 94 06 	call	0xd28	; 0xd28 <DIO_init>
		DIO_write(a_triggerPort, a_triggerPin, LOW);
     c9a:	40 e0       	ldi	r20, 0x00	; 0
     c9c:	61 2f       	mov	r22, r17
     c9e:	80 2f       	mov	r24, r16
     ca0:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
		return valid;
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	05 c0       	rjmp	.+10     	; 0xcb2 <US_init+0x64>
	}
	return invalid;
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	03 c0       	rjmp	.+6      	; 0xcb2 <US_init+0x64>
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	01 c0       	rjmp	.+2      	; 0xcb2 <US_init+0x64>
     cb0:	80 e0       	ldi	r24, 0x00	; 0
}
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
     cb8:	df 91       	pop	r29
     cba:	cf 91       	pop	r28
     cbc:	1f 91       	pop	r17
     cbe:	0f 91       	pop	r16
     cc0:	08 95       	ret

00000cc2 <US_Trigger>:


void US_Trigger(void)
{
	DIO_write(u8_g_triggerPort, u8_g_triggerPin,HIGH);
     cc2:	41 e0       	ldi	r20, 0x01	; 1
     cc4:	60 91 be 00 	lds	r22, 0x00BE	; 0x8000be <u8_g_triggerPin>
     cc8:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <u8_g_triggerPort>
     ccc:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
	//_delay_us(10);
	TMR0_delayMS(1);
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	80 e8       	ldi	r24, 0x80	; 128
     cd6:	9f e3       	ldi	r25, 0x3F	; 63
     cd8:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <TMR0_delayMS>
	DIO_write(u8_g_triggerPort, u8_g_triggerPin,LOW);
     cdc:	40 e0       	ldi	r20, 0x00	; 0
     cde:	60 91 be 00 	lds	r22, 0x00BE	; 0x8000be <u8_g_triggerPin>
     ce2:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <u8_g_triggerPort>
     ce6:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_write>
     cea:	08 95       	ret

00000cec <US_readDistance>:
}

u16 US_readDistance(void)
{
	u16 u16_L_value=0;
	US_Trigger();
     cec:	0e 94 61 06 	call	0xcc2	; 0xcc2 <US_Trigger>
	while(u8_g_edgeCount != 2);   //wait until ultrasonic sound to travel towards the object and return.
     cf0:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <u8_g_edgeCount>
     cf4:	82 30       	cpi	r24, 0x02	; 2
     cf6:	e1 f7       	brne	.-8      	; 0xcf0 <US_readDistance+0x4>
	u16_L_value=((u16)u16_g_timeHigh/58);
     cf8:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <u16_g_timeHigh>
     cfc:	30 91 c1 00 	lds	r19, 0x00C1	; 0x8000c1 <u16_g_timeHigh+0x1>
     d00:	af e9       	ldi	r26, 0x9F	; 159
     d02:	b6 e4       	ldi	r27, 0x46	; 70
     d04:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__umulhisi3>
	u8_g_edgeCount=0;            //clear edge count to be ready for new read
     d08:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <u8_g_edgeCount>
	return u16_L_value;
}
     d0c:	92 95       	swap	r25
     d0e:	82 95       	swap	r24
     d10:	8f 70       	andi	r24, 0x0F	; 15
     d12:	89 27       	eor	r24, r25
     d14:	9f 70       	andi	r25, 0x0F	; 15
     d16:	89 27       	eor	r24, r25
     d18:	08 95       	ret

00000d1a <main>:
/* Main */
#include "main.h"

int main(void)
{
	APP_initialization();
     d1a:	0e 94 49 00 	call	0x92	; 0x92 <APP_initialization>
	APP_startProgram();
     d1e:	0e 94 8c 00 	call	0x118	; 0x118 <APP_startProgram>
	
	return 0;
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	08 95       	ret

00000d28 <DIO_init>:
     d28:	81 30       	cpi	r24, 0x01	; 1
     d2a:	11 f1       	breq	.+68     	; 0xd70 <DIO_init+0x48>
     d2c:	30 f0       	brcs	.+12     	; 0xd3a <DIO_init+0x12>
     d2e:	82 30       	cpi	r24, 0x02	; 2
     d30:	d1 f1       	breq	.+116    	; 0xda6 <DIO_init+0x7e>
     d32:	83 30       	cpi	r24, 0x03	; 3
     d34:	09 f4       	brne	.+2      	; 0xd38 <DIO_init+0x10>
     d36:	52 c0       	rjmp	.+164    	; 0xddc <DIO_init+0xb4>
     d38:	08 95       	ret
     d3a:	41 30       	cpi	r20, 0x01	; 1
     d3c:	59 f4       	brne	.+22     	; 0xd54 <DIO_init+0x2c>
     d3e:	2a b3       	in	r18, 0x1a	; 26
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <DIO_init+0x22>
     d46:	88 0f       	add	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	6a 95       	dec	r22
     d4c:	e2 f7       	brpl	.-8      	; 0xd46 <DIO_init+0x1e>
     d4e:	82 2b       	or	r24, r18
     d50:	8a bb       	out	0x1a, r24	; 26
     d52:	08 95       	ret
     d54:	41 11       	cpse	r20, r1
     d56:	5c c0       	rjmp	.+184    	; 0xe10 <DIO_init+0xe8>
     d58:	2a b3       	in	r18, 0x1a	; 26
     d5a:	81 e0       	ldi	r24, 0x01	; 1
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <DIO_init+0x3c>
     d60:	88 0f       	add	r24, r24
     d62:	99 1f       	adc	r25, r25
     d64:	6a 95       	dec	r22
     d66:	e2 f7       	brpl	.-8      	; 0xd60 <DIO_init+0x38>
     d68:	80 95       	com	r24
     d6a:	82 23       	and	r24, r18
     d6c:	8a bb       	out	0x1a, r24	; 26
     d6e:	08 95       	ret
     d70:	41 30       	cpi	r20, 0x01	; 1
     d72:	59 f4       	brne	.+22     	; 0xd8a <DIO_init+0x62>
     d74:	27 b3       	in	r18, 0x17	; 23
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	02 c0       	rjmp	.+4      	; 0xd80 <DIO_init+0x58>
     d7c:	88 0f       	add	r24, r24
     d7e:	99 1f       	adc	r25, r25
     d80:	6a 95       	dec	r22
     d82:	e2 f7       	brpl	.-8      	; 0xd7c <DIO_init+0x54>
     d84:	82 2b       	or	r24, r18
     d86:	87 bb       	out	0x17, r24	; 23
     d88:	08 95       	ret
     d8a:	41 11       	cpse	r20, r1
     d8c:	41 c0       	rjmp	.+130    	; 0xe10 <DIO_init+0xe8>
     d8e:	27 b3       	in	r18, 0x17	; 23
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <DIO_init+0x72>
     d96:	88 0f       	add	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	6a 95       	dec	r22
     d9c:	e2 f7       	brpl	.-8      	; 0xd96 <DIO_init+0x6e>
     d9e:	80 95       	com	r24
     da0:	82 23       	and	r24, r18
     da2:	87 bb       	out	0x17, r24	; 23
     da4:	08 95       	ret
     da6:	41 30       	cpi	r20, 0x01	; 1
     da8:	59 f4       	brne	.+22     	; 0xdc0 <DIO_init+0x98>
     daa:	24 b3       	in	r18, 0x14	; 20
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <DIO_init+0x8e>
     db2:	88 0f       	add	r24, r24
     db4:	99 1f       	adc	r25, r25
     db6:	6a 95       	dec	r22
     db8:	e2 f7       	brpl	.-8      	; 0xdb2 <DIO_init+0x8a>
     dba:	82 2b       	or	r24, r18
     dbc:	84 bb       	out	0x14, r24	; 20
     dbe:	08 95       	ret
     dc0:	41 11       	cpse	r20, r1
     dc2:	26 c0       	rjmp	.+76     	; 0xe10 <DIO_init+0xe8>
     dc4:	24 b3       	in	r18, 0x14	; 20
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	02 c0       	rjmp	.+4      	; 0xdd0 <DIO_init+0xa8>
     dcc:	88 0f       	add	r24, r24
     dce:	99 1f       	adc	r25, r25
     dd0:	6a 95       	dec	r22
     dd2:	e2 f7       	brpl	.-8      	; 0xdcc <DIO_init+0xa4>
     dd4:	80 95       	com	r24
     dd6:	82 23       	and	r24, r18
     dd8:	84 bb       	out	0x14, r24	; 20
     dda:	08 95       	ret
     ddc:	41 30       	cpi	r20, 0x01	; 1
     dde:	59 f4       	brne	.+22     	; 0xdf6 <DIO_init+0xce>
     de0:	21 b3       	in	r18, 0x11	; 17
     de2:	81 e0       	ldi	r24, 0x01	; 1
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	02 c0       	rjmp	.+4      	; 0xdec <DIO_init+0xc4>
     de8:	88 0f       	add	r24, r24
     dea:	99 1f       	adc	r25, r25
     dec:	6a 95       	dec	r22
     dee:	e2 f7       	brpl	.-8      	; 0xde8 <DIO_init+0xc0>
     df0:	82 2b       	or	r24, r18
     df2:	81 bb       	out	0x11, r24	; 17
     df4:	08 95       	ret
     df6:	41 11       	cpse	r20, r1
     df8:	0b c0       	rjmp	.+22     	; 0xe10 <DIO_init+0xe8>
     dfa:	21 b3       	in	r18, 0x11	; 17
     dfc:	81 e0       	ldi	r24, 0x01	; 1
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <DIO_init+0xde>
     e02:	88 0f       	add	r24, r24
     e04:	99 1f       	adc	r25, r25
     e06:	6a 95       	dec	r22
     e08:	e2 f7       	brpl	.-8      	; 0xe02 <DIO_init+0xda>
     e0a:	80 95       	com	r24
     e0c:	82 23       	and	r24, r18
     e0e:	81 bb       	out	0x11, r24	; 17
     e10:	08 95       	ret

00000e12 <DIO_write>:
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	11 f1       	breq	.+68     	; 0xe5a <DIO_write+0x48>
     e16:	30 f0       	brcs	.+12     	; 0xe24 <DIO_write+0x12>
     e18:	82 30       	cpi	r24, 0x02	; 2
     e1a:	d1 f1       	breq	.+116    	; 0xe90 <DIO_write+0x7e>
     e1c:	83 30       	cpi	r24, 0x03	; 3
     e1e:	09 f4       	brne	.+2      	; 0xe22 <DIO_write+0x10>
     e20:	52 c0       	rjmp	.+164    	; 0xec6 <DIO_write+0xb4>
     e22:	08 95       	ret
     e24:	41 30       	cpi	r20, 0x01	; 1
     e26:	59 f4       	brne	.+22     	; 0xe3e <DIO_write+0x2c>
     e28:	2b b3       	in	r18, 0x1b	; 27
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 c0       	rjmp	.+4      	; 0xe34 <DIO_write+0x22>
     e30:	88 0f       	add	r24, r24
     e32:	99 1f       	adc	r25, r25
     e34:	6a 95       	dec	r22
     e36:	e2 f7       	brpl	.-8      	; 0xe30 <DIO_write+0x1e>
     e38:	82 2b       	or	r24, r18
     e3a:	8b bb       	out	0x1b, r24	; 27
     e3c:	08 95       	ret
     e3e:	41 11       	cpse	r20, r1
     e40:	5c c0       	rjmp	.+184    	; 0xefa <DIO_write+0xe8>
     e42:	2b b3       	in	r18, 0x1b	; 27
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_write+0x3c>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	6a 95       	dec	r22
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_write+0x38>
     e52:	80 95       	com	r24
     e54:	82 23       	and	r24, r18
     e56:	8b bb       	out	0x1b, r24	; 27
     e58:	08 95       	ret
     e5a:	41 30       	cpi	r20, 0x01	; 1
     e5c:	59 f4       	brne	.+22     	; 0xe74 <DIO_write+0x62>
     e5e:	28 b3       	in	r18, 0x18	; 24
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	02 c0       	rjmp	.+4      	; 0xe6a <DIO_write+0x58>
     e66:	88 0f       	add	r24, r24
     e68:	99 1f       	adc	r25, r25
     e6a:	6a 95       	dec	r22
     e6c:	e2 f7       	brpl	.-8      	; 0xe66 <DIO_write+0x54>
     e6e:	82 2b       	or	r24, r18
     e70:	88 bb       	out	0x18, r24	; 24
     e72:	08 95       	ret
     e74:	41 11       	cpse	r20, r1
     e76:	41 c0       	rjmp	.+130    	; 0xefa <DIO_write+0xe8>
     e78:	28 b3       	in	r18, 0x18	; 24
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <DIO_write+0x72>
     e80:	88 0f       	add	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	6a 95       	dec	r22
     e86:	e2 f7       	brpl	.-8      	; 0xe80 <DIO_write+0x6e>
     e88:	80 95       	com	r24
     e8a:	82 23       	and	r24, r18
     e8c:	88 bb       	out	0x18, r24	; 24
     e8e:	08 95       	ret
     e90:	41 30       	cpi	r20, 0x01	; 1
     e92:	59 f4       	brne	.+22     	; 0xeaa <DIO_write+0x98>
     e94:	25 b3       	in	r18, 0x15	; 21
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <DIO_write+0x8e>
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	6a 95       	dec	r22
     ea2:	e2 f7       	brpl	.-8      	; 0xe9c <DIO_write+0x8a>
     ea4:	82 2b       	or	r24, r18
     ea6:	85 bb       	out	0x15, r24	; 21
     ea8:	08 95       	ret
     eaa:	41 11       	cpse	r20, r1
     eac:	26 c0       	rjmp	.+76     	; 0xefa <DIO_write+0xe8>
     eae:	25 b3       	in	r18, 0x15	; 21
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	02 c0       	rjmp	.+4      	; 0xeba <DIO_write+0xa8>
     eb6:	88 0f       	add	r24, r24
     eb8:	99 1f       	adc	r25, r25
     eba:	6a 95       	dec	r22
     ebc:	e2 f7       	brpl	.-8      	; 0xeb6 <DIO_write+0xa4>
     ebe:	80 95       	com	r24
     ec0:	82 23       	and	r24, r18
     ec2:	85 bb       	out	0x15, r24	; 21
     ec4:	08 95       	ret
     ec6:	41 30       	cpi	r20, 0x01	; 1
     ec8:	59 f4       	brne	.+22     	; 0xee0 <DIO_write+0xce>
     eca:	22 b3       	in	r18, 0x12	; 18
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <DIO_write+0xc4>
     ed2:	88 0f       	add	r24, r24
     ed4:	99 1f       	adc	r25, r25
     ed6:	6a 95       	dec	r22
     ed8:	e2 f7       	brpl	.-8      	; 0xed2 <DIO_write+0xc0>
     eda:	82 2b       	or	r24, r18
     edc:	82 bb       	out	0x12, r24	; 18
     ede:	08 95       	ret
     ee0:	41 11       	cpse	r20, r1
     ee2:	0b c0       	rjmp	.+22     	; 0xefa <DIO_write+0xe8>
     ee4:	22 b3       	in	r18, 0x12	; 18
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <DIO_write+0xde>
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	6a 95       	dec	r22
     ef2:	e2 f7       	brpl	.-8      	; 0xeec <DIO_write+0xda>
     ef4:	80 95       	com	r24
     ef6:	82 23       	and	r24, r18
     ef8:	82 bb       	out	0x12, r24	; 18
     efa:	08 95       	ret

00000efc <DIO_read>:
     efc:	81 30       	cpi	r24, 0x01	; 1
     efe:	e9 f0       	breq	.+58     	; 0xf3a <DIO_read+0x3e>
     f00:	30 f0       	brcs	.+12     	; 0xf0e <DIO_read+0x12>
     f02:	82 30       	cpi	r24, 0x02	; 2
     f04:	81 f1       	breq	.+96     	; 0xf66 <DIO_read+0x6a>
     f06:	83 30       	cpi	r24, 0x03	; 3
     f08:	09 f4       	brne	.+2      	; 0xf0c <DIO_read+0x10>
     f0a:	43 c0       	rjmp	.+134    	; 0xf92 <DIO_read+0x96>
     f0c:	08 95       	ret
     f0e:	79 b3       	in	r23, 0x19	; 25
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	9c 01       	movw	r18, r24
     f16:	06 2e       	mov	r0, r22
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <DIO_read+0x22>
     f1a:	22 0f       	add	r18, r18
     f1c:	33 1f       	adc	r19, r19
     f1e:	0a 94       	dec	r0
     f20:	e2 f7       	brpl	.-8      	; 0xf1a <DIO_read+0x1e>
     f22:	87 2f       	mov	r24, r23
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	82 23       	and	r24, r18
     f28:	93 23       	and	r25, r19
     f2a:	02 c0       	rjmp	.+4      	; 0xf30 <DIO_read+0x34>
     f2c:	95 95       	asr	r25
     f2e:	87 95       	ror	r24
     f30:	6a 95       	dec	r22
     f32:	e2 f7       	brpl	.-8      	; 0xf2c <DIO_read+0x30>
     f34:	fa 01       	movw	r30, r20
     f36:	80 83       	st	Z, r24
     f38:	08 95       	ret
     f3a:	76 b3       	in	r23, 0x16	; 22
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	9c 01       	movw	r18, r24
     f42:	06 2e       	mov	r0, r22
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <DIO_read+0x4e>
     f46:	22 0f       	add	r18, r18
     f48:	33 1f       	adc	r19, r19
     f4a:	0a 94       	dec	r0
     f4c:	e2 f7       	brpl	.-8      	; 0xf46 <DIO_read+0x4a>
     f4e:	87 2f       	mov	r24, r23
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	82 23       	and	r24, r18
     f54:	93 23       	and	r25, r19
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <DIO_read+0x60>
     f58:	95 95       	asr	r25
     f5a:	87 95       	ror	r24
     f5c:	6a 95       	dec	r22
     f5e:	e2 f7       	brpl	.-8      	; 0xf58 <DIO_read+0x5c>
     f60:	fa 01       	movw	r30, r20
     f62:	80 83       	st	Z, r24
     f64:	08 95       	ret
     f66:	73 b3       	in	r23, 0x13	; 19
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	9c 01       	movw	r18, r24
     f6e:	06 2e       	mov	r0, r22
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <DIO_read+0x7a>
     f72:	22 0f       	add	r18, r18
     f74:	33 1f       	adc	r19, r19
     f76:	0a 94       	dec	r0
     f78:	e2 f7       	brpl	.-8      	; 0xf72 <DIO_read+0x76>
     f7a:	87 2f       	mov	r24, r23
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	82 23       	and	r24, r18
     f80:	93 23       	and	r25, r19
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <DIO_read+0x8c>
     f84:	95 95       	asr	r25
     f86:	87 95       	ror	r24
     f88:	6a 95       	dec	r22
     f8a:	e2 f7       	brpl	.-8      	; 0xf84 <DIO_read+0x88>
     f8c:	fa 01       	movw	r30, r20
     f8e:	80 83       	st	Z, r24
     f90:	08 95       	ret
     f92:	70 b3       	in	r23, 0x10	; 16
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	9c 01       	movw	r18, r24
     f9a:	06 2e       	mov	r0, r22
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <DIO_read+0xa6>
     f9e:	22 0f       	add	r18, r18
     fa0:	33 1f       	adc	r19, r19
     fa2:	0a 94       	dec	r0
     fa4:	e2 f7       	brpl	.-8      	; 0xf9e <DIO_read+0xa2>
     fa6:	87 2f       	mov	r24, r23
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	82 23       	and	r24, r18
     fac:	93 23       	and	r25, r19
     fae:	02 c0       	rjmp	.+4      	; 0xfb4 <DIO_read+0xb8>
     fb0:	95 95       	asr	r25
     fb2:	87 95       	ror	r24
     fb4:	6a 95       	dec	r22
     fb6:	e2 f7       	brpl	.-8      	; 0xfb0 <DIO_read+0xb4>
     fb8:	fa 01       	movw	r30, r20
     fba:	80 83       	st	Z, r24
     fbc:	08 95       	ret

00000fbe <DIO_setHigherNibble>:
     fbe:	81 30       	cpi	r24, 0x01	; 1
     fc0:	61 f0       	breq	.+24     	; 0xfda <DIO_setHigherNibble+0x1c>
     fc2:	28 f0       	brcs	.+10     	; 0xfce <DIO_setHigherNibble+0x10>
     fc4:	82 30       	cpi	r24, 0x02	; 2
     fc6:	79 f0       	breq	.+30     	; 0xfe6 <DIO_setHigherNibble+0x28>
     fc8:	83 30       	cpi	r24, 0x03	; 3
     fca:	99 f0       	breq	.+38     	; 0xff2 <DIO_setHigherNibble+0x34>
     fcc:	08 95       	ret
     fce:	8b b3       	in	r24, 0x1b	; 27
     fd0:	8f 70       	andi	r24, 0x0F	; 15
     fd2:	60 7f       	andi	r22, 0xF0	; 240
     fd4:	68 2b       	or	r22, r24
     fd6:	6b bb       	out	0x1b, r22	; 27
     fd8:	08 95       	ret
     fda:	88 b3       	in	r24, 0x18	; 24
     fdc:	8f 70       	andi	r24, 0x0F	; 15
     fde:	60 7f       	andi	r22, 0xF0	; 240
     fe0:	68 2b       	or	r22, r24
     fe2:	68 bb       	out	0x18, r22	; 24
     fe4:	08 95       	ret
     fe6:	85 b3       	in	r24, 0x15	; 21
     fe8:	8f 70       	andi	r24, 0x0F	; 15
     fea:	60 7f       	andi	r22, 0xF0	; 240
     fec:	68 2b       	or	r22, r24
     fee:	65 bb       	out	0x15, r22	; 21
     ff0:	08 95       	ret
     ff2:	82 b3       	in	r24, 0x12	; 18
     ff4:	8f 70       	andi	r24, 0x0F	; 15
     ff6:	60 7f       	andi	r22, 0xF0	; 240
     ff8:	68 2b       	or	r22, r24
     ffa:	62 bb       	out	0x12, r22	; 18
     ffc:	08 95       	ret

00000ffe <DIO_setLowerNibble>:
     ffe:	81 30       	cpi	r24, 0x01	; 1
    1000:	79 f0       	breq	.+30     	; 0x1020 <DIO_setLowerNibble+0x22>
    1002:	28 f0       	brcs	.+10     	; 0x100e <DIO_setLowerNibble+0x10>
    1004:	82 30       	cpi	r24, 0x02	; 2
    1006:	a9 f0       	breq	.+42     	; 0x1032 <DIO_setLowerNibble+0x34>
    1008:	83 30       	cpi	r24, 0x03	; 3
    100a:	e1 f0       	breq	.+56     	; 0x1044 <DIO_setLowerNibble+0x46>
    100c:	08 95       	ret
    100e:	8b b3       	in	r24, 0x1b	; 27
    1010:	90 e1       	ldi	r25, 0x10	; 16
    1012:	69 9f       	mul	r22, r25
    1014:	b0 01       	movw	r22, r0
    1016:	11 24       	eor	r1, r1
    1018:	8f 70       	andi	r24, 0x0F	; 15
    101a:	68 2b       	or	r22, r24
    101c:	6b bb       	out	0x1b, r22	; 27
    101e:	08 95       	ret
    1020:	88 b3       	in	r24, 0x18	; 24
    1022:	90 e1       	ldi	r25, 0x10	; 16
    1024:	69 9f       	mul	r22, r25
    1026:	b0 01       	movw	r22, r0
    1028:	11 24       	eor	r1, r1
    102a:	8f 70       	andi	r24, 0x0F	; 15
    102c:	68 2b       	or	r22, r24
    102e:	68 bb       	out	0x18, r22	; 24
    1030:	08 95       	ret
    1032:	85 b3       	in	r24, 0x15	; 21
    1034:	90 e1       	ldi	r25, 0x10	; 16
    1036:	69 9f       	mul	r22, r25
    1038:	b0 01       	movw	r22, r0
    103a:	11 24       	eor	r1, r1
    103c:	8f 70       	andi	r24, 0x0F	; 15
    103e:	68 2b       	or	r22, r24
    1040:	65 bb       	out	0x15, r22	; 21
    1042:	08 95       	ret
    1044:	82 b3       	in	r24, 0x12	; 18
    1046:	90 e1       	ldi	r25, 0x10	; 16
    1048:	69 9f       	mul	r22, r25
    104a:	b0 01       	movw	r22, r0
    104c:	11 24       	eor	r1, r1
    104e:	8f 70       	andi	r24, 0x0F	; 15
    1050:	68 2b       	or	r22, r24
    1052:	62 bb       	out	0x12, r22	; 18
    1054:	08 95       	ret

00001056 <EXI_enablePIE>:
    1056:	83 30       	cpi	r24, 0x03	; 3
    1058:	08 f0       	brcs	.+2      	; 0x105c <EXI_enablePIE+0x6>
    105a:	72 c0       	rjmp	.+228    	; 0x1140 <EXI_enablePIE+0xea>
    105c:	64 30       	cpi	r22, 0x04	; 4
    105e:	08 f0       	brcs	.+2      	; 0x1062 <EXI_enablePIE+0xc>
    1060:	71 c0       	rjmp	.+226    	; 0x1144 <EXI_enablePIE+0xee>
    1062:	81 30       	cpi	r24, 0x01	; 1
    1064:	81 f1       	breq	.+96     	; 0x10c6 <EXI_enablePIE+0x70>
    1066:	20 f0       	brcs	.+8      	; 0x1070 <EXI_enablePIE+0x1a>
    1068:	82 30       	cpi	r24, 0x02	; 2
    106a:	09 f4       	brne	.+2      	; 0x106e <EXI_enablePIE+0x18>
    106c:	57 c0       	rjmp	.+174    	; 0x111c <EXI_enablePIE+0xc6>
    106e:	6c c0       	rjmp	.+216    	; 0x1148 <EXI_enablePIE+0xf2>
    1070:	8b b7       	in	r24, 0x3b	; 59
    1072:	80 64       	ori	r24, 0x40	; 64
    1074:	8b bf       	out	0x3b, r24	; 59
    1076:	61 30       	cpi	r22, 0x01	; 1
    1078:	71 f0       	breq	.+28     	; 0x1096 <EXI_enablePIE+0x40>
    107a:	28 f0       	brcs	.+10     	; 0x1086 <EXI_enablePIE+0x30>
    107c:	62 30       	cpi	r22, 0x02	; 2
    107e:	99 f0       	breq	.+38     	; 0x10a6 <EXI_enablePIE+0x50>
    1080:	63 30       	cpi	r22, 0x03	; 3
    1082:	c9 f0       	breq	.+50     	; 0x10b6 <EXI_enablePIE+0x60>
    1084:	63 c0       	rjmp	.+198    	; 0x114c <EXI_enablePIE+0xf6>
    1086:	85 b7       	in	r24, 0x35	; 53
    1088:	8e 7f       	andi	r24, 0xFE	; 254
    108a:	85 bf       	out	0x35, r24	; 53
    108c:	85 b7       	in	r24, 0x35	; 53
    108e:	8d 7f       	andi	r24, 0xFD	; 253
    1090:	85 bf       	out	0x35, r24	; 53
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	08 95       	ret
    1096:	85 b7       	in	r24, 0x35	; 53
    1098:	81 60       	ori	r24, 0x01	; 1
    109a:	85 bf       	out	0x35, r24	; 53
    109c:	85 b7       	in	r24, 0x35	; 53
    109e:	8d 7f       	andi	r24, 0xFD	; 253
    10a0:	85 bf       	out	0x35, r24	; 53
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	08 95       	ret
    10a6:	85 b7       	in	r24, 0x35	; 53
    10a8:	8e 7f       	andi	r24, 0xFE	; 254
    10aa:	85 bf       	out	0x35, r24	; 53
    10ac:	85 b7       	in	r24, 0x35	; 53
    10ae:	82 60       	ori	r24, 0x02	; 2
    10b0:	85 bf       	out	0x35, r24	; 53
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	08 95       	ret
    10b6:	85 b7       	in	r24, 0x35	; 53
    10b8:	81 60       	ori	r24, 0x01	; 1
    10ba:	85 bf       	out	0x35, r24	; 53
    10bc:	85 b7       	in	r24, 0x35	; 53
    10be:	82 60       	ori	r24, 0x02	; 2
    10c0:	85 bf       	out	0x35, r24	; 53
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	08 95       	ret
    10c6:	8b b7       	in	r24, 0x3b	; 59
    10c8:	80 68       	ori	r24, 0x80	; 128
    10ca:	8b bf       	out	0x3b, r24	; 59
    10cc:	61 30       	cpi	r22, 0x01	; 1
    10ce:	71 f0       	breq	.+28     	; 0x10ec <EXI_enablePIE+0x96>
    10d0:	28 f0       	brcs	.+10     	; 0x10dc <EXI_enablePIE+0x86>
    10d2:	62 30       	cpi	r22, 0x02	; 2
    10d4:	99 f0       	breq	.+38     	; 0x10fc <EXI_enablePIE+0xa6>
    10d6:	63 30       	cpi	r22, 0x03	; 3
    10d8:	c9 f0       	breq	.+50     	; 0x110c <EXI_enablePIE+0xb6>
    10da:	3a c0       	rjmp	.+116    	; 0x1150 <EXI_enablePIE+0xfa>
    10dc:	85 b7       	in	r24, 0x35	; 53
    10de:	8b 7f       	andi	r24, 0xFB	; 251
    10e0:	85 bf       	out	0x35, r24	; 53
    10e2:	85 b7       	in	r24, 0x35	; 53
    10e4:	87 7f       	andi	r24, 0xF7	; 247
    10e6:	85 bf       	out	0x35, r24	; 53
    10e8:	81 e0       	ldi	r24, 0x01	; 1
    10ea:	08 95       	ret
    10ec:	85 b7       	in	r24, 0x35	; 53
    10ee:	84 60       	ori	r24, 0x04	; 4
    10f0:	85 bf       	out	0x35, r24	; 53
    10f2:	85 b7       	in	r24, 0x35	; 53
    10f4:	87 7f       	andi	r24, 0xF7	; 247
    10f6:	85 bf       	out	0x35, r24	; 53
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	08 95       	ret
    10fc:	85 b7       	in	r24, 0x35	; 53
    10fe:	8b 7f       	andi	r24, 0xFB	; 251
    1100:	85 bf       	out	0x35, r24	; 53
    1102:	85 b7       	in	r24, 0x35	; 53
    1104:	88 60       	ori	r24, 0x08	; 8
    1106:	85 bf       	out	0x35, r24	; 53
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	08 95       	ret
    110c:	85 b7       	in	r24, 0x35	; 53
    110e:	84 60       	ori	r24, 0x04	; 4
    1110:	85 bf       	out	0x35, r24	; 53
    1112:	85 b7       	in	r24, 0x35	; 53
    1114:	88 60       	ori	r24, 0x08	; 8
    1116:	85 bf       	out	0x35, r24	; 53
    1118:	81 e0       	ldi	r24, 0x01	; 1
    111a:	08 95       	ret
    111c:	8b b7       	in	r24, 0x3b	; 59
    111e:	80 62       	ori	r24, 0x20	; 32
    1120:	8b bf       	out	0x3b, r24	; 59
    1122:	62 30       	cpi	r22, 0x02	; 2
    1124:	19 f0       	breq	.+6      	; 0x112c <EXI_enablePIE+0xd6>
    1126:	63 30       	cpi	r22, 0x03	; 3
    1128:	31 f0       	breq	.+12     	; 0x1136 <EXI_enablePIE+0xe0>
    112a:	14 c0       	rjmp	.+40     	; 0x1154 <EXI_enablePIE+0xfe>
    112c:	84 b7       	in	r24, 0x34	; 52
    112e:	8f 7b       	andi	r24, 0xBF	; 191
    1130:	84 bf       	out	0x34, r24	; 52
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	08 95       	ret
    1136:	84 b7       	in	r24, 0x34	; 52
    1138:	80 64       	ori	r24, 0x40	; 64
    113a:	84 bf       	out	0x34, r24	; 52
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	08 95       	ret
    1140:	80 e0       	ldi	r24, 0x00	; 0
    1142:	08 95       	ret
    1144:	80 e0       	ldi	r24, 0x00	; 0
    1146:	08 95       	ret
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	08 95       	ret
    114c:	81 e0       	ldi	r24, 0x01	; 1
    114e:	08 95       	ret
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	08 95       	ret
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	08 95       	ret

00001158 <EXI_intSetCallBack>:
    1158:	83 30       	cpi	r24, 0x03	; 3
    115a:	68 f4       	brcc	.+26     	; 0x1176 <EXI_intSetCallBack+0x1e>
    115c:	61 15       	cp	r22, r1
    115e:	71 05       	cpc	r23, r1
    1160:	61 f0       	breq	.+24     	; 0x117a <EXI_intSetCallBack+0x22>
    1162:	e8 2f       	mov	r30, r24
    1164:	f0 e0       	ldi	r31, 0x00	; 0
    1166:	ee 0f       	add	r30, r30
    1168:	ff 1f       	adc	r31, r31
    116a:	ed 53       	subi	r30, 0x3D	; 61
    116c:	ff 4f       	sbci	r31, 0xFF	; 255
    116e:	71 83       	std	Z+1, r23	; 0x01
    1170:	60 83       	st	Z, r22
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	08 95       	ret
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	08 95       	ret
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	08 95       	ret

0000117e <__vector_1>:
    117e:	1f 92       	push	r1
    1180:	0f 92       	push	r0
    1182:	0f b6       	in	r0, 0x3f	; 63
    1184:	0f 92       	push	r0
    1186:	11 24       	eor	r1, r1
    1188:	2f 93       	push	r18
    118a:	3f 93       	push	r19
    118c:	4f 93       	push	r20
    118e:	5f 93       	push	r21
    1190:	6f 93       	push	r22
    1192:	7f 93       	push	r23
    1194:	8f 93       	push	r24
    1196:	9f 93       	push	r25
    1198:	af 93       	push	r26
    119a:	bf 93       	push	r27
    119c:	ef 93       	push	r30
    119e:	ff 93       	push	r31
    11a0:	e0 91 c3 00 	lds	r30, 0x00C3	; 0x8000c3 <void_gs_apfInterrupstAction>
    11a4:	f0 91 c4 00 	lds	r31, 0x00C4	; 0x8000c4 <void_gs_apfInterrupstAction+0x1>
    11a8:	30 97       	sbiw	r30, 0x00	; 0
    11aa:	09 f0       	breq	.+2      	; 0x11ae <__vector_1+0x30>
    11ac:	09 95       	icall
    11ae:	ff 91       	pop	r31
    11b0:	ef 91       	pop	r30
    11b2:	bf 91       	pop	r27
    11b4:	af 91       	pop	r26
    11b6:	9f 91       	pop	r25
    11b8:	8f 91       	pop	r24
    11ba:	7f 91       	pop	r23
    11bc:	6f 91       	pop	r22
    11be:	5f 91       	pop	r21
    11c0:	4f 91       	pop	r20
    11c2:	3f 91       	pop	r19
    11c4:	2f 91       	pop	r18
    11c6:	0f 90       	pop	r0
    11c8:	0f be       	out	0x3f, r0	; 63
    11ca:	0f 90       	pop	r0
    11cc:	1f 90       	pop	r1
    11ce:	18 95       	reti

000011d0 <__vector_2>:
    11d0:	1f 92       	push	r1
    11d2:	0f 92       	push	r0
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	0f 92       	push	r0
    11d8:	11 24       	eor	r1, r1
    11da:	2f 93       	push	r18
    11dc:	3f 93       	push	r19
    11de:	4f 93       	push	r20
    11e0:	5f 93       	push	r21
    11e2:	6f 93       	push	r22
    11e4:	7f 93       	push	r23
    11e6:	8f 93       	push	r24
    11e8:	9f 93       	push	r25
    11ea:	af 93       	push	r26
    11ec:	bf 93       	push	r27
    11ee:	ef 93       	push	r30
    11f0:	ff 93       	push	r31
    11f2:	e0 91 c5 00 	lds	r30, 0x00C5	; 0x8000c5 <void_gs_apfInterrupstAction+0x2>
    11f6:	f0 91 c6 00 	lds	r31, 0x00C6	; 0x8000c6 <void_gs_apfInterrupstAction+0x3>
    11fa:	30 97       	sbiw	r30, 0x00	; 0
    11fc:	09 f0       	breq	.+2      	; 0x1200 <__vector_2+0x30>
    11fe:	09 95       	icall
    1200:	ff 91       	pop	r31
    1202:	ef 91       	pop	r30
    1204:	bf 91       	pop	r27
    1206:	af 91       	pop	r26
    1208:	9f 91       	pop	r25
    120a:	8f 91       	pop	r24
    120c:	7f 91       	pop	r23
    120e:	6f 91       	pop	r22
    1210:	5f 91       	pop	r21
    1212:	4f 91       	pop	r20
    1214:	3f 91       	pop	r19
    1216:	2f 91       	pop	r18
    1218:	0f 90       	pop	r0
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	0f 90       	pop	r0
    121e:	1f 90       	pop	r1
    1220:	18 95       	reti

00001222 <__vector_3>:
    1222:	1f 92       	push	r1
    1224:	0f 92       	push	r0
    1226:	0f b6       	in	r0, 0x3f	; 63
    1228:	0f 92       	push	r0
    122a:	11 24       	eor	r1, r1
    122c:	2f 93       	push	r18
    122e:	3f 93       	push	r19
    1230:	4f 93       	push	r20
    1232:	5f 93       	push	r21
    1234:	6f 93       	push	r22
    1236:	7f 93       	push	r23
    1238:	8f 93       	push	r24
    123a:	9f 93       	push	r25
    123c:	af 93       	push	r26
    123e:	bf 93       	push	r27
    1240:	ef 93       	push	r30
    1242:	ff 93       	push	r31
    1244:	e0 91 c7 00 	lds	r30, 0x00C7	; 0x8000c7 <void_gs_apfInterrupstAction+0x4>
    1248:	f0 91 c8 00 	lds	r31, 0x00C8	; 0x8000c8 <void_gs_apfInterrupstAction+0x5>
    124c:	30 97       	sbiw	r30, 0x00	; 0
    124e:	09 f0       	breq	.+2      	; 0x1252 <__vector_3+0x30>
    1250:	09 95       	icall
    1252:	ff 91       	pop	r31
    1254:	ef 91       	pop	r30
    1256:	bf 91       	pop	r27
    1258:	af 91       	pop	r26
    125a:	9f 91       	pop	r25
    125c:	8f 91       	pop	r24
    125e:	7f 91       	pop	r23
    1260:	6f 91       	pop	r22
    1262:	5f 91       	pop	r21
    1264:	4f 91       	pop	r20
    1266:	3f 91       	pop	r19
    1268:	2f 91       	pop	r18
    126a:	0f 90       	pop	r0
    126c:	0f be       	out	0x3f, r0	; 63
    126e:	0f 90       	pop	r0
    1270:	1f 90       	pop	r1
    1272:	18 95       	reti

00001274 <GLI_enableGIE>:
    1274:	8f b7       	in	r24, 0x3f	; 63
    1276:	80 68       	ori	r24, 0x80	; 128
    1278:	8f bf       	out	0x3f, r24	; 63
    127a:	08 95       	ret

0000127c <PWM_calculatePrescaler>:
    127c:	cf 92       	push	r12
    127e:	df 92       	push	r13
    1280:	ef 92       	push	r14
    1282:	ff 92       	push	r15
    1284:	cf 93       	push	r28
    1286:	df 93       	push	r29
    1288:	6b 01       	movw	r12, r22
    128a:	7c 01       	movw	r14, r24
    128c:	ea 01       	movw	r28, r20
    128e:	2f e6       	ldi	r18, 0x6F	; 111
    1290:	32 e1       	ldi	r19, 0x12	; 18
    1292:	43 e0       	ldi	r20, 0x03	; 3
    1294:	52 e4       	ldi	r21, 0x42	; 66
    1296:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    129a:	18 16       	cp	r1, r24
    129c:	0c f4       	brge	.+2      	; 0x12a0 <PWM_calculatePrescaler+0x24>
    129e:	76 c0       	rjmp	.+236    	; 0x138c <PWM_calculatePrescaler+0x110>
    12a0:	20 97       	sbiw	r28, 0x00	; 0
    12a2:	09 f4       	brne	.+2      	; 0x12a6 <PWM_calculatePrescaler+0x2a>
    12a4:	75 c0       	rjmp	.+234    	; 0x1390 <PWM_calculatePrescaler+0x114>
    12a6:	2f e6       	ldi	r18, 0x6F	; 111
    12a8:	32 e1       	ldi	r19, 0x12	; 18
    12aa:	43 e0       	ldi	r20, 0x03	; 3
    12ac:	5d e3       	ldi	r21, 0x3D	; 61
    12ae:	c7 01       	movw	r24, r14
    12b0:	b6 01       	movw	r22, r12
    12b2:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    12b6:	18 16       	cp	r1, r24
    12b8:	2c f0       	brlt	.+10     	; 0x12c4 <PWM_calculatePrescaler+0x48>
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	99 83       	std	Y+1, r25	; 0x01
    12c0:	88 83       	st	Y, r24
    12c2:	67 c0       	rjmp	.+206    	; 0x1392 <PWM_calculatePrescaler+0x116>
    12c4:	2f e6       	ldi	r18, 0x6F	; 111
    12c6:	32 e1       	ldi	r19, 0x12	; 18
    12c8:	43 e8       	ldi	r20, 0x83	; 131
    12ca:	5e e3       	ldi	r21, 0x3E	; 62
    12cc:	c7 01       	movw	r24, r14
    12ce:	b6 01       	movw	r22, r12
    12d0:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    12d4:	18 16       	cp	r1, r24
    12d6:	34 f0       	brlt	.+12     	; 0x12e4 <PWM_calculatePrescaler+0x68>
    12d8:	88 e0       	ldi	r24, 0x08	; 8
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	99 83       	std	Y+1, r25	; 0x01
    12de:	88 83       	st	Y, r24
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	57 c0       	rjmp	.+174    	; 0x1392 <PWM_calculatePrescaler+0x116>
    12e4:	2f e6       	ldi	r18, 0x6F	; 111
    12e6:	32 e1       	ldi	r19, 0x12	; 18
    12e8:	43 e8       	ldi	r20, 0x83	; 131
    12ea:	5f e3       	ldi	r21, 0x3F	; 63
    12ec:	c7 01       	movw	r24, r14
    12ee:	b6 01       	movw	r22, r12
    12f0:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    12f4:	18 16       	cp	r1, r24
    12f6:	34 f0       	brlt	.+12     	; 0x1304 <PWM_calculatePrescaler+0x88>
    12f8:	80 e2       	ldi	r24, 0x20	; 32
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	99 83       	std	Y+1, r25	; 0x01
    12fe:	88 83       	st	Y, r24
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	47 c0       	rjmp	.+142    	; 0x1392 <PWM_calculatePrescaler+0x116>
    1304:	2f e6       	ldi	r18, 0x6F	; 111
    1306:	32 e1       	ldi	r19, 0x12	; 18
    1308:	43 e0       	ldi	r20, 0x03	; 3
    130a:	50 e4       	ldi	r21, 0x40	; 64
    130c:	c7 01       	movw	r24, r14
    130e:	b6 01       	movw	r22, r12
    1310:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1314:	18 16       	cp	r1, r24
    1316:	34 f0       	brlt	.+12     	; 0x1324 <PWM_calculatePrescaler+0xa8>
    1318:	80 e4       	ldi	r24, 0x40	; 64
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	99 83       	std	Y+1, r25	; 0x01
    131e:	88 83       	st	Y, r24
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	37 c0       	rjmp	.+110    	; 0x1392 <PWM_calculatePrescaler+0x116>
    1324:	2f e6       	ldi	r18, 0x6F	; 111
    1326:	32 e1       	ldi	r19, 0x12	; 18
    1328:	43 e8       	ldi	r20, 0x83	; 131
    132a:	50 e4       	ldi	r21, 0x40	; 64
    132c:	c7 01       	movw	r24, r14
    132e:	b6 01       	movw	r22, r12
    1330:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1334:	18 16       	cp	r1, r24
    1336:	34 f0       	brlt	.+12     	; 0x1344 <PWM_calculatePrescaler+0xc8>
    1338:	80 e8       	ldi	r24, 0x80	; 128
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	99 83       	std	Y+1, r25	; 0x01
    133e:	88 83       	st	Y, r24
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	27 c0       	rjmp	.+78     	; 0x1392 <PWM_calculatePrescaler+0x116>
    1344:	2f e6       	ldi	r18, 0x6F	; 111
    1346:	32 e1       	ldi	r19, 0x12	; 18
    1348:	43 e0       	ldi	r20, 0x03	; 3
    134a:	51 e4       	ldi	r21, 0x41	; 65
    134c:	c7 01       	movw	r24, r14
    134e:	b6 01       	movw	r22, r12
    1350:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1354:	18 16       	cp	r1, r24
    1356:	34 f0       	brlt	.+12     	; 0x1364 <PWM_calculatePrescaler+0xe8>
    1358:	80 e0       	ldi	r24, 0x00	; 0
    135a:	91 e0       	ldi	r25, 0x01	; 1
    135c:	99 83       	std	Y+1, r25	; 0x01
    135e:	88 83       	st	Y, r24
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	17 c0       	rjmp	.+46     	; 0x1392 <PWM_calculatePrescaler+0x116>
    1364:	2f e6       	ldi	r18, 0x6F	; 111
    1366:	32 e1       	ldi	r19, 0x12	; 18
    1368:	43 e0       	ldi	r20, 0x03	; 3
    136a:	52 e4       	ldi	r21, 0x42	; 66
    136c:	c7 01       	movw	r24, r14
    136e:	b6 01       	movw	r22, r12
    1370:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1374:	18 16       	cp	r1, r24
    1376:	34 f0       	brlt	.+12     	; 0x1384 <PWM_calculatePrescaler+0x108>
    1378:	80 e0       	ldi	r24, 0x00	; 0
    137a:	94 e0       	ldi	r25, 0x04	; 4
    137c:	99 83       	std	Y+1, r25	; 0x01
    137e:	88 83       	st	Y, r24
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	07 c0       	rjmp	.+14     	; 0x1392 <PWM_calculatePrescaler+0x116>
    1384:	19 82       	std	Y+1, r1	; 0x01
    1386:	18 82       	st	Y, r1
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	03 c0       	rjmp	.+6      	; 0x1392 <PWM_calculatePrescaler+0x116>
    138c:	80 e0       	ldi	r24, 0x00	; 0
    138e:	01 c0       	rjmp	.+2      	; 0x1392 <PWM_calculatePrescaler+0x116>
    1390:	80 e0       	ldi	r24, 0x00	; 0
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	ff 90       	pop	r15
    1398:	ef 90       	pop	r14
    139a:	df 90       	pop	r13
    139c:	cf 90       	pop	r12
    139e:	08 95       	ret

000013a0 <PWM_calculateInitialValue>:
    13a0:	cf 93       	push	r28
    13a2:	df 93       	push	r29
    13a4:	81 30       	cpi	r24, 0x01	; 1
    13a6:	e4 e0       	ldi	r30, 0x04	; 4
    13a8:	9e 07       	cpc	r25, r30
    13aa:	08 f0       	brcs	.+2      	; 0x13ae <PWM_calculateInitialValue+0xe>
    13ac:	9c c0       	rjmp	.+312    	; 0x14e6 <PWM_calculateInitialValue+0x146>
    13ae:	21 15       	cp	r18, r1
    13b0:	31 05       	cpc	r19, r1
    13b2:	09 f4       	brne	.+2      	; 0x13b6 <PWM_calculateInitialValue+0x16>
    13b4:	9a c0       	rjmp	.+308    	; 0x14ea <PWM_calculateInitialValue+0x14a>
    13b6:	e9 01       	movw	r28, r18
    13b8:	9a 01       	movw	r18, r20
    13ba:	ab 01       	movw	r20, r22
    13bc:	80 34       	cpi	r24, 0x40	; 64
    13be:	91 05       	cpc	r25, r1
    13c0:	09 f4       	brne	.+2      	; 0x13c4 <PWM_calculateInitialValue+0x24>
    13c2:	4d c0       	rjmp	.+154    	; 0x145e <PWM_calculateInitialValue+0xbe>
    13c4:	50 f4       	brcc	.+20     	; 0x13da <PWM_calculateInitialValue+0x3a>
    13c6:	88 30       	cpi	r24, 0x08	; 8
    13c8:	91 05       	cpc	r25, r1
    13ca:	39 f1       	breq	.+78     	; 0x141a <PWM_calculateInitialValue+0x7a>
    13cc:	80 32       	cpi	r24, 0x20	; 32
    13ce:	91 05       	cpc	r25, r1
    13d0:	a9 f1       	breq	.+106    	; 0x143c <PWM_calculateInitialValue+0x9c>
    13d2:	01 97       	sbiw	r24, 0x01	; 1
    13d4:	09 f0       	breq	.+2      	; 0x13d8 <PWM_calculateInitialValue+0x38>
    13d6:	8b c0       	rjmp	.+278    	; 0x14ee <PWM_calculateInitialValue+0x14e>
    13d8:	0f c0       	rjmp	.+30     	; 0x13f8 <PWM_calculateInitialValue+0x58>
    13da:	81 15       	cp	r24, r1
    13dc:	61 e0       	ldi	r22, 0x01	; 1
    13de:	96 07       	cpc	r25, r22
    13e0:	09 f4       	brne	.+2      	; 0x13e4 <PWM_calculateInitialValue+0x44>
    13e2:	5f c0       	rjmp	.+190    	; 0x14a2 <PWM_calculateInitialValue+0x102>
    13e4:	81 15       	cp	r24, r1
    13e6:	e4 e0       	ldi	r30, 0x04	; 4
    13e8:	9e 07       	cpc	r25, r30
    13ea:	09 f4       	brne	.+2      	; 0x13ee <PWM_calculateInitialValue+0x4e>
    13ec:	6b c0       	rjmp	.+214    	; 0x14c4 <PWM_calculateInitialValue+0x124>
    13ee:	80 38       	cpi	r24, 0x80	; 128
    13f0:	91 05       	cpc	r25, r1
    13f2:	09 f0       	breq	.+2      	; 0x13f6 <PWM_calculateInitialValue+0x56>
    13f4:	7c c0       	rjmp	.+248    	; 0x14ee <PWM_calculateInitialValue+0x14e>
    13f6:	44 c0       	rjmp	.+136    	; 0x1480 <PWM_calculateInitialValue+0xe0>
    13f8:	6f e6       	ldi	r22, 0x6F	; 111
    13fa:	72 e1       	ldi	r23, 0x12	; 18
    13fc:	83 e0       	ldi	r24, 0x03	; 3
    13fe:	9d e3       	ldi	r25, 0x3D	; 61
    1400:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1404:	2f e6       	ldi	r18, 0x6F	; 111
    1406:	32 e1       	ldi	r19, 0x12	; 18
    1408:	43 e0       	ldi	r20, 0x03	; 3
    140a:	59 e3       	ldi	r21, 0x39	; 57
    140c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1410:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1414:	68 83       	st	Y, r22
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	6b c0       	rjmp	.+214    	; 0x14f0 <PWM_calculateInitialValue+0x150>
    141a:	6f e6       	ldi	r22, 0x6F	; 111
    141c:	72 e1       	ldi	r23, 0x12	; 18
    141e:	83 e8       	ldi	r24, 0x83	; 131
    1420:	9e e3       	ldi	r25, 0x3E	; 62
    1422:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1426:	2f e6       	ldi	r18, 0x6F	; 111
    1428:	32 e1       	ldi	r19, 0x12	; 18
    142a:	43 e8       	ldi	r20, 0x83	; 131
    142c:	5a e3       	ldi	r21, 0x3A	; 58
    142e:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1432:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1436:	68 83       	st	Y, r22
    1438:	81 e0       	ldi	r24, 0x01	; 1
    143a:	5a c0       	rjmp	.+180    	; 0x14f0 <PWM_calculateInitialValue+0x150>
    143c:	6f e6       	ldi	r22, 0x6F	; 111
    143e:	72 e1       	ldi	r23, 0x12	; 18
    1440:	83 e8       	ldi	r24, 0x83	; 131
    1442:	9f e3       	ldi	r25, 0x3F	; 63
    1444:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1448:	2f e6       	ldi	r18, 0x6F	; 111
    144a:	32 e1       	ldi	r19, 0x12	; 18
    144c:	43 e8       	ldi	r20, 0x83	; 131
    144e:	5b e3       	ldi	r21, 0x3B	; 59
    1450:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1454:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1458:	68 83       	st	Y, r22
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	49 c0       	rjmp	.+146    	; 0x14f0 <PWM_calculateInitialValue+0x150>
    145e:	6f e6       	ldi	r22, 0x6F	; 111
    1460:	72 e1       	ldi	r23, 0x12	; 18
    1462:	83 e0       	ldi	r24, 0x03	; 3
    1464:	90 e4       	ldi	r25, 0x40	; 64
    1466:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    146a:	2f e6       	ldi	r18, 0x6F	; 111
    146c:	32 e1       	ldi	r19, 0x12	; 18
    146e:	43 e0       	ldi	r20, 0x03	; 3
    1470:	5c e3       	ldi	r21, 0x3C	; 60
    1472:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1476:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    147a:	68 83       	st	Y, r22
    147c:	81 e0       	ldi	r24, 0x01	; 1
    147e:	38 c0       	rjmp	.+112    	; 0x14f0 <PWM_calculateInitialValue+0x150>
    1480:	6f e6       	ldi	r22, 0x6F	; 111
    1482:	72 e1       	ldi	r23, 0x12	; 18
    1484:	83 e8       	ldi	r24, 0x83	; 131
    1486:	90 e4       	ldi	r25, 0x40	; 64
    1488:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    148c:	2f e6       	ldi	r18, 0x6F	; 111
    148e:	32 e1       	ldi	r19, 0x12	; 18
    1490:	43 e8       	ldi	r20, 0x83	; 131
    1492:	5c e3       	ldi	r21, 0x3C	; 60
    1494:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1498:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    149c:	68 83       	st	Y, r22
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	27 c0       	rjmp	.+78     	; 0x14f0 <PWM_calculateInitialValue+0x150>
    14a2:	6f e6       	ldi	r22, 0x6F	; 111
    14a4:	72 e1       	ldi	r23, 0x12	; 18
    14a6:	83 e0       	ldi	r24, 0x03	; 3
    14a8:	91 e4       	ldi	r25, 0x41	; 65
    14aa:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    14ae:	2f e6       	ldi	r18, 0x6F	; 111
    14b0:	32 e1       	ldi	r19, 0x12	; 18
    14b2:	43 e0       	ldi	r20, 0x03	; 3
    14b4:	5d e3       	ldi	r21, 0x3D	; 61
    14b6:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    14ba:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    14be:	68 83       	st	Y, r22
    14c0:	81 e0       	ldi	r24, 0x01	; 1
    14c2:	16 c0       	rjmp	.+44     	; 0x14f0 <PWM_calculateInitialValue+0x150>
    14c4:	6f e6       	ldi	r22, 0x6F	; 111
    14c6:	72 e1       	ldi	r23, 0x12	; 18
    14c8:	83 e0       	ldi	r24, 0x03	; 3
    14ca:	92 e4       	ldi	r25, 0x42	; 66
    14cc:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    14d0:	2f e6       	ldi	r18, 0x6F	; 111
    14d2:	32 e1       	ldi	r19, 0x12	; 18
    14d4:	43 e0       	ldi	r20, 0x03	; 3
    14d6:	5e e3       	ldi	r21, 0x3E	; 62
    14d8:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    14dc:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    14e0:	68 83       	st	Y, r22
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	05 c0       	rjmp	.+10     	; 0x14f0 <PWM_calculateInitialValue+0x150>
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	03 c0       	rjmp	.+6      	; 0x14f0 <PWM_calculateInitialValue+0x150>
    14ea:	80 e0       	ldi	r24, 0x00	; 0
    14ec:	01 c0       	rjmp	.+2      	; 0x14f0 <PWM_calculateInitialValue+0x150>
    14ee:	81 e0       	ldi	r24, 0x01	; 1
    14f0:	df 91       	pop	r29
    14f2:	cf 91       	pop	r28
    14f4:	08 95       	ret

000014f6 <PWM_setPrescaler>:
    14f6:	81 30       	cpi	r24, 0x01	; 1
    14f8:	24 e0       	ldi	r18, 0x04	; 4
    14fa:	92 07       	cpc	r25, r18
    14fc:	08 f0       	brcs	.+2      	; 0x1500 <PWM_setPrescaler+0xa>
    14fe:	6a c0       	rjmp	.+212    	; 0x15d4 <PWM_setPrescaler+0xde>
    1500:	80 34       	cpi	r24, 0x40	; 64
    1502:	91 05       	cpc	r25, r1
    1504:	d9 f1       	breq	.+118    	; 0x157c <PWM_setPrescaler+0x86>
    1506:	50 f4       	brcc	.+20     	; 0x151c <PWM_setPrescaler+0x26>
    1508:	88 30       	cpi	r24, 0x08	; 8
    150a:	91 05       	cpc	r25, r1
    150c:	09 f1       	breq	.+66     	; 0x1550 <PWM_setPrescaler+0x5a>
    150e:	80 32       	cpi	r24, 0x20	; 32
    1510:	91 05       	cpc	r25, r1
    1512:	49 f1       	breq	.+82     	; 0x1566 <PWM_setPrescaler+0x70>
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	09 f0       	breq	.+2      	; 0x151a <PWM_setPrescaler+0x24>
    1518:	5f c0       	rjmp	.+190    	; 0x15d8 <PWM_setPrescaler+0xe2>
    151a:	0f c0       	rjmp	.+30     	; 0x153a <PWM_setPrescaler+0x44>
    151c:	81 15       	cp	r24, r1
    151e:	21 e0       	ldi	r18, 0x01	; 1
    1520:	92 07       	cpc	r25, r18
    1522:	09 f4       	brne	.+2      	; 0x1526 <PWM_setPrescaler+0x30>
    1524:	41 c0       	rjmp	.+130    	; 0x15a8 <PWM_setPrescaler+0xb2>
    1526:	81 15       	cp	r24, r1
    1528:	24 e0       	ldi	r18, 0x04	; 4
    152a:	92 07       	cpc	r25, r18
    152c:	09 f4       	brne	.+2      	; 0x1530 <PWM_setPrescaler+0x3a>
    152e:	47 c0       	rjmp	.+142    	; 0x15be <PWM_setPrescaler+0xc8>
    1530:	80 38       	cpi	r24, 0x80	; 128
    1532:	91 05       	cpc	r25, r1
    1534:	09 f0       	breq	.+2      	; 0x1538 <PWM_setPrescaler+0x42>
    1536:	50 c0       	rjmp	.+160    	; 0x15d8 <PWM_setPrescaler+0xe2>
    1538:	2c c0       	rjmp	.+88     	; 0x1592 <PWM_setPrescaler+0x9c>
    153a:	85 b5       	in	r24, 0x25	; 37
    153c:	81 60       	ori	r24, 0x01	; 1
    153e:	85 bd       	out	0x25, r24	; 37
    1540:	85 b5       	in	r24, 0x25	; 37
    1542:	8d 7f       	andi	r24, 0xFD	; 253
    1544:	85 bd       	out	0x25, r24	; 37
    1546:	85 b5       	in	r24, 0x25	; 37
    1548:	8b 7f       	andi	r24, 0xFB	; 251
    154a:	85 bd       	out	0x25, r24	; 37
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	08 95       	ret
    1550:	85 b5       	in	r24, 0x25	; 37
    1552:	8e 7f       	andi	r24, 0xFE	; 254
    1554:	85 bd       	out	0x25, r24	; 37
    1556:	85 b5       	in	r24, 0x25	; 37
    1558:	82 60       	ori	r24, 0x02	; 2
    155a:	85 bd       	out	0x25, r24	; 37
    155c:	85 b5       	in	r24, 0x25	; 37
    155e:	8b 7f       	andi	r24, 0xFB	; 251
    1560:	85 bd       	out	0x25, r24	; 37
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	08 95       	ret
    1566:	85 b5       	in	r24, 0x25	; 37
    1568:	81 60       	ori	r24, 0x01	; 1
    156a:	85 bd       	out	0x25, r24	; 37
    156c:	85 b5       	in	r24, 0x25	; 37
    156e:	82 60       	ori	r24, 0x02	; 2
    1570:	85 bd       	out	0x25, r24	; 37
    1572:	85 b5       	in	r24, 0x25	; 37
    1574:	8b 7f       	andi	r24, 0xFB	; 251
    1576:	85 bd       	out	0x25, r24	; 37
    1578:	81 e0       	ldi	r24, 0x01	; 1
    157a:	08 95       	ret
    157c:	85 b5       	in	r24, 0x25	; 37
    157e:	8e 7f       	andi	r24, 0xFE	; 254
    1580:	85 bd       	out	0x25, r24	; 37
    1582:	85 b5       	in	r24, 0x25	; 37
    1584:	8d 7f       	andi	r24, 0xFD	; 253
    1586:	85 bd       	out	0x25, r24	; 37
    1588:	85 b5       	in	r24, 0x25	; 37
    158a:	84 60       	ori	r24, 0x04	; 4
    158c:	85 bd       	out	0x25, r24	; 37
    158e:	81 e0       	ldi	r24, 0x01	; 1
    1590:	08 95       	ret
    1592:	85 b5       	in	r24, 0x25	; 37
    1594:	81 60       	ori	r24, 0x01	; 1
    1596:	85 bd       	out	0x25, r24	; 37
    1598:	85 b5       	in	r24, 0x25	; 37
    159a:	8d 7f       	andi	r24, 0xFD	; 253
    159c:	85 bd       	out	0x25, r24	; 37
    159e:	85 b5       	in	r24, 0x25	; 37
    15a0:	84 60       	ori	r24, 0x04	; 4
    15a2:	85 bd       	out	0x25, r24	; 37
    15a4:	81 e0       	ldi	r24, 0x01	; 1
    15a6:	08 95       	ret
    15a8:	85 b5       	in	r24, 0x25	; 37
    15aa:	8e 7f       	andi	r24, 0xFE	; 254
    15ac:	85 bd       	out	0x25, r24	; 37
    15ae:	85 b5       	in	r24, 0x25	; 37
    15b0:	82 60       	ori	r24, 0x02	; 2
    15b2:	85 bd       	out	0x25, r24	; 37
    15b4:	85 b5       	in	r24, 0x25	; 37
    15b6:	84 60       	ori	r24, 0x04	; 4
    15b8:	85 bd       	out	0x25, r24	; 37
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	08 95       	ret
    15be:	85 b5       	in	r24, 0x25	; 37
    15c0:	81 60       	ori	r24, 0x01	; 1
    15c2:	85 bd       	out	0x25, r24	; 37
    15c4:	85 b5       	in	r24, 0x25	; 37
    15c6:	82 60       	ori	r24, 0x02	; 2
    15c8:	85 bd       	out	0x25, r24	; 37
    15ca:	85 b5       	in	r24, 0x25	; 37
    15cc:	84 60       	ori	r24, 0x04	; 4
    15ce:	85 bd       	out	0x25, r24	; 37
    15d0:	81 e0       	ldi	r24, 0x01	; 1
    15d2:	08 95       	ret
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	08 95       	ret
    15d8:	81 e0       	ldi	r24, 0x01	; 1
    15da:	08 95       	ret

000015dc <PWM_initialization>:
    15dc:	84 30       	cpi	r24, 0x04	; 4
    15de:	08 f0       	brcs	.+2      	; 0x15e2 <PWM_initialization+0x6>
    15e0:	88 c0       	rjmp	.+272    	; 0x16f2 <PWM_initialization+0x116>
    15e2:	68 30       	cpi	r22, 0x08	; 8
    15e4:	08 f0       	brcs	.+2      	; 0x15e8 <PWM_initialization+0xc>
    15e6:	87 c0       	rjmp	.+270    	; 0x16f6 <PWM_initialization+0x11a>
    15e8:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <u8_gs_portId>
    15ec:	60 93 d4 00 	sts	0x00D4, r22	; 0x8000d4 <u8_gs_pinId>
    15f0:	81 30       	cpi	r24, 0x01	; 1
    15f2:	91 f0       	breq	.+36     	; 0x1618 <PWM_initialization+0x3c>
    15f4:	28 f0       	brcs	.+10     	; 0x1600 <PWM_initialization+0x24>
    15f6:	82 30       	cpi	r24, 0x02	; 2
    15f8:	d9 f0       	breq	.+54     	; 0x1630 <PWM_initialization+0x54>
    15fa:	83 30       	cpi	r24, 0x03	; 3
    15fc:	29 f1       	breq	.+74     	; 0x1648 <PWM_initialization+0x6c>
    15fe:	2f c0       	rjmp	.+94     	; 0x165e <PWM_initialization+0x82>
    1600:	9a b3       	in	r25, 0x1a	; 26
    1602:	e1 e0       	ldi	r30, 0x01	; 1
    1604:	f0 e0       	ldi	r31, 0x00	; 0
    1606:	06 2e       	mov	r0, r22
    1608:	02 c0       	rjmp	.+4      	; 0x160e <PWM_initialization+0x32>
    160a:	ee 0f       	add	r30, r30
    160c:	ff 1f       	adc	r31, r31
    160e:	0a 94       	dec	r0
    1610:	e2 f7       	brpl	.-8      	; 0x160a <PWM_initialization+0x2e>
    1612:	e9 2b       	or	r30, r25
    1614:	ea bb       	out	0x1a, r30	; 26
    1616:	23 c0       	rjmp	.+70     	; 0x165e <PWM_initialization+0x82>
    1618:	97 b3       	in	r25, 0x17	; 23
    161a:	e1 e0       	ldi	r30, 0x01	; 1
    161c:	f0 e0       	ldi	r31, 0x00	; 0
    161e:	06 2e       	mov	r0, r22
    1620:	02 c0       	rjmp	.+4      	; 0x1626 <PWM_initialization+0x4a>
    1622:	ee 0f       	add	r30, r30
    1624:	ff 1f       	adc	r31, r31
    1626:	0a 94       	dec	r0
    1628:	e2 f7       	brpl	.-8      	; 0x1622 <PWM_initialization+0x46>
    162a:	e9 2b       	or	r30, r25
    162c:	e7 bb       	out	0x17, r30	; 23
    162e:	17 c0       	rjmp	.+46     	; 0x165e <PWM_initialization+0x82>
    1630:	94 b3       	in	r25, 0x14	; 20
    1632:	e1 e0       	ldi	r30, 0x01	; 1
    1634:	f0 e0       	ldi	r31, 0x00	; 0
    1636:	06 2e       	mov	r0, r22
    1638:	02 c0       	rjmp	.+4      	; 0x163e <PWM_initialization+0x62>
    163a:	ee 0f       	add	r30, r30
    163c:	ff 1f       	adc	r31, r31
    163e:	0a 94       	dec	r0
    1640:	e2 f7       	brpl	.-8      	; 0x163a <PWM_initialization+0x5e>
    1642:	e9 2b       	or	r30, r25
    1644:	e4 bb       	out	0x14, r30	; 20
    1646:	0b c0       	rjmp	.+22     	; 0x165e <PWM_initialization+0x82>
    1648:	91 b3       	in	r25, 0x11	; 17
    164a:	e1 e0       	ldi	r30, 0x01	; 1
    164c:	f0 e0       	ldi	r31, 0x00	; 0
    164e:	06 2e       	mov	r0, r22
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <PWM_initialization+0x7a>
    1652:	ee 0f       	add	r30, r30
    1654:	ff 1f       	adc	r31, r31
    1656:	0a 94       	dec	r0
    1658:	e2 f7       	brpl	.-8      	; 0x1652 <PWM_initialization+0x76>
    165a:	e9 2b       	or	r30, r25
    165c:	e1 bb       	out	0x11, r30	; 17
    165e:	81 30       	cpi	r24, 0x01	; 1
    1660:	91 f0       	breq	.+36     	; 0x1686 <PWM_initialization+0xaa>
    1662:	28 f0       	brcs	.+10     	; 0x166e <PWM_initialization+0x92>
    1664:	82 30       	cpi	r24, 0x02	; 2
    1666:	d9 f0       	breq	.+54     	; 0x169e <PWM_initialization+0xc2>
    1668:	83 30       	cpi	r24, 0x03	; 3
    166a:	29 f1       	breq	.+74     	; 0x16b6 <PWM_initialization+0xda>
    166c:	2f c0       	rjmp	.+94     	; 0x16cc <PWM_initialization+0xf0>
    166e:	7b b3       	in	r23, 0x1b	; 27
    1670:	81 e0       	ldi	r24, 0x01	; 1
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	02 c0       	rjmp	.+4      	; 0x167a <PWM_initialization+0x9e>
    1676:	88 0f       	add	r24, r24
    1678:	99 1f       	adc	r25, r25
    167a:	6a 95       	dec	r22
    167c:	e2 f7       	brpl	.-8      	; 0x1676 <PWM_initialization+0x9a>
    167e:	80 95       	com	r24
    1680:	87 23       	and	r24, r23
    1682:	8b bb       	out	0x1b, r24	; 27
    1684:	23 c0       	rjmp	.+70     	; 0x16cc <PWM_initialization+0xf0>
    1686:	78 b3       	in	r23, 0x18	; 24
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	02 c0       	rjmp	.+4      	; 0x1692 <PWM_initialization+0xb6>
    168e:	88 0f       	add	r24, r24
    1690:	99 1f       	adc	r25, r25
    1692:	6a 95       	dec	r22
    1694:	e2 f7       	brpl	.-8      	; 0x168e <PWM_initialization+0xb2>
    1696:	80 95       	com	r24
    1698:	87 23       	and	r24, r23
    169a:	88 bb       	out	0x18, r24	; 24
    169c:	17 c0       	rjmp	.+46     	; 0x16cc <PWM_initialization+0xf0>
    169e:	75 b3       	in	r23, 0x15	; 21
    16a0:	81 e0       	ldi	r24, 0x01	; 1
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	02 c0       	rjmp	.+4      	; 0x16aa <PWM_initialization+0xce>
    16a6:	88 0f       	add	r24, r24
    16a8:	99 1f       	adc	r25, r25
    16aa:	6a 95       	dec	r22
    16ac:	e2 f7       	brpl	.-8      	; 0x16a6 <PWM_initialization+0xca>
    16ae:	80 95       	com	r24
    16b0:	87 23       	and	r24, r23
    16b2:	85 bb       	out	0x15, r24	; 21
    16b4:	0b c0       	rjmp	.+22     	; 0x16cc <PWM_initialization+0xf0>
    16b6:	72 b3       	in	r23, 0x12	; 18
    16b8:	81 e0       	ldi	r24, 0x01	; 1
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <PWM_initialization+0xe6>
    16be:	88 0f       	add	r24, r24
    16c0:	99 1f       	adc	r25, r25
    16c2:	6a 95       	dec	r22
    16c4:	e2 f7       	brpl	.-8      	; 0x16be <PWM_initialization+0xe2>
    16c6:	80 95       	com	r24
    16c8:	87 23       	and	r24, r23
    16ca:	82 bb       	out	0x12, r24	; 18
    16cc:	60 e0       	ldi	r22, 0x00	; 0
    16ce:	70 e0       	ldi	r23, 0x00	; 0
    16d0:	80 e8       	ldi	r24, 0x80	; 128
    16d2:	9f e3       	ldi	r25, 0x3F	; 63
    16d4:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    16d8:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <f32_gs_periodTime>
    16dc:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <f32_gs_periodTime+0x1>
    16e0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <f32_gs_periodTime+0x2>
    16e4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <f32_gs_periodTime+0x3>
    16e8:	89 b7       	in	r24, 0x39	; 57
    16ea:	80 64       	ori	r24, 0x40	; 64
    16ec:	89 bf       	out	0x39, r24	; 57
    16ee:	81 e0       	ldi	r24, 0x01	; 1
    16f0:	08 95       	ret
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	08 95       	ret
    16f6:	80 e0       	ldi	r24, 0x00	; 0
    16f8:	08 95       	ret

000016fa <PWM_generatePWM>:
    16fa:	8f 92       	push	r8
    16fc:	9f 92       	push	r9
    16fe:	af 92       	push	r10
    1700:	bf 92       	push	r11
    1702:	cf 92       	push	r12
    1704:	df 92       	push	r13
    1706:	ef 92       	push	r14
    1708:	ff 92       	push	r15
    170a:	85 36       	cpi	r24, 0x65	; 101
    170c:	08 f0       	brcs	.+2      	; 0x1710 <PWM_generatePWM+0x16>
    170e:	4b c0       	rjmp	.+150    	; 0x17a6 <PWM_generatePWM+0xac>
    1710:	80 90 ca 00 	lds	r8, 0x00CA	; 0x8000ca <f32_gs_periodTime>
    1714:	90 90 cb 00 	lds	r9, 0x00CB	; 0x8000cb <f32_gs_periodTime+0x1>
    1718:	a0 90 cc 00 	lds	r10, 0x00CC	; 0x8000cc <f32_gs_periodTime+0x2>
    171c:	b0 90 cd 00 	lds	r11, 0x00CD	; 0x8000cd <f32_gs_periodTime+0x3>
    1720:	68 2f       	mov	r22, r24
    1722:	70 e0       	ldi	r23, 0x00	; 0
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    172c:	a5 01       	movw	r20, r10
    172e:	94 01       	movw	r18, r8
    1730:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__mulsf3>
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	48 ec       	ldi	r20, 0xC8	; 200
    173a:	52 e4       	ldi	r21, 0x42	; 66
    173c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1740:	6b 01       	movw	r12, r22
    1742:	7c 01       	movw	r14, r24
    1744:	9b 01       	movw	r18, r22
    1746:	ac 01       	movw	r20, r24
    1748:	c5 01       	movw	r24, r10
    174a:	b4 01       	movw	r22, r8
    174c:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1750:	4b 01       	movw	r8, r22
    1752:	5c 01       	movw	r10, r24
    1754:	40 ed       	ldi	r20, 0xD0	; 208
    1756:	50 e0       	ldi	r21, 0x00	; 0
    1758:	0e 94 3e 09 	call	0x127c	; 0x127c <PWM_calculatePrescaler>
    175c:	4e ec       	ldi	r20, 0xCE	; 206
    175e:	50 e0       	ldi	r21, 0x00	; 0
    1760:	c7 01       	movw	r24, r14
    1762:	b6 01       	movw	r22, r12
    1764:	0e 94 3e 09 	call	0x127c	; 0x127c <PWM_calculatePrescaler>
    1768:	23 ed       	ldi	r18, 0xD3	; 211
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	b5 01       	movw	r22, r10
    176e:	a4 01       	movw	r20, r8
    1770:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <u16_gs_TonPrescale>
    1774:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <u16_gs_TonPrescale+0x1>
    1778:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <PWM_calculateInitialValue>
    177c:	22 ed       	ldi	r18, 0xD2	; 210
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	b7 01       	movw	r22, r14
    1782:	a6 01       	movw	r20, r12
    1784:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <u16_gs_ToffPrescale>
    1788:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <u16_gs_ToffPrescale+0x1>
    178c:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <PWM_calculateInitialValue>
    1790:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <u8_gs_TonInitialValue>
    1794:	84 bd       	out	0x24, r24	; 36
    1796:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <u16_gs_TonPrescale>
    179a:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <u16_gs_TonPrescale+0x1>
    179e:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <PWM_setPrescaler>
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	01 c0       	rjmp	.+2      	; 0x17a8 <PWM_generatePWM+0xae>
    17a6:	80 e0       	ldi	r24, 0x00	; 0
    17a8:	ff 90       	pop	r15
    17aa:	ef 90       	pop	r14
    17ac:	df 90       	pop	r13
    17ae:	cf 90       	pop	r12
    17b0:	bf 90       	pop	r11
    17b2:	af 90       	pop	r10
    17b4:	9f 90       	pop	r9
    17b6:	8f 90       	pop	r8
    17b8:	08 95       	ret

000017ba <__vector_5>:
    17ba:	1f 92       	push	r1
    17bc:	0f 92       	push	r0
    17be:	0f b6       	in	r0, 0x3f	; 63
    17c0:	0f 92       	push	r0
    17c2:	11 24       	eor	r1, r1
    17c4:	2f 93       	push	r18
    17c6:	3f 93       	push	r19
    17c8:	4f 93       	push	r20
    17ca:	5f 93       	push	r21
    17cc:	6f 93       	push	r22
    17ce:	7f 93       	push	r23
    17d0:	8f 93       	push	r24
    17d2:	9f 93       	push	r25
    17d4:	af 93       	push	r26
    17d6:	bf 93       	push	r27
    17d8:	ef 93       	push	r30
    17da:	ff 93       	push	r31
    17dc:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <u8_gs_PWMFlag>
    17e0:	81 11       	cpse	r24, r1
    17e2:	0d c0       	rjmp	.+26     	; 0x17fe <__vector_5+0x44>
    17e4:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <u16_gs_ToffPrescale>
    17e8:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <u16_gs_ToffPrescale+0x1>
    17ec:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <PWM_setPrescaler>
    17f0:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <u8_gs_ToffInitialValue>
    17f4:	84 bd       	out	0x24, r24	; 36
    17f6:	81 e0       	ldi	r24, 0x01	; 1
    17f8:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <u8_gs_PWMFlag>
    17fc:	0b c0       	rjmp	.+22     	; 0x1814 <__vector_5+0x5a>
    17fe:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <u16_gs_TonPrescale>
    1802:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <u16_gs_TonPrescale+0x1>
    1806:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <PWM_setPrescaler>
    180a:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <u8_gs_TonInitialValue>
    180e:	84 bd       	out	0x24, r24	; 36
    1810:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <u8_gs_PWMFlag>
    1814:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <u8_gs_portId>
    1818:	81 30       	cpi	r24, 0x01	; 1
    181a:	99 f0       	breq	.+38     	; 0x1842 <__vector_5+0x88>
    181c:	28 f0       	brcs	.+10     	; 0x1828 <__vector_5+0x6e>
    181e:	82 30       	cpi	r24, 0x02	; 2
    1820:	e9 f0       	breq	.+58     	; 0x185c <__vector_5+0xa2>
    1822:	83 30       	cpi	r24, 0x03	; 3
    1824:	41 f1       	breq	.+80     	; 0x1876 <__vector_5+0xbc>
    1826:	33 c0       	rjmp	.+102    	; 0x188e <__vector_5+0xd4>
    1828:	2b b3       	in	r18, 0x1b	; 27
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	00 90 d4 00 	lds	r0, 0x00D4	; 0x8000d4 <u8_gs_pinId>
    1832:	02 c0       	rjmp	.+4      	; 0x1838 <__vector_5+0x7e>
    1834:	88 0f       	add	r24, r24
    1836:	99 1f       	adc	r25, r25
    1838:	0a 94       	dec	r0
    183a:	e2 f7       	brpl	.-8      	; 0x1834 <__vector_5+0x7a>
    183c:	82 27       	eor	r24, r18
    183e:	8b bb       	out	0x1b, r24	; 27
    1840:	26 c0       	rjmp	.+76     	; 0x188e <__vector_5+0xd4>
    1842:	28 b3       	in	r18, 0x18	; 24
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	00 90 d4 00 	lds	r0, 0x00D4	; 0x8000d4 <u8_gs_pinId>
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <__vector_5+0x98>
    184e:	88 0f       	add	r24, r24
    1850:	99 1f       	adc	r25, r25
    1852:	0a 94       	dec	r0
    1854:	e2 f7       	brpl	.-8      	; 0x184e <__vector_5+0x94>
    1856:	82 27       	eor	r24, r18
    1858:	88 bb       	out	0x18, r24	; 24
    185a:	19 c0       	rjmp	.+50     	; 0x188e <__vector_5+0xd4>
    185c:	25 b3       	in	r18, 0x15	; 21
    185e:	81 e0       	ldi	r24, 0x01	; 1
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	00 90 d4 00 	lds	r0, 0x00D4	; 0x8000d4 <u8_gs_pinId>
    1866:	02 c0       	rjmp	.+4      	; 0x186c <__vector_5+0xb2>
    1868:	88 0f       	add	r24, r24
    186a:	99 1f       	adc	r25, r25
    186c:	0a 94       	dec	r0
    186e:	e2 f7       	brpl	.-8      	; 0x1868 <__vector_5+0xae>
    1870:	82 27       	eor	r24, r18
    1872:	85 bb       	out	0x15, r24	; 21
    1874:	0c c0       	rjmp	.+24     	; 0x188e <__vector_5+0xd4>
    1876:	22 b3       	in	r18, 0x12	; 18
    1878:	81 e0       	ldi	r24, 0x01	; 1
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	00 90 d4 00 	lds	r0, 0x00D4	; 0x8000d4 <u8_gs_pinId>
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <__vector_5+0xcc>
    1882:	88 0f       	add	r24, r24
    1884:	99 1f       	adc	r25, r25
    1886:	0a 94       	dec	r0
    1888:	e2 f7       	brpl	.-8      	; 0x1882 <__vector_5+0xc8>
    188a:	82 27       	eor	r24, r18
    188c:	82 bb       	out	0x12, r24	; 18
    188e:	ff 91       	pop	r31
    1890:	ef 91       	pop	r30
    1892:	bf 91       	pop	r27
    1894:	af 91       	pop	r26
    1896:	9f 91       	pop	r25
    1898:	8f 91       	pop	r24
    189a:	7f 91       	pop	r23
    189c:	6f 91       	pop	r22
    189e:	5f 91       	pop	r21
    18a0:	4f 91       	pop	r20
    18a2:	3f 91       	pop	r19
    18a4:	2f 91       	pop	r18
    18a6:	0f 90       	pop	r0
    18a8:	0f be       	out	0x3f, r0	; 63
    18aa:	0f 90       	pop	r0
    18ac:	1f 90       	pop	r1
    18ae:	18 95       	reti

000018b0 <TMR0_delayMS>:
    18b0:	8f 92       	push	r8
    18b2:	9f 92       	push	r9
    18b4:	af 92       	push	r10
    18b6:	bf 92       	push	r11
    18b8:	cf 92       	push	r12
    18ba:	df 92       	push	r13
    18bc:	ef 92       	push	r14
    18be:	ff 92       	push	r15
    18c0:	1f 93       	push	r17
    18c2:	cf 93       	push	r28
    18c4:	df 93       	push	r29
    18c6:	cd b7       	in	r28, 0x3d	; 61
    18c8:	de b7       	in	r29, 0x3e	; 62
    18ca:	27 97       	sbiw	r28, 0x07	; 7
    18cc:	0f b6       	in	r0, 0x3f	; 63
    18ce:	f8 94       	cli
    18d0:	de bf       	out	0x3e, r29	; 62
    18d2:	0f be       	out	0x3f, r0	; 63
    18d4:	cd bf       	out	0x3d, r28	; 61
    18d6:	6b 01       	movw	r12, r22
    18d8:	7c 01       	movw	r14, r24
    18da:	2f e6       	ldi	r18, 0x6F	; 111
    18dc:	32 e1       	ldi	r19, 0x12	; 18
    18de:	43 e0       	ldi	r20, 0x03	; 3
    18e0:	52 e4       	ldi	r21, 0x42	; 66
    18e2:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    18e6:	18 16       	cp	r1, r24
    18e8:	0c f4       	brge	.+2      	; 0x18ec <TMR0_delayMS+0x3c>
    18ea:	53 c0       	rjmp	.+166    	; 0x1992 <TMR0_delayMS+0xe2>
    18ec:	2f e6       	ldi	r18, 0x6F	; 111
    18ee:	32 e1       	ldi	r19, 0x12	; 18
    18f0:	43 e0       	ldi	r20, 0x03	; 3
    18f2:	5d e3       	ldi	r21, 0x3D	; 61
    18f4:	c7 01       	movw	r24, r14
    18f6:	b6 01       	movw	r22, r12
    18f8:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    18fc:	18 16       	cp	r1, r24
    18fe:	2c f0       	brlt	.+10     	; 0x190a <TMR0_delayMS+0x5a>
    1900:	81 e0       	ldi	r24, 0x01	; 1
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	9a 83       	std	Y+2, r25	; 0x02
    1906:	89 83       	std	Y+1, r24	; 0x01
    1908:	45 c0       	rjmp	.+138    	; 0x1994 <TMR0_delayMS+0xe4>
    190a:	2f e6       	ldi	r18, 0x6F	; 111
    190c:	32 e1       	ldi	r19, 0x12	; 18
    190e:	43 e8       	ldi	r20, 0x83	; 131
    1910:	5e e3       	ldi	r21, 0x3E	; 62
    1912:	c7 01       	movw	r24, r14
    1914:	b6 01       	movw	r22, r12
    1916:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    191a:	18 16       	cp	r1, r24
    191c:	34 f0       	brlt	.+12     	; 0x192a <TMR0_delayMS+0x7a>
    191e:	88 e0       	ldi	r24, 0x08	; 8
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	9a 83       	std	Y+2, r25	; 0x02
    1924:	89 83       	std	Y+1, r24	; 0x01
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	35 c0       	rjmp	.+106    	; 0x1994 <TMR0_delayMS+0xe4>
    192a:	2f e6       	ldi	r18, 0x6F	; 111
    192c:	32 e1       	ldi	r19, 0x12	; 18
    192e:	43 e0       	ldi	r20, 0x03	; 3
    1930:	50 e4       	ldi	r21, 0x40	; 64
    1932:	c7 01       	movw	r24, r14
    1934:	b6 01       	movw	r22, r12
    1936:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    193a:	18 16       	cp	r1, r24
    193c:	34 f0       	brlt	.+12     	; 0x194a <TMR0_delayMS+0x9a>
    193e:	80 e4       	ldi	r24, 0x40	; 64
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	9a 83       	std	Y+2, r25	; 0x02
    1944:	89 83       	std	Y+1, r24	; 0x01
    1946:	81 e0       	ldi	r24, 0x01	; 1
    1948:	25 c0       	rjmp	.+74     	; 0x1994 <TMR0_delayMS+0xe4>
    194a:	2f e6       	ldi	r18, 0x6F	; 111
    194c:	32 e1       	ldi	r19, 0x12	; 18
    194e:	43 e0       	ldi	r20, 0x03	; 3
    1950:	51 e4       	ldi	r21, 0x41	; 65
    1952:	c7 01       	movw	r24, r14
    1954:	b6 01       	movw	r22, r12
    1956:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    195a:	18 16       	cp	r1, r24
    195c:	34 f0       	brlt	.+12     	; 0x196a <TMR0_delayMS+0xba>
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	91 e0       	ldi	r25, 0x01	; 1
    1962:	9a 83       	std	Y+2, r25	; 0x02
    1964:	89 83       	std	Y+1, r24	; 0x01
    1966:	81 e0       	ldi	r24, 0x01	; 1
    1968:	15 c0       	rjmp	.+42     	; 0x1994 <TMR0_delayMS+0xe4>
    196a:	2f e6       	ldi	r18, 0x6F	; 111
    196c:	32 e1       	ldi	r19, 0x12	; 18
    196e:	43 e0       	ldi	r20, 0x03	; 3
    1970:	52 e4       	ldi	r21, 0x42	; 66
    1972:	c7 01       	movw	r24, r14
    1974:	b6 01       	movw	r22, r12
    1976:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    197a:	18 16       	cp	r1, r24
    197c:	34 f0       	brlt	.+12     	; 0x198a <TMR0_delayMS+0xda>
    197e:	80 e0       	ldi	r24, 0x00	; 0
    1980:	94 e0       	ldi	r25, 0x04	; 4
    1982:	9a 83       	std	Y+2, r25	; 0x02
    1984:	89 83       	std	Y+1, r24	; 0x01
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	05 c0       	rjmp	.+10     	; 0x1994 <TMR0_delayMS+0xe4>
    198a:	1a 82       	std	Y+2, r1	; 0x02
    198c:	19 82       	std	Y+1, r1	; 0x01
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	01 c0       	rjmp	.+2      	; 0x1994 <TMR0_delayMS+0xe4>
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	88 23       	and	r24, r24
    1996:	09 f4       	brne	.+2      	; 0x199a <TMR0_delayMS+0xea>
    1998:	75 c0       	rjmp	.+234    	; 0x1a84 <TMR0_delayMS+0x1d4>
    199a:	89 81       	ldd	r24, Y+1	; 0x01
    199c:	9a 81       	ldd	r25, Y+2	; 0x02
    199e:	80 34       	cpi	r24, 0x40	; 64
    19a0:	91 05       	cpc	r25, r1
    19a2:	a1 f1       	breq	.+104    	; 0x1a0c <TMR0_delayMS+0x15c>
    19a4:	30 f4       	brcc	.+12     	; 0x19b2 <TMR0_delayMS+0x102>
    19a6:	81 30       	cpi	r24, 0x01	; 1
    19a8:	91 05       	cpc	r25, r1
    19aa:	61 f0       	breq	.+24     	; 0x19c4 <TMR0_delayMS+0x114>
    19ac:	08 97       	sbiw	r24, 0x08	; 8
    19ae:	e1 f0       	breq	.+56     	; 0x19e8 <TMR0_delayMS+0x138>
    19b0:	63 c0       	rjmp	.+198    	; 0x1a78 <TMR0_delayMS+0x1c8>
    19b2:	81 15       	cp	r24, r1
    19b4:	21 e0       	ldi	r18, 0x01	; 1
    19b6:	92 07       	cpc	r25, r18
    19b8:	d9 f1       	breq	.+118    	; 0x1a30 <TMR0_delayMS+0x180>
    19ba:	81 15       	cp	r24, r1
    19bc:	94 40       	sbci	r25, 0x04	; 4
    19be:	09 f4       	brne	.+2      	; 0x19c2 <TMR0_delayMS+0x112>
    19c0:	49 c0       	rjmp	.+146    	; 0x1a54 <TMR0_delayMS+0x1a4>
    19c2:	5a c0       	rjmp	.+180    	; 0x1a78 <TMR0_delayMS+0x1c8>
    19c4:	a7 01       	movw	r20, r14
    19c6:	96 01       	movw	r18, r12
    19c8:	6f e6       	ldi	r22, 0x6F	; 111
    19ca:	72 e1       	ldi	r23, 0x12	; 18
    19cc:	83 e0       	ldi	r24, 0x03	; 3
    19ce:	9d e3       	ldi	r25, 0x3D	; 61
    19d0:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    19d4:	2f e6       	ldi	r18, 0x6F	; 111
    19d6:	32 e1       	ldi	r19, 0x12	; 18
    19d8:	43 e0       	ldi	r20, 0x03	; 3
    19da:	59 e3       	ldi	r21, 0x39	; 57
    19dc:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    19e0:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    19e4:	6b 83       	std	Y+3, r22	; 0x03
    19e6:	49 c0       	rjmp	.+146    	; 0x1a7a <TMR0_delayMS+0x1ca>
    19e8:	a7 01       	movw	r20, r14
    19ea:	96 01       	movw	r18, r12
    19ec:	6f e6       	ldi	r22, 0x6F	; 111
    19ee:	72 e1       	ldi	r23, 0x12	; 18
    19f0:	83 e8       	ldi	r24, 0x83	; 131
    19f2:	9e e3       	ldi	r25, 0x3E	; 62
    19f4:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    19f8:	2f e6       	ldi	r18, 0x6F	; 111
    19fa:	32 e1       	ldi	r19, 0x12	; 18
    19fc:	43 e8       	ldi	r20, 0x83	; 131
    19fe:	5a e3       	ldi	r21, 0x3A	; 58
    1a00:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1a04:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1a08:	6b 83       	std	Y+3, r22	; 0x03
    1a0a:	37 c0       	rjmp	.+110    	; 0x1a7a <TMR0_delayMS+0x1ca>
    1a0c:	a7 01       	movw	r20, r14
    1a0e:	96 01       	movw	r18, r12
    1a10:	6f e6       	ldi	r22, 0x6F	; 111
    1a12:	72 e1       	ldi	r23, 0x12	; 18
    1a14:	83 e0       	ldi	r24, 0x03	; 3
    1a16:	90 e4       	ldi	r25, 0x40	; 64
    1a18:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1a1c:	2f e6       	ldi	r18, 0x6F	; 111
    1a1e:	32 e1       	ldi	r19, 0x12	; 18
    1a20:	43 e0       	ldi	r20, 0x03	; 3
    1a22:	5c e3       	ldi	r21, 0x3C	; 60
    1a24:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1a28:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1a2c:	6b 83       	std	Y+3, r22	; 0x03
    1a2e:	25 c0       	rjmp	.+74     	; 0x1a7a <TMR0_delayMS+0x1ca>
    1a30:	a7 01       	movw	r20, r14
    1a32:	96 01       	movw	r18, r12
    1a34:	6f e6       	ldi	r22, 0x6F	; 111
    1a36:	72 e1       	ldi	r23, 0x12	; 18
    1a38:	83 e0       	ldi	r24, 0x03	; 3
    1a3a:	91 e4       	ldi	r25, 0x41	; 65
    1a3c:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1a40:	2f e6       	ldi	r18, 0x6F	; 111
    1a42:	32 e1       	ldi	r19, 0x12	; 18
    1a44:	43 e0       	ldi	r20, 0x03	; 3
    1a46:	5d e3       	ldi	r21, 0x3D	; 61
    1a48:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1a4c:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1a50:	6b 83       	std	Y+3, r22	; 0x03
    1a52:	13 c0       	rjmp	.+38     	; 0x1a7a <TMR0_delayMS+0x1ca>
    1a54:	a7 01       	movw	r20, r14
    1a56:	96 01       	movw	r18, r12
    1a58:	6f e6       	ldi	r22, 0x6F	; 111
    1a5a:	72 e1       	ldi	r23, 0x12	; 18
    1a5c:	83 e0       	ldi	r24, 0x03	; 3
    1a5e:	92 e4       	ldi	r25, 0x42	; 66
    1a60:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1a64:	2f e6       	ldi	r18, 0x6F	; 111
    1a66:	32 e1       	ldi	r19, 0x12	; 18
    1a68:	43 e0       	ldi	r20, 0x03	; 3
    1a6a:	5e e3       	ldi	r21, 0x3E	; 62
    1a6c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1a70:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1a74:	6b 83       	std	Y+3, r22	; 0x03
    1a76:	01 c0       	rjmp	.+2      	; 0x1a7a <TMR0_delayMS+0x1ca>
    1a78:	1b 82       	std	Y+3, r1	; 0x03
    1a7a:	1c 82       	std	Y+4, r1	; 0x04
    1a7c:	1d 82       	std	Y+5, r1	; 0x05
    1a7e:	1e 82       	std	Y+6, r1	; 0x06
    1a80:	1f 82       	std	Y+7, r1	; 0x07
    1a82:	11 c0       	rjmp	.+34     	; 0x1aa6 <TMR0_delayMS+0x1f6>
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	94 e0       	ldi	r25, 0x04	; 4
    1a88:	9a 83       	std	Y+2, r25	; 0x02
    1a8a:	89 83       	std	Y+1, r24	; 0x01
    1a8c:	2f e6       	ldi	r18, 0x6F	; 111
    1a8e:	32 e1       	ldi	r19, 0x12	; 18
    1a90:	43 e0       	ldi	r20, 0x03	; 3
    1a92:	52 e4       	ldi	r21, 0x42	; 66
    1a94:	c7 01       	movw	r24, r14
    1a96:	b6 01       	movw	r22, r12
    1a98:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1a9c:	6c 83       	std	Y+4, r22	; 0x04
    1a9e:	7d 83       	std	Y+5, r23	; 0x05
    1aa0:	8e 83       	std	Y+6, r24	; 0x06
    1aa2:	9f 83       	std	Y+7, r25	; 0x07
    1aa4:	1b 82       	std	Y+3, r1	; 0x03
    1aa6:	cc 80       	ldd	r12, Y+4	; 0x04
    1aa8:	dd 80       	ldd	r13, Y+5	; 0x05
    1aaa:	ee 80       	ldd	r14, Y+6	; 0x06
    1aac:	ff 80       	ldd	r15, Y+7	; 0x07
    1aae:	c7 01       	movw	r24, r14
    1ab0:	b6 01       	movw	r22, r12
    1ab2:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1ab6:	16 2f       	mov	r17, r22
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	80 e0       	ldi	r24, 0x00	; 0
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1ac2:	9b 01       	movw	r18, r22
    1ac4:	ac 01       	movw	r20, r24
    1ac6:	c7 01       	movw	r24, r14
    1ac8:	b6 01       	movw	r22, r12
    1aca:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1ace:	2f e6       	ldi	r18, 0x6F	; 111
    1ad0:	32 e1       	ldi	r19, 0x12	; 18
    1ad2:	43 e0       	ldi	r20, 0x03	; 3
    1ad4:	52 e4       	ldi	r21, 0x42	; 66
    1ad6:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__mulsf3>
    1ada:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1ade:	f6 2e       	mov	r15, r22
    1ae0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ae2:	82 bf       	out	0x32, r24	; 50
    1ae4:	11 11       	cpse	r17, r1
    1ae6:	28 c0       	rjmp	.+80     	; 0x1b38 <TMR0_delayMS+0x288>
    1ae8:	89 81       	ldd	r24, Y+1	; 0x01
    1aea:	9a 81       	ldd	r25, Y+2	; 0x02
    1aec:	80 34       	cpi	r24, 0x40	; 64
    1aee:	91 05       	cpc	r25, r1
    1af0:	a9 f0       	breq	.+42     	; 0x1b1c <TMR0_delayMS+0x26c>
    1af2:	30 f4       	brcc	.+12     	; 0x1b00 <TMR0_delayMS+0x250>
    1af4:	81 30       	cpi	r24, 0x01	; 1
    1af6:	91 05       	cpc	r25, r1
    1af8:	59 f0       	breq	.+22     	; 0x1b10 <TMR0_delayMS+0x260>
    1afa:	08 97       	sbiw	r24, 0x08	; 8
    1afc:	61 f0       	breq	.+24     	; 0x1b16 <TMR0_delayMS+0x266>
    1afe:	17 c0       	rjmp	.+46     	; 0x1b2e <TMR0_delayMS+0x27e>
    1b00:	81 15       	cp	r24, r1
    1b02:	21 e0       	ldi	r18, 0x01	; 1
    1b04:	92 07       	cpc	r25, r18
    1b06:	69 f0       	breq	.+26     	; 0x1b22 <TMR0_delayMS+0x272>
    1b08:	81 15       	cp	r24, r1
    1b0a:	94 40       	sbci	r25, 0x04	; 4
    1b0c:	69 f0       	breq	.+26     	; 0x1b28 <TMR0_delayMS+0x278>
    1b0e:	0f c0       	rjmp	.+30     	; 0x1b2e <TMR0_delayMS+0x27e>
    1b10:	81 e8       	ldi	r24, 0x81	; 129
    1b12:	83 bf       	out	0x33, r24	; 51
    1b14:	0d c0       	rjmp	.+26     	; 0x1b30 <TMR0_delayMS+0x280>
    1b16:	82 e8       	ldi	r24, 0x82	; 130
    1b18:	83 bf       	out	0x33, r24	; 51
    1b1a:	0a c0       	rjmp	.+20     	; 0x1b30 <TMR0_delayMS+0x280>
    1b1c:	83 e8       	ldi	r24, 0x83	; 131
    1b1e:	83 bf       	out	0x33, r24	; 51
    1b20:	07 c0       	rjmp	.+14     	; 0x1b30 <TMR0_delayMS+0x280>
    1b22:	84 e8       	ldi	r24, 0x84	; 132
    1b24:	83 bf       	out	0x33, r24	; 51
    1b26:	04 c0       	rjmp	.+8      	; 0x1b30 <TMR0_delayMS+0x280>
    1b28:	85 e8       	ldi	r24, 0x85	; 133
    1b2a:	83 bf       	out	0x33, r24	; 51
    1b2c:	01 c0       	rjmp	.+2      	; 0x1b30 <TMR0_delayMS+0x280>
    1b2e:	13 be       	out	0x33, r1	; 51
    1b30:	08 b6       	in	r0, 0x38	; 56
    1b32:	00 fe       	sbrs	r0, 0
    1b34:	fd cf       	rjmp	.-6      	; 0x1b30 <TMR0_delayMS+0x280>
    1b36:	00 c1       	rjmp	.+512    	; 0x1d38 <TMR0_delayMS+0x488>
    1b38:	85 e8       	ldi	r24, 0x85	; 133
    1b3a:	83 bf       	out	0x33, r24	; 51
    1b3c:	07 c0       	rjmp	.+14     	; 0x1b4c <TMR0_delayMS+0x29c>
    1b3e:	08 b6       	in	r0, 0x38	; 56
    1b40:	00 fe       	sbrs	r0, 0
    1b42:	fd cf       	rjmp	.-6      	; 0x1b3e <TMR0_delayMS+0x28e>
    1b44:	11 50       	subi	r17, 0x01	; 1
    1b46:	88 b7       	in	r24, 0x38	; 56
    1b48:	81 60       	ori	r24, 0x01	; 1
    1b4a:	88 bf       	out	0x38, r24	; 56
    1b4c:	11 11       	cpse	r17, r1
    1b4e:	f7 cf       	rjmp	.-18     	; 0x1b3e <TMR0_delayMS+0x28e>
    1b50:	ff 20       	and	r15, r15
    1b52:	09 f4       	brne	.+2      	; 0x1b56 <TMR0_delayMS+0x2a6>
    1b54:	53 c0       	rjmp	.+166    	; 0x1bfc <TMR0_delayMS+0x34c>
    1b56:	6f 2d       	mov	r22, r15
    1b58:	70 e0       	ldi	r23, 0x00	; 0
    1b5a:	80 e0       	ldi	r24, 0x00	; 0
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1b62:	4b 01       	movw	r8, r22
    1b64:	5c 01       	movw	r10, r24
    1b66:	2f e6       	ldi	r18, 0x6F	; 111
    1b68:	32 e1       	ldi	r19, 0x12	; 18
    1b6a:	43 e0       	ldi	r20, 0x03	; 3
    1b6c:	5d e3       	ldi	r21, 0x3D	; 61
    1b6e:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1b72:	18 16       	cp	r1, r24
    1b74:	2c f0       	brlt	.+10     	; 0x1b80 <TMR0_delayMS+0x2d0>
    1b76:	81 e0       	ldi	r24, 0x01	; 1
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	9a 83       	std	Y+2, r25	; 0x02
    1b7c:	89 83       	std	Y+1, r24	; 0x01
    1b7e:	3e c0       	rjmp	.+124    	; 0x1bfc <TMR0_delayMS+0x34c>
    1b80:	2f e6       	ldi	r18, 0x6F	; 111
    1b82:	32 e1       	ldi	r19, 0x12	; 18
    1b84:	43 e8       	ldi	r20, 0x83	; 131
    1b86:	5e e3       	ldi	r21, 0x3E	; 62
    1b88:	c5 01       	movw	r24, r10
    1b8a:	b4 01       	movw	r22, r8
    1b8c:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1b90:	18 16       	cp	r1, r24
    1b92:	2c f0       	brlt	.+10     	; 0x1b9e <TMR0_delayMS+0x2ee>
    1b94:	88 e0       	ldi	r24, 0x08	; 8
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	9a 83       	std	Y+2, r25	; 0x02
    1b9a:	89 83       	std	Y+1, r24	; 0x01
    1b9c:	2f c0       	rjmp	.+94     	; 0x1bfc <TMR0_delayMS+0x34c>
    1b9e:	2f e6       	ldi	r18, 0x6F	; 111
    1ba0:	32 e1       	ldi	r19, 0x12	; 18
    1ba2:	43 e0       	ldi	r20, 0x03	; 3
    1ba4:	50 e4       	ldi	r21, 0x40	; 64
    1ba6:	c5 01       	movw	r24, r10
    1ba8:	b4 01       	movw	r22, r8
    1baa:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1bae:	18 16       	cp	r1, r24
    1bb0:	2c f0       	brlt	.+10     	; 0x1bbc <TMR0_delayMS+0x30c>
    1bb2:	80 e4       	ldi	r24, 0x40	; 64
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	9a 83       	std	Y+2, r25	; 0x02
    1bb8:	89 83       	std	Y+1, r24	; 0x01
    1bba:	20 c0       	rjmp	.+64     	; 0x1bfc <TMR0_delayMS+0x34c>
    1bbc:	2f e6       	ldi	r18, 0x6F	; 111
    1bbe:	32 e1       	ldi	r19, 0x12	; 18
    1bc0:	43 e0       	ldi	r20, 0x03	; 3
    1bc2:	51 e4       	ldi	r21, 0x41	; 65
    1bc4:	c5 01       	movw	r24, r10
    1bc6:	b4 01       	movw	r22, r8
    1bc8:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1bcc:	18 16       	cp	r1, r24
    1bce:	2c f0       	brlt	.+10     	; 0x1bda <TMR0_delayMS+0x32a>
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	91 e0       	ldi	r25, 0x01	; 1
    1bd4:	9a 83       	std	Y+2, r25	; 0x02
    1bd6:	89 83       	std	Y+1, r24	; 0x01
    1bd8:	11 c0       	rjmp	.+34     	; 0x1bfc <TMR0_delayMS+0x34c>
    1bda:	2f e6       	ldi	r18, 0x6F	; 111
    1bdc:	32 e1       	ldi	r19, 0x12	; 18
    1bde:	43 e0       	ldi	r20, 0x03	; 3
    1be0:	52 e4       	ldi	r21, 0x42	; 66
    1be2:	c5 01       	movw	r24, r10
    1be4:	b4 01       	movw	r22, r8
    1be6:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1bea:	18 16       	cp	r1, r24
    1bec:	2c f0       	brlt	.+10     	; 0x1bf8 <TMR0_delayMS+0x348>
    1bee:	80 e0       	ldi	r24, 0x00	; 0
    1bf0:	94 e0       	ldi	r25, 0x04	; 4
    1bf2:	9a 83       	std	Y+2, r25	; 0x02
    1bf4:	89 83       	std	Y+1, r24	; 0x01
    1bf6:	02 c0       	rjmp	.+4      	; 0x1bfc <TMR0_delayMS+0x34c>
    1bf8:	1a 82       	std	Y+2, r1	; 0x02
    1bfa:	19 82       	std	Y+1, r1	; 0x01
    1bfc:	89 81       	ldd	r24, Y+1	; 0x01
    1bfe:	9a 81       	ldd	r25, Y+2	; 0x02
    1c00:	80 34       	cpi	r24, 0x40	; 64
    1c02:	91 05       	cpc	r25, r1
    1c04:	09 f4       	brne	.+2      	; 0x1c08 <TMR0_delayMS+0x358>
    1c06:	45 c0       	rjmp	.+138    	; 0x1c92 <TMR0_delayMS+0x3e2>
    1c08:	30 f4       	brcc	.+12     	; 0x1c16 <TMR0_delayMS+0x366>
    1c0a:	81 30       	cpi	r24, 0x01	; 1
    1c0c:	91 05       	cpc	r25, r1
    1c0e:	69 f0       	breq	.+26     	; 0x1c2a <TMR0_delayMS+0x37a>
    1c10:	08 97       	sbiw	r24, 0x08	; 8
    1c12:	29 f1       	breq	.+74     	; 0x1c5e <TMR0_delayMS+0x3ae>
    1c14:	8c c0       	rjmp	.+280    	; 0x1d2e <TMR0_delayMS+0x47e>
    1c16:	81 15       	cp	r24, r1
    1c18:	21 e0       	ldi	r18, 0x01	; 1
    1c1a:	92 07       	cpc	r25, r18
    1c1c:	09 f4       	brne	.+2      	; 0x1c20 <TMR0_delayMS+0x370>
    1c1e:	53 c0       	rjmp	.+166    	; 0x1cc6 <TMR0_delayMS+0x416>
    1c20:	81 15       	cp	r24, r1
    1c22:	94 40       	sbci	r25, 0x04	; 4
    1c24:	09 f4       	brne	.+2      	; 0x1c28 <TMR0_delayMS+0x378>
    1c26:	69 c0       	rjmp	.+210    	; 0x1cfa <TMR0_delayMS+0x44a>
    1c28:	82 c0       	rjmp	.+260    	; 0x1d2e <TMR0_delayMS+0x47e>
    1c2a:	6f 2d       	mov	r22, r15
    1c2c:	70 e0       	ldi	r23, 0x00	; 0
    1c2e:	80 e0       	ldi	r24, 0x00	; 0
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1c36:	9b 01       	movw	r18, r22
    1c38:	ac 01       	movw	r20, r24
    1c3a:	6f e6       	ldi	r22, 0x6F	; 111
    1c3c:	72 e1       	ldi	r23, 0x12	; 18
    1c3e:	83 e0       	ldi	r24, 0x03	; 3
    1c40:	9d e3       	ldi	r25, 0x3D	; 61
    1c42:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1c46:	2f e6       	ldi	r18, 0x6F	; 111
    1c48:	32 e1       	ldi	r19, 0x12	; 18
    1c4a:	43 e0       	ldi	r20, 0x03	; 3
    1c4c:	59 e3       	ldi	r21, 0x39	; 57
    1c4e:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1c52:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1c56:	62 bf       	out	0x32, r22	; 50
    1c58:	81 e8       	ldi	r24, 0x81	; 129
    1c5a:	83 bf       	out	0x33, r24	; 51
    1c5c:	6a c0       	rjmp	.+212    	; 0x1d32 <TMR0_delayMS+0x482>
    1c5e:	6f 2d       	mov	r22, r15
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	80 e0       	ldi	r24, 0x00	; 0
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1c6a:	9b 01       	movw	r18, r22
    1c6c:	ac 01       	movw	r20, r24
    1c6e:	6f e6       	ldi	r22, 0x6F	; 111
    1c70:	72 e1       	ldi	r23, 0x12	; 18
    1c72:	83 e8       	ldi	r24, 0x83	; 131
    1c74:	9e e3       	ldi	r25, 0x3E	; 62
    1c76:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1c7a:	2f e6       	ldi	r18, 0x6F	; 111
    1c7c:	32 e1       	ldi	r19, 0x12	; 18
    1c7e:	43 e8       	ldi	r20, 0x83	; 131
    1c80:	5a e3       	ldi	r21, 0x3A	; 58
    1c82:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1c86:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1c8a:	62 bf       	out	0x32, r22	; 50
    1c8c:	82 e8       	ldi	r24, 0x82	; 130
    1c8e:	83 bf       	out	0x33, r24	; 51
    1c90:	50 c0       	rjmp	.+160    	; 0x1d32 <TMR0_delayMS+0x482>
    1c92:	6f 2d       	mov	r22, r15
    1c94:	70 e0       	ldi	r23, 0x00	; 0
    1c96:	80 e0       	ldi	r24, 0x00	; 0
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1c9e:	9b 01       	movw	r18, r22
    1ca0:	ac 01       	movw	r20, r24
    1ca2:	6f e6       	ldi	r22, 0x6F	; 111
    1ca4:	72 e1       	ldi	r23, 0x12	; 18
    1ca6:	83 e0       	ldi	r24, 0x03	; 3
    1ca8:	90 e4       	ldi	r25, 0x40	; 64
    1caa:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1cae:	2f e6       	ldi	r18, 0x6F	; 111
    1cb0:	32 e1       	ldi	r19, 0x12	; 18
    1cb2:	43 e0       	ldi	r20, 0x03	; 3
    1cb4:	5c e3       	ldi	r21, 0x3C	; 60
    1cb6:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1cba:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1cbe:	62 bf       	out	0x32, r22	; 50
    1cc0:	83 e8       	ldi	r24, 0x83	; 131
    1cc2:	83 bf       	out	0x33, r24	; 51
    1cc4:	36 c0       	rjmp	.+108    	; 0x1d32 <TMR0_delayMS+0x482>
    1cc6:	6f 2d       	mov	r22, r15
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1cd2:	9b 01       	movw	r18, r22
    1cd4:	ac 01       	movw	r20, r24
    1cd6:	6f e6       	ldi	r22, 0x6F	; 111
    1cd8:	72 e1       	ldi	r23, 0x12	; 18
    1cda:	83 e0       	ldi	r24, 0x03	; 3
    1cdc:	91 e4       	ldi	r25, 0x41	; 65
    1cde:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1ce2:	2f e6       	ldi	r18, 0x6F	; 111
    1ce4:	32 e1       	ldi	r19, 0x12	; 18
    1ce6:	43 e0       	ldi	r20, 0x03	; 3
    1ce8:	5d e3       	ldi	r21, 0x3D	; 61
    1cea:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1cee:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1cf2:	62 bf       	out	0x32, r22	; 50
    1cf4:	84 e8       	ldi	r24, 0x84	; 132
    1cf6:	83 bf       	out	0x33, r24	; 51
    1cf8:	1c c0       	rjmp	.+56     	; 0x1d32 <TMR0_delayMS+0x482>
    1cfa:	6f 2d       	mov	r22, r15
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	80 e0       	ldi	r24, 0x00	; 0
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	0e 94 bb 10 	call	0x2176	; 0x2176 <__floatsisf>
    1d06:	9b 01       	movw	r18, r22
    1d08:	ac 01       	movw	r20, r24
    1d0a:	6f e6       	ldi	r22, 0x6F	; 111
    1d0c:	72 e1       	ldi	r23, 0x12	; 18
    1d0e:	83 e0       	ldi	r24, 0x03	; 3
    1d10:	92 e4       	ldi	r25, 0x42	; 66
    1d12:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
    1d16:	2f e6       	ldi	r18, 0x6F	; 111
    1d18:	32 e1       	ldi	r19, 0x12	; 18
    1d1a:	43 e0       	ldi	r20, 0x03	; 3
    1d1c:	5e e3       	ldi	r21, 0x3E	; 62
    1d1e:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1d22:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1d26:	62 bf       	out	0x32, r22	; 50
    1d28:	85 e8       	ldi	r24, 0x85	; 133
    1d2a:	83 bf       	out	0x33, r24	; 51
    1d2c:	02 c0       	rjmp	.+4      	; 0x1d32 <TMR0_delayMS+0x482>
    1d2e:	12 be       	out	0x32, r1	; 50
    1d30:	13 be       	out	0x33, r1	; 51
    1d32:	08 b6       	in	r0, 0x38	; 56
    1d34:	00 fe       	sbrs	r0, 0
    1d36:	fd cf       	rjmp	.-6      	; 0x1d32 <TMR0_delayMS+0x482>
    1d38:	88 b7       	in	r24, 0x38	; 56
    1d3a:	81 60       	ori	r24, 0x01	; 1
    1d3c:	88 bf       	out	0x38, r24	; 56
    1d3e:	13 be       	out	0x33, r1	; 51
    1d40:	27 96       	adiw	r28, 0x07	; 7
    1d42:	0f b6       	in	r0, 0x3f	; 63
    1d44:	f8 94       	cli
    1d46:	de bf       	out	0x3e, r29	; 62
    1d48:	0f be       	out	0x3f, r0	; 63
    1d4a:	cd bf       	out	0x3d, r28	; 61
    1d4c:	df 91       	pop	r29
    1d4e:	cf 91       	pop	r28
    1d50:	1f 91       	pop	r17
    1d52:	ff 90       	pop	r15
    1d54:	ef 90       	pop	r14
    1d56:	df 90       	pop	r13
    1d58:	cf 90       	pop	r12
    1d5a:	bf 90       	pop	r11
    1d5c:	af 90       	pop	r10
    1d5e:	9f 90       	pop	r9
    1d60:	8f 90       	pop	r8
    1d62:	08 95       	ret

00001d64 <TMR0_timeoutMS>:
    1d64:	cf 92       	push	r12
    1d66:	df 92       	push	r13
    1d68:	ef 92       	push	r14
    1d6a:	ff 92       	push	r15
    1d6c:	6b 01       	movw	r12, r22
    1d6e:	7c 01       	movw	r14, r24
    1d70:	2f e6       	ldi	r18, 0x6F	; 111
    1d72:	32 e1       	ldi	r19, 0x12	; 18
    1d74:	43 e0       	ldi	r20, 0x03	; 3
    1d76:	52 e4       	ldi	r21, 0x42	; 66
    1d78:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
    1d7c:	88 23       	and	r24, r24
    1d7e:	4c f4       	brge	.+18     	; 0x1d92 <TMR0_timeoutMS+0x2e>
    1d80:	c7 01       	movw	r24, r14
    1d82:	b6 01       	movw	r22, r12
    1d84:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1d88:	60 93 d7 00 	sts	0x00D7, r22	; 0x8000d7 <g_initial_value>
    1d8c:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <NO_OF_OVERFLOWS>
    1d90:	0f c0       	rjmp	.+30     	; 0x1db0 <TMR0_timeoutMS+0x4c>
    1d92:	2f e6       	ldi	r18, 0x6F	; 111
    1d94:	32 e1       	ldi	r19, 0x12	; 18
    1d96:	43 e0       	ldi	r20, 0x03	; 3
    1d98:	52 e4       	ldi	r21, 0x42	; 66
    1d9a:	c7 01       	movw	r24, r14
    1d9c:	b6 01       	movw	r22, r12
    1d9e:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
    1da2:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixunssfsi>
    1da6:	60 93 d9 00 	sts	0x00D9, r22	; 0x8000d9 <NO_OF_OVERFLOWS>
    1daa:	8f ef       	ldi	r24, 0xFF	; 255
    1dac:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <g_initial_value>
    1db0:	12 be       	out	0x32, r1	; 50
    1db2:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <g_initial_value>
    1db6:	8c bf       	out	0x3c, r24	; 60
    1db8:	89 b7       	in	r24, 0x39	; 57
    1dba:	82 60       	ori	r24, 0x02	; 2
    1dbc:	89 bf       	out	0x39, r24	; 57
    1dbe:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <g_timeout_flag>
    1dc2:	8d e8       	ldi	r24, 0x8D	; 141
    1dc4:	83 bf       	out	0x33, r24	; 51
    1dc6:	ff 90       	pop	r15
    1dc8:	ef 90       	pop	r14
    1dca:	df 90       	pop	r13
    1dcc:	cf 90       	pop	r12
    1dce:	08 95       	ret

00001dd0 <__vector_10>:
    1dd0:	1f 92       	push	r1
    1dd2:	0f 92       	push	r0
    1dd4:	0f b6       	in	r0, 0x3f	; 63
    1dd6:	0f 92       	push	r0
    1dd8:	11 24       	eor	r1, r1
    1dda:	8f 93       	push	r24
    1ddc:	9f 93       	push	r25
    1dde:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <NO_OF_OVERFLOWS>
    1de2:	88 23       	and	r24, r24
    1de4:	99 f0       	breq	.+38     	; 0x1e0c <__vector_10+0x3c>
    1de6:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <g_tick>
    1dea:	8f 5f       	subi	r24, 0xFF	; 255
    1dec:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <g_tick>
    1df0:	90 91 d8 00 	lds	r25, 0x00D8	; 0x8000d8 <g_tick>
    1df4:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <NO_OF_OVERFLOWS>
    1df8:	98 13       	cpse	r25, r24
    1dfa:	11 c0       	rjmp	.+34     	; 0x1e1e <__vector_10+0x4e>
    1dfc:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <g_timeout_flag>
    1e00:	8f 5f       	subi	r24, 0xFF	; 255
    1e02:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <g_timeout_flag>
    1e06:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <g_tick>
    1e0a:	09 c0       	rjmp	.+18     	; 0x1e1e <__vector_10+0x4e>
    1e0c:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <g_timeout_flag>
    1e10:	8f 5f       	subi	r24, 0xFF	; 255
    1e12:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <g_timeout_flag>
    1e16:	12 be       	out	0x32, r1	; 50
    1e18:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <g_initial_value>
    1e1c:	8c bf       	out	0x3c, r24	; 60
    1e1e:	9f 91       	pop	r25
    1e20:	8f 91       	pop	r24
    1e22:	0f 90       	pop	r0
    1e24:	0f be       	out	0x3f, r0	; 63
    1e26:	0f 90       	pop	r0
    1e28:	1f 90       	pop	r1
    1e2a:	18 95       	reti

00001e2c <__vector_11>:
    1e2c:	1f 92       	push	r1
    1e2e:	0f 92       	push	r0
    1e30:	0f b6       	in	r0, 0x3f	; 63
    1e32:	0f 92       	push	r0
    1e34:	11 24       	eor	r1, r1
    1e36:	2f 93       	push	r18
    1e38:	3f 93       	push	r19
    1e3a:	4f 93       	push	r20
    1e3c:	5f 93       	push	r21
    1e3e:	6f 93       	push	r22
    1e40:	7f 93       	push	r23
    1e42:	8f 93       	push	r24
    1e44:	9f 93       	push	r25
    1e46:	af 93       	push	r26
    1e48:	bf 93       	push	r27
    1e4a:	ef 93       	push	r30
    1e4c:	ff 93       	push	r31
    1e4e:	e0 91 da 00 	lds	r30, 0x00DA	; 0x8000da <g_callBackPtr_0>
    1e52:	f0 91 db 00 	lds	r31, 0x00DB	; 0x8000db <g_callBackPtr_0+0x1>
    1e56:	30 97       	sbiw	r30, 0x00	; 0
    1e58:	b9 f0       	breq	.+46     	; 0x1e88 <__vector_11+0x5c>
    1e5a:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <NO_OF_OVERFLOWS>
    1e5e:	88 23       	and	r24, r24
    1e60:	79 f0       	breq	.+30     	; 0x1e80 <__vector_11+0x54>
    1e62:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <g_tick>
    1e66:	8f 5f       	subi	r24, 0xFF	; 255
    1e68:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <g_tick>
    1e6c:	90 91 d8 00 	lds	r25, 0x00D8	; 0x8000d8 <g_tick>
    1e70:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <NO_OF_OVERFLOWS>
    1e74:	98 13       	cpse	r25, r24
    1e76:	08 c0       	rjmp	.+16     	; 0x1e88 <__vector_11+0x5c>
    1e78:	09 95       	icall
    1e7a:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <g_tick>
    1e7e:	04 c0       	rjmp	.+8      	; 0x1e88 <__vector_11+0x5c>
    1e80:	09 95       	icall
    1e82:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <g_initial_value>
    1e86:	82 bf       	out	0x32, r24	; 50
    1e88:	ff 91       	pop	r31
    1e8a:	ef 91       	pop	r30
    1e8c:	bf 91       	pop	r27
    1e8e:	af 91       	pop	r26
    1e90:	9f 91       	pop	r25
    1e92:	8f 91       	pop	r24
    1e94:	7f 91       	pop	r23
    1e96:	6f 91       	pop	r22
    1e98:	5f 91       	pop	r21
    1e9a:	4f 91       	pop	r20
    1e9c:	3f 91       	pop	r19
    1e9e:	2f 91       	pop	r18
    1ea0:	0f 90       	pop	r0
    1ea2:	0f be       	out	0x3f, r0	; 63
    1ea4:	0f 90       	pop	r0
    1ea6:	1f 90       	pop	r1
    1ea8:	18 95       	reti

00001eaa <TMR1_init>:
    1eaa:	fc 01       	movw	r30, r24
    1eac:	1d bc       	out	0x2d, r1	; 45
    1eae:	1c bc       	out	0x2c, r1	; 44
    1eb0:	1b bc       	out	0x2b, r1	; 43
    1eb2:	1a bc       	out	0x2a, r1	; 42
    1eb4:	19 bc       	out	0x29, r1	; 41
    1eb6:	18 bc       	out	0x28, r1	; 40
    1eb8:	17 bc       	out	0x27, r1	; 39
    1eba:	16 bc       	out	0x26, r1	; 38
    1ebc:	8e b5       	in	r24, 0x2e	; 46
    1ebe:	91 81       	ldd	r25, Z+1	; 0x01
    1ec0:	88 7f       	andi	r24, 0xF8	; 248
    1ec2:	89 2b       	or	r24, r25
    1ec4:	8e bd       	out	0x2e, r24	; 46
    1ec6:	2e b5       	in	r18, 0x2e	; 46
    1ec8:	94 81       	ldd	r25, Z+4	; 0x04
    1eca:	30 e4       	ldi	r19, 0x40	; 64
    1ecc:	93 9f       	mul	r25, r19
    1ece:	c0 01       	movw	r24, r0
    1ed0:	11 24       	eor	r1, r1
    1ed2:	92 2f       	mov	r25, r18
    1ed4:	9f 7b       	andi	r25, 0xBF	; 191
    1ed6:	89 2b       	or	r24, r25
    1ed8:	8e bd       	out	0x2e, r24	; 46
    1eda:	2e b5       	in	r18, 0x2e	; 46
    1edc:	96 81       	ldd	r25, Z+6	; 0x06
    1ede:	30 e8       	ldi	r19, 0x80	; 128
    1ee0:	93 9f       	mul	r25, r19
    1ee2:	c0 01       	movw	r24, r0
    1ee4:	11 24       	eor	r1, r1
    1ee6:	92 2f       	mov	r25, r18
    1ee8:	9f 77       	andi	r25, 0x7F	; 127
    1eea:	89 2b       	or	r24, r25
    1eec:	8e bd       	out	0x2e, r24	; 46
    1eee:	9f b5       	in	r25, 0x2f	; 47
    1ef0:	80 81       	ld	r24, Z
    1ef2:	9c 7f       	andi	r25, 0xFC	; 252
    1ef4:	83 70       	andi	r24, 0x03	; 3
    1ef6:	89 2b       	or	r24, r25
    1ef8:	8f bd       	out	0x2f, r24	; 47
    1efa:	8e b5       	in	r24, 0x2e	; 46
    1efc:	90 81       	ld	r25, Z
    1efe:	9c 70       	andi	r25, 0x0C	; 12
    1f00:	29 2f       	mov	r18, r25
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	22 0f       	add	r18, r18
    1f06:	33 1f       	adc	r19, r19
    1f08:	22 0f       	add	r18, r18
    1f0a:	33 1f       	adc	r19, r19
    1f0c:	22 0f       	add	r18, r18
    1f0e:	33 1f       	adc	r19, r19
    1f10:	87 7e       	andi	r24, 0xE7	; 231
    1f12:	28 2b       	or	r18, r24
    1f14:	2e bd       	out	0x2e, r18	; 46
    1f16:	89 b7       	in	r24, 0x39	; 57
    1f18:	93 81       	ldd	r25, Z+3	; 0x03
    1f1a:	83 7c       	andi	r24, 0xC3	; 195
    1f1c:	89 2b       	or	r24, r25
    1f1e:	21 f0       	breq	.+8      	; 0x1f28 <TMR1_init+0x7e>
    1f20:	82 81       	ldd	r24, Z+2	; 0x02
    1f22:	81 11       	cpse	r24, r1
    1f24:	03 c0       	rjmp	.+6      	; 0x1f2c <TMR1_init+0x82>
    1f26:	03 c0       	rjmp	.+6      	; 0x1f2e <TMR1_init+0x84>
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	01 c0       	rjmp	.+2      	; 0x1f2e <TMR1_init+0x84>
    1f2c:	81 e0       	ldi	r24, 0x01	; 1
    1f2e:	89 bf       	out	0x39, r24	; 57
    1f30:	80 81       	ld	r24, Z
    1f32:	88 23       	and	r24, r24
    1f34:	11 f0       	breq	.+4      	; 0x1f3a <TMR1_init+0x90>
    1f36:	84 30       	cpi	r24, 0x04	; 4
    1f38:	11 f4       	brne	.+4      	; 0x1f3e <TMR1_init+0x94>
    1f3a:	8c e0       	ldi	r24, 0x0C	; 12
    1f3c:	8f bd       	out	0x2f, r24	; 47
    1f3e:	08 95       	ret

00001f40 <TMR1_readTime>:
    1f40:	8c b5       	in	r24, 0x2c	; 44
    1f42:	9d b5       	in	r25, 0x2d	; 45
    1f44:	08 95       	ret

00001f46 <TMR1_clear>:
    1f46:	1d bc       	out	0x2d, r1	; 45
    1f48:	1c bc       	out	0x2c, r1	; 44
    1f4a:	08 95       	ret

00001f4c <__subsf3>:
    1f4c:	50 58       	subi	r21, 0x80	; 128

00001f4e <__addsf3>:
    1f4e:	bb 27       	eor	r27, r27
    1f50:	aa 27       	eor	r26, r26
    1f52:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__addsf3x>
    1f56:	0c 94 31 11 	jmp	0x2262	; 0x2262 <__fp_round>
    1f5a:	0e 94 23 11 	call	0x2246	; 0x2246 <__fp_pscA>
    1f5e:	38 f0       	brcs	.+14     	; 0x1f6e <__addsf3+0x20>
    1f60:	0e 94 2a 11 	call	0x2254	; 0x2254 <__fp_pscB>
    1f64:	20 f0       	brcs	.+8      	; 0x1f6e <__addsf3+0x20>
    1f66:	39 f4       	brne	.+14     	; 0x1f76 <__addsf3+0x28>
    1f68:	9f 3f       	cpi	r25, 0xFF	; 255
    1f6a:	19 f4       	brne	.+6      	; 0x1f72 <__addsf3+0x24>
    1f6c:	26 f4       	brtc	.+8      	; 0x1f76 <__addsf3+0x28>
    1f6e:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__fp_nan>
    1f72:	0e f4       	brtc	.+2      	; 0x1f76 <__addsf3+0x28>
    1f74:	e0 95       	com	r30
    1f76:	e7 fb       	bst	r30, 7
    1f78:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <__fp_inf>

00001f7c <__addsf3x>:
    1f7c:	e9 2f       	mov	r30, r25
    1f7e:	0e 94 42 11 	call	0x2284	; 0x2284 <__fp_split3>
    1f82:	58 f3       	brcs	.-42     	; 0x1f5a <__addsf3+0xc>
    1f84:	ba 17       	cp	r27, r26
    1f86:	62 07       	cpc	r22, r18
    1f88:	73 07       	cpc	r23, r19
    1f8a:	84 07       	cpc	r24, r20
    1f8c:	95 07       	cpc	r25, r21
    1f8e:	20 f0       	brcs	.+8      	; 0x1f98 <__addsf3x+0x1c>
    1f90:	79 f4       	brne	.+30     	; 0x1fb0 <__addsf3x+0x34>
    1f92:	a6 f5       	brtc	.+104    	; 0x1ffc <__addsf3x+0x80>
    1f94:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__fp_zero>
    1f98:	0e f4       	brtc	.+2      	; 0x1f9c <__addsf3x+0x20>
    1f9a:	e0 95       	com	r30
    1f9c:	0b 2e       	mov	r0, r27
    1f9e:	ba 2f       	mov	r27, r26
    1fa0:	a0 2d       	mov	r26, r0
    1fa2:	0b 01       	movw	r0, r22
    1fa4:	b9 01       	movw	r22, r18
    1fa6:	90 01       	movw	r18, r0
    1fa8:	0c 01       	movw	r0, r24
    1faa:	ca 01       	movw	r24, r20
    1fac:	a0 01       	movw	r20, r0
    1fae:	11 24       	eor	r1, r1
    1fb0:	ff 27       	eor	r31, r31
    1fb2:	59 1b       	sub	r21, r25
    1fb4:	99 f0       	breq	.+38     	; 0x1fdc <__addsf3x+0x60>
    1fb6:	59 3f       	cpi	r21, 0xF9	; 249
    1fb8:	50 f4       	brcc	.+20     	; 0x1fce <__addsf3x+0x52>
    1fba:	50 3e       	cpi	r21, 0xE0	; 224
    1fbc:	68 f1       	brcs	.+90     	; 0x2018 <__addsf3x+0x9c>
    1fbe:	1a 16       	cp	r1, r26
    1fc0:	f0 40       	sbci	r31, 0x00	; 0
    1fc2:	a2 2f       	mov	r26, r18
    1fc4:	23 2f       	mov	r18, r19
    1fc6:	34 2f       	mov	r19, r20
    1fc8:	44 27       	eor	r20, r20
    1fca:	58 5f       	subi	r21, 0xF8	; 248
    1fcc:	f3 cf       	rjmp	.-26     	; 0x1fb4 <__addsf3x+0x38>
    1fce:	46 95       	lsr	r20
    1fd0:	37 95       	ror	r19
    1fd2:	27 95       	ror	r18
    1fd4:	a7 95       	ror	r26
    1fd6:	f0 40       	sbci	r31, 0x00	; 0
    1fd8:	53 95       	inc	r21
    1fda:	c9 f7       	brne	.-14     	; 0x1fce <__addsf3x+0x52>
    1fdc:	7e f4       	brtc	.+30     	; 0x1ffc <__addsf3x+0x80>
    1fde:	1f 16       	cp	r1, r31
    1fe0:	ba 0b       	sbc	r27, r26
    1fe2:	62 0b       	sbc	r22, r18
    1fe4:	73 0b       	sbc	r23, r19
    1fe6:	84 0b       	sbc	r24, r20
    1fe8:	ba f0       	brmi	.+46     	; 0x2018 <__addsf3x+0x9c>
    1fea:	91 50       	subi	r25, 0x01	; 1
    1fec:	a1 f0       	breq	.+40     	; 0x2016 <__addsf3x+0x9a>
    1fee:	ff 0f       	add	r31, r31
    1ff0:	bb 1f       	adc	r27, r27
    1ff2:	66 1f       	adc	r22, r22
    1ff4:	77 1f       	adc	r23, r23
    1ff6:	88 1f       	adc	r24, r24
    1ff8:	c2 f7       	brpl	.-16     	; 0x1fea <__addsf3x+0x6e>
    1ffa:	0e c0       	rjmp	.+28     	; 0x2018 <__addsf3x+0x9c>
    1ffc:	ba 0f       	add	r27, r26
    1ffe:	62 1f       	adc	r22, r18
    2000:	73 1f       	adc	r23, r19
    2002:	84 1f       	adc	r24, r20
    2004:	48 f4       	brcc	.+18     	; 0x2018 <__addsf3x+0x9c>
    2006:	87 95       	ror	r24
    2008:	77 95       	ror	r23
    200a:	67 95       	ror	r22
    200c:	b7 95       	ror	r27
    200e:	f7 95       	ror	r31
    2010:	9e 3f       	cpi	r25, 0xFE	; 254
    2012:	08 f0       	brcs	.+2      	; 0x2016 <__addsf3x+0x9a>
    2014:	b0 cf       	rjmp	.-160    	; 0x1f76 <__addsf3+0x28>
    2016:	93 95       	inc	r25
    2018:	88 0f       	add	r24, r24
    201a:	08 f0       	brcs	.+2      	; 0x201e <__addsf3x+0xa2>
    201c:	99 27       	eor	r25, r25
    201e:	ee 0f       	add	r30, r30
    2020:	97 95       	ror	r25
    2022:	87 95       	ror	r24
    2024:	08 95       	ret

00002026 <__cmpsf2>:
    2026:	0e 94 f6 10 	call	0x21ec	; 0x21ec <__fp_cmp>
    202a:	08 f4       	brcc	.+2      	; 0x202e <__cmpsf2+0x8>
    202c:	81 e0       	ldi	r24, 0x01	; 1
    202e:	08 95       	ret

00002030 <__divsf3>:
    2030:	0e 94 2c 10 	call	0x2058	; 0x2058 <__divsf3x>
    2034:	0c 94 31 11 	jmp	0x2262	; 0x2262 <__fp_round>
    2038:	0e 94 2a 11 	call	0x2254	; 0x2254 <__fp_pscB>
    203c:	58 f0       	brcs	.+22     	; 0x2054 <__divsf3+0x24>
    203e:	0e 94 23 11 	call	0x2246	; 0x2246 <__fp_pscA>
    2042:	40 f0       	brcs	.+16     	; 0x2054 <__divsf3+0x24>
    2044:	29 f4       	brne	.+10     	; 0x2050 <__divsf3+0x20>
    2046:	5f 3f       	cpi	r21, 0xFF	; 255
    2048:	29 f0       	breq	.+10     	; 0x2054 <__divsf3+0x24>
    204a:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <__fp_inf>
    204e:	51 11       	cpse	r21, r1
    2050:	0c 94 65 11 	jmp	0x22ca	; 0x22ca <__fp_szero>
    2054:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__fp_nan>

00002058 <__divsf3x>:
    2058:	0e 94 42 11 	call	0x2284	; 0x2284 <__fp_split3>
    205c:	68 f3       	brcs	.-38     	; 0x2038 <__divsf3+0x8>

0000205e <__divsf3_pse>:
    205e:	99 23       	and	r25, r25
    2060:	b1 f3       	breq	.-20     	; 0x204e <__divsf3+0x1e>
    2062:	55 23       	and	r21, r21
    2064:	91 f3       	breq	.-28     	; 0x204a <__divsf3+0x1a>
    2066:	95 1b       	sub	r25, r21
    2068:	55 0b       	sbc	r21, r21
    206a:	bb 27       	eor	r27, r27
    206c:	aa 27       	eor	r26, r26
    206e:	62 17       	cp	r22, r18
    2070:	73 07       	cpc	r23, r19
    2072:	84 07       	cpc	r24, r20
    2074:	38 f0       	brcs	.+14     	; 0x2084 <__divsf3_pse+0x26>
    2076:	9f 5f       	subi	r25, 0xFF	; 255
    2078:	5f 4f       	sbci	r21, 0xFF	; 255
    207a:	22 0f       	add	r18, r18
    207c:	33 1f       	adc	r19, r19
    207e:	44 1f       	adc	r20, r20
    2080:	aa 1f       	adc	r26, r26
    2082:	a9 f3       	breq	.-22     	; 0x206e <__divsf3_pse+0x10>
    2084:	35 d0       	rcall	.+106    	; 0x20f0 <__divsf3_pse+0x92>
    2086:	0e 2e       	mov	r0, r30
    2088:	3a f0       	brmi	.+14     	; 0x2098 <__divsf3_pse+0x3a>
    208a:	e0 e8       	ldi	r30, 0x80	; 128
    208c:	32 d0       	rcall	.+100    	; 0x20f2 <__divsf3_pse+0x94>
    208e:	91 50       	subi	r25, 0x01	; 1
    2090:	50 40       	sbci	r21, 0x00	; 0
    2092:	e6 95       	lsr	r30
    2094:	00 1c       	adc	r0, r0
    2096:	ca f7       	brpl	.-14     	; 0x208a <__divsf3_pse+0x2c>
    2098:	2b d0       	rcall	.+86     	; 0x20f0 <__divsf3_pse+0x92>
    209a:	fe 2f       	mov	r31, r30
    209c:	29 d0       	rcall	.+82     	; 0x20f0 <__divsf3_pse+0x92>
    209e:	66 0f       	add	r22, r22
    20a0:	77 1f       	adc	r23, r23
    20a2:	88 1f       	adc	r24, r24
    20a4:	bb 1f       	adc	r27, r27
    20a6:	26 17       	cp	r18, r22
    20a8:	37 07       	cpc	r19, r23
    20aa:	48 07       	cpc	r20, r24
    20ac:	ab 07       	cpc	r26, r27
    20ae:	b0 e8       	ldi	r27, 0x80	; 128
    20b0:	09 f0       	breq	.+2      	; 0x20b4 <__divsf3_pse+0x56>
    20b2:	bb 0b       	sbc	r27, r27
    20b4:	80 2d       	mov	r24, r0
    20b6:	bf 01       	movw	r22, r30
    20b8:	ff 27       	eor	r31, r31
    20ba:	93 58       	subi	r25, 0x83	; 131
    20bc:	5f 4f       	sbci	r21, 0xFF	; 255
    20be:	3a f0       	brmi	.+14     	; 0x20ce <__divsf3_pse+0x70>
    20c0:	9e 3f       	cpi	r25, 0xFE	; 254
    20c2:	51 05       	cpc	r21, r1
    20c4:	78 f0       	brcs	.+30     	; 0x20e4 <__divsf3_pse+0x86>
    20c6:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <__fp_inf>
    20ca:	0c 94 65 11 	jmp	0x22ca	; 0x22ca <__fp_szero>
    20ce:	5f 3f       	cpi	r21, 0xFF	; 255
    20d0:	e4 f3       	brlt	.-8      	; 0x20ca <__divsf3_pse+0x6c>
    20d2:	98 3e       	cpi	r25, 0xE8	; 232
    20d4:	d4 f3       	brlt	.-12     	; 0x20ca <__divsf3_pse+0x6c>
    20d6:	86 95       	lsr	r24
    20d8:	77 95       	ror	r23
    20da:	67 95       	ror	r22
    20dc:	b7 95       	ror	r27
    20de:	f7 95       	ror	r31
    20e0:	9f 5f       	subi	r25, 0xFF	; 255
    20e2:	c9 f7       	brne	.-14     	; 0x20d6 <__divsf3_pse+0x78>
    20e4:	88 0f       	add	r24, r24
    20e6:	91 1d       	adc	r25, r1
    20e8:	96 95       	lsr	r25
    20ea:	87 95       	ror	r24
    20ec:	97 f9       	bld	r25, 7
    20ee:	08 95       	ret
    20f0:	e1 e0       	ldi	r30, 0x01	; 1
    20f2:	66 0f       	add	r22, r22
    20f4:	77 1f       	adc	r23, r23
    20f6:	88 1f       	adc	r24, r24
    20f8:	bb 1f       	adc	r27, r27
    20fa:	62 17       	cp	r22, r18
    20fc:	73 07       	cpc	r23, r19
    20fe:	84 07       	cpc	r24, r20
    2100:	ba 07       	cpc	r27, r26
    2102:	20 f0       	brcs	.+8      	; 0x210c <__divsf3_pse+0xae>
    2104:	62 1b       	sub	r22, r18
    2106:	73 0b       	sbc	r23, r19
    2108:	84 0b       	sbc	r24, r20
    210a:	ba 0b       	sbc	r27, r26
    210c:	ee 1f       	adc	r30, r30
    210e:	88 f7       	brcc	.-30     	; 0x20f2 <__divsf3_pse+0x94>
    2110:	e0 95       	com	r30
    2112:	08 95       	ret

00002114 <__fixunssfsi>:
    2114:	0e 94 4a 11 	call	0x2294	; 0x2294 <__fp_splitA>
    2118:	88 f0       	brcs	.+34     	; 0x213c <__fixunssfsi+0x28>
    211a:	9f 57       	subi	r25, 0x7F	; 127
    211c:	98 f0       	brcs	.+38     	; 0x2144 <__fixunssfsi+0x30>
    211e:	b9 2f       	mov	r27, r25
    2120:	99 27       	eor	r25, r25
    2122:	b7 51       	subi	r27, 0x17	; 23
    2124:	b0 f0       	brcs	.+44     	; 0x2152 <__fixunssfsi+0x3e>
    2126:	e1 f0       	breq	.+56     	; 0x2160 <__fixunssfsi+0x4c>
    2128:	66 0f       	add	r22, r22
    212a:	77 1f       	adc	r23, r23
    212c:	88 1f       	adc	r24, r24
    212e:	99 1f       	adc	r25, r25
    2130:	1a f0       	brmi	.+6      	; 0x2138 <__fixunssfsi+0x24>
    2132:	ba 95       	dec	r27
    2134:	c9 f7       	brne	.-14     	; 0x2128 <__fixunssfsi+0x14>
    2136:	14 c0       	rjmp	.+40     	; 0x2160 <__fixunssfsi+0x4c>
    2138:	b1 30       	cpi	r27, 0x01	; 1
    213a:	91 f0       	breq	.+36     	; 0x2160 <__fixunssfsi+0x4c>
    213c:	0e 94 64 11 	call	0x22c8	; 0x22c8 <__fp_zero>
    2140:	b1 e0       	ldi	r27, 0x01	; 1
    2142:	08 95       	ret
    2144:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__fp_zero>
    2148:	67 2f       	mov	r22, r23
    214a:	78 2f       	mov	r23, r24
    214c:	88 27       	eor	r24, r24
    214e:	b8 5f       	subi	r27, 0xF8	; 248
    2150:	39 f0       	breq	.+14     	; 0x2160 <__fixunssfsi+0x4c>
    2152:	b9 3f       	cpi	r27, 0xF9	; 249
    2154:	cc f3       	brlt	.-14     	; 0x2148 <__fixunssfsi+0x34>
    2156:	86 95       	lsr	r24
    2158:	77 95       	ror	r23
    215a:	67 95       	ror	r22
    215c:	b3 95       	inc	r27
    215e:	d9 f7       	brne	.-10     	; 0x2156 <__fixunssfsi+0x42>
    2160:	3e f4       	brtc	.+14     	; 0x2170 <__fixunssfsi+0x5c>
    2162:	90 95       	com	r25
    2164:	80 95       	com	r24
    2166:	70 95       	com	r23
    2168:	61 95       	neg	r22
    216a:	7f 4f       	sbci	r23, 0xFF	; 255
    216c:	8f 4f       	sbci	r24, 0xFF	; 255
    216e:	9f 4f       	sbci	r25, 0xFF	; 255
    2170:	08 95       	ret

00002172 <__floatunsisf>:
    2172:	e8 94       	clt
    2174:	09 c0       	rjmp	.+18     	; 0x2188 <__floatsisf+0x12>

00002176 <__floatsisf>:
    2176:	97 fb       	bst	r25, 7
    2178:	3e f4       	brtc	.+14     	; 0x2188 <__floatsisf+0x12>
    217a:	90 95       	com	r25
    217c:	80 95       	com	r24
    217e:	70 95       	com	r23
    2180:	61 95       	neg	r22
    2182:	7f 4f       	sbci	r23, 0xFF	; 255
    2184:	8f 4f       	sbci	r24, 0xFF	; 255
    2186:	9f 4f       	sbci	r25, 0xFF	; 255
    2188:	99 23       	and	r25, r25
    218a:	a9 f0       	breq	.+42     	; 0x21b6 <__floatsisf+0x40>
    218c:	f9 2f       	mov	r31, r25
    218e:	96 e9       	ldi	r25, 0x96	; 150
    2190:	bb 27       	eor	r27, r27
    2192:	93 95       	inc	r25
    2194:	f6 95       	lsr	r31
    2196:	87 95       	ror	r24
    2198:	77 95       	ror	r23
    219a:	67 95       	ror	r22
    219c:	b7 95       	ror	r27
    219e:	f1 11       	cpse	r31, r1
    21a0:	f8 cf       	rjmp	.-16     	; 0x2192 <__floatsisf+0x1c>
    21a2:	fa f4       	brpl	.+62     	; 0x21e2 <__floatsisf+0x6c>
    21a4:	bb 0f       	add	r27, r27
    21a6:	11 f4       	brne	.+4      	; 0x21ac <__floatsisf+0x36>
    21a8:	60 ff       	sbrs	r22, 0
    21aa:	1b c0       	rjmp	.+54     	; 0x21e2 <__floatsisf+0x6c>
    21ac:	6f 5f       	subi	r22, 0xFF	; 255
    21ae:	7f 4f       	sbci	r23, 0xFF	; 255
    21b0:	8f 4f       	sbci	r24, 0xFF	; 255
    21b2:	9f 4f       	sbci	r25, 0xFF	; 255
    21b4:	16 c0       	rjmp	.+44     	; 0x21e2 <__floatsisf+0x6c>
    21b6:	88 23       	and	r24, r24
    21b8:	11 f0       	breq	.+4      	; 0x21be <__floatsisf+0x48>
    21ba:	96 e9       	ldi	r25, 0x96	; 150
    21bc:	11 c0       	rjmp	.+34     	; 0x21e0 <__floatsisf+0x6a>
    21be:	77 23       	and	r23, r23
    21c0:	21 f0       	breq	.+8      	; 0x21ca <__floatsisf+0x54>
    21c2:	9e e8       	ldi	r25, 0x8E	; 142
    21c4:	87 2f       	mov	r24, r23
    21c6:	76 2f       	mov	r23, r22
    21c8:	05 c0       	rjmp	.+10     	; 0x21d4 <__floatsisf+0x5e>
    21ca:	66 23       	and	r22, r22
    21cc:	71 f0       	breq	.+28     	; 0x21ea <__floatsisf+0x74>
    21ce:	96 e8       	ldi	r25, 0x86	; 134
    21d0:	86 2f       	mov	r24, r22
    21d2:	70 e0       	ldi	r23, 0x00	; 0
    21d4:	60 e0       	ldi	r22, 0x00	; 0
    21d6:	2a f0       	brmi	.+10     	; 0x21e2 <__floatsisf+0x6c>
    21d8:	9a 95       	dec	r25
    21da:	66 0f       	add	r22, r22
    21dc:	77 1f       	adc	r23, r23
    21de:	88 1f       	adc	r24, r24
    21e0:	da f7       	brpl	.-10     	; 0x21d8 <__floatsisf+0x62>
    21e2:	88 0f       	add	r24, r24
    21e4:	96 95       	lsr	r25
    21e6:	87 95       	ror	r24
    21e8:	97 f9       	bld	r25, 7
    21ea:	08 95       	ret

000021ec <__fp_cmp>:
    21ec:	99 0f       	add	r25, r25
    21ee:	00 08       	sbc	r0, r0
    21f0:	55 0f       	add	r21, r21
    21f2:	aa 0b       	sbc	r26, r26
    21f4:	e0 e8       	ldi	r30, 0x80	; 128
    21f6:	fe ef       	ldi	r31, 0xFE	; 254
    21f8:	16 16       	cp	r1, r22
    21fa:	17 06       	cpc	r1, r23
    21fc:	e8 07       	cpc	r30, r24
    21fe:	f9 07       	cpc	r31, r25
    2200:	c0 f0       	brcs	.+48     	; 0x2232 <__fp_cmp+0x46>
    2202:	12 16       	cp	r1, r18
    2204:	13 06       	cpc	r1, r19
    2206:	e4 07       	cpc	r30, r20
    2208:	f5 07       	cpc	r31, r21
    220a:	98 f0       	brcs	.+38     	; 0x2232 <__fp_cmp+0x46>
    220c:	62 1b       	sub	r22, r18
    220e:	73 0b       	sbc	r23, r19
    2210:	84 0b       	sbc	r24, r20
    2212:	95 0b       	sbc	r25, r21
    2214:	39 f4       	brne	.+14     	; 0x2224 <__fp_cmp+0x38>
    2216:	0a 26       	eor	r0, r26
    2218:	61 f0       	breq	.+24     	; 0x2232 <__fp_cmp+0x46>
    221a:	23 2b       	or	r18, r19
    221c:	24 2b       	or	r18, r20
    221e:	25 2b       	or	r18, r21
    2220:	21 f4       	brne	.+8      	; 0x222a <__fp_cmp+0x3e>
    2222:	08 95       	ret
    2224:	0a 26       	eor	r0, r26
    2226:	09 f4       	brne	.+2      	; 0x222a <__fp_cmp+0x3e>
    2228:	a1 40       	sbci	r26, 0x01	; 1
    222a:	a6 95       	lsr	r26
    222c:	8f ef       	ldi	r24, 0xFF	; 255
    222e:	81 1d       	adc	r24, r1
    2230:	81 1d       	adc	r24, r1
    2232:	08 95       	ret

00002234 <__fp_inf>:
    2234:	97 f9       	bld	r25, 7
    2236:	9f 67       	ori	r25, 0x7F	; 127
    2238:	80 e8       	ldi	r24, 0x80	; 128
    223a:	70 e0       	ldi	r23, 0x00	; 0
    223c:	60 e0       	ldi	r22, 0x00	; 0
    223e:	08 95       	ret

00002240 <__fp_nan>:
    2240:	9f ef       	ldi	r25, 0xFF	; 255
    2242:	80 ec       	ldi	r24, 0xC0	; 192
    2244:	08 95       	ret

00002246 <__fp_pscA>:
    2246:	00 24       	eor	r0, r0
    2248:	0a 94       	dec	r0
    224a:	16 16       	cp	r1, r22
    224c:	17 06       	cpc	r1, r23
    224e:	18 06       	cpc	r1, r24
    2250:	09 06       	cpc	r0, r25
    2252:	08 95       	ret

00002254 <__fp_pscB>:
    2254:	00 24       	eor	r0, r0
    2256:	0a 94       	dec	r0
    2258:	12 16       	cp	r1, r18
    225a:	13 06       	cpc	r1, r19
    225c:	14 06       	cpc	r1, r20
    225e:	05 06       	cpc	r0, r21
    2260:	08 95       	ret

00002262 <__fp_round>:
    2262:	09 2e       	mov	r0, r25
    2264:	03 94       	inc	r0
    2266:	00 0c       	add	r0, r0
    2268:	11 f4       	brne	.+4      	; 0x226e <__fp_round+0xc>
    226a:	88 23       	and	r24, r24
    226c:	52 f0       	brmi	.+20     	; 0x2282 <__fp_round+0x20>
    226e:	bb 0f       	add	r27, r27
    2270:	40 f4       	brcc	.+16     	; 0x2282 <__fp_round+0x20>
    2272:	bf 2b       	or	r27, r31
    2274:	11 f4       	brne	.+4      	; 0x227a <__fp_round+0x18>
    2276:	60 ff       	sbrs	r22, 0
    2278:	04 c0       	rjmp	.+8      	; 0x2282 <__fp_round+0x20>
    227a:	6f 5f       	subi	r22, 0xFF	; 255
    227c:	7f 4f       	sbci	r23, 0xFF	; 255
    227e:	8f 4f       	sbci	r24, 0xFF	; 255
    2280:	9f 4f       	sbci	r25, 0xFF	; 255
    2282:	08 95       	ret

00002284 <__fp_split3>:
    2284:	57 fd       	sbrc	r21, 7
    2286:	90 58       	subi	r25, 0x80	; 128
    2288:	44 0f       	add	r20, r20
    228a:	55 1f       	adc	r21, r21
    228c:	59 f0       	breq	.+22     	; 0x22a4 <__fp_splitA+0x10>
    228e:	5f 3f       	cpi	r21, 0xFF	; 255
    2290:	71 f0       	breq	.+28     	; 0x22ae <__fp_splitA+0x1a>
    2292:	47 95       	ror	r20

00002294 <__fp_splitA>:
    2294:	88 0f       	add	r24, r24
    2296:	97 fb       	bst	r25, 7
    2298:	99 1f       	adc	r25, r25
    229a:	61 f0       	breq	.+24     	; 0x22b4 <__fp_splitA+0x20>
    229c:	9f 3f       	cpi	r25, 0xFF	; 255
    229e:	79 f0       	breq	.+30     	; 0x22be <__fp_splitA+0x2a>
    22a0:	87 95       	ror	r24
    22a2:	08 95       	ret
    22a4:	12 16       	cp	r1, r18
    22a6:	13 06       	cpc	r1, r19
    22a8:	14 06       	cpc	r1, r20
    22aa:	55 1f       	adc	r21, r21
    22ac:	f2 cf       	rjmp	.-28     	; 0x2292 <__fp_split3+0xe>
    22ae:	46 95       	lsr	r20
    22b0:	f1 df       	rcall	.-30     	; 0x2294 <__fp_splitA>
    22b2:	08 c0       	rjmp	.+16     	; 0x22c4 <__fp_splitA+0x30>
    22b4:	16 16       	cp	r1, r22
    22b6:	17 06       	cpc	r1, r23
    22b8:	18 06       	cpc	r1, r24
    22ba:	99 1f       	adc	r25, r25
    22bc:	f1 cf       	rjmp	.-30     	; 0x22a0 <__fp_splitA+0xc>
    22be:	86 95       	lsr	r24
    22c0:	71 05       	cpc	r23, r1
    22c2:	61 05       	cpc	r22, r1
    22c4:	08 94       	sec
    22c6:	08 95       	ret

000022c8 <__fp_zero>:
    22c8:	e8 94       	clt

000022ca <__fp_szero>:
    22ca:	bb 27       	eor	r27, r27
    22cc:	66 27       	eor	r22, r22
    22ce:	77 27       	eor	r23, r23
    22d0:	cb 01       	movw	r24, r22
    22d2:	97 f9       	bld	r25, 7
    22d4:	08 95       	ret

000022d6 <__mulsf3>:
    22d6:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__mulsf3x>
    22da:	0c 94 31 11 	jmp	0x2262	; 0x2262 <__fp_round>
    22de:	0e 94 23 11 	call	0x2246	; 0x2246 <__fp_pscA>
    22e2:	38 f0       	brcs	.+14     	; 0x22f2 <__mulsf3+0x1c>
    22e4:	0e 94 2a 11 	call	0x2254	; 0x2254 <__fp_pscB>
    22e8:	20 f0       	brcs	.+8      	; 0x22f2 <__mulsf3+0x1c>
    22ea:	95 23       	and	r25, r21
    22ec:	11 f0       	breq	.+4      	; 0x22f2 <__mulsf3+0x1c>
    22ee:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <__fp_inf>
    22f2:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__fp_nan>
    22f6:	11 24       	eor	r1, r1
    22f8:	0c 94 65 11 	jmp	0x22ca	; 0x22ca <__fp_szero>

000022fc <__mulsf3x>:
    22fc:	0e 94 42 11 	call	0x2284	; 0x2284 <__fp_split3>
    2300:	70 f3       	brcs	.-36     	; 0x22de <__mulsf3+0x8>

00002302 <__mulsf3_pse>:
    2302:	95 9f       	mul	r25, r21
    2304:	c1 f3       	breq	.-16     	; 0x22f6 <__mulsf3+0x20>
    2306:	95 0f       	add	r25, r21
    2308:	50 e0       	ldi	r21, 0x00	; 0
    230a:	55 1f       	adc	r21, r21
    230c:	62 9f       	mul	r22, r18
    230e:	f0 01       	movw	r30, r0
    2310:	72 9f       	mul	r23, r18
    2312:	bb 27       	eor	r27, r27
    2314:	f0 0d       	add	r31, r0
    2316:	b1 1d       	adc	r27, r1
    2318:	63 9f       	mul	r22, r19
    231a:	aa 27       	eor	r26, r26
    231c:	f0 0d       	add	r31, r0
    231e:	b1 1d       	adc	r27, r1
    2320:	aa 1f       	adc	r26, r26
    2322:	64 9f       	mul	r22, r20
    2324:	66 27       	eor	r22, r22
    2326:	b0 0d       	add	r27, r0
    2328:	a1 1d       	adc	r26, r1
    232a:	66 1f       	adc	r22, r22
    232c:	82 9f       	mul	r24, r18
    232e:	22 27       	eor	r18, r18
    2330:	b0 0d       	add	r27, r0
    2332:	a1 1d       	adc	r26, r1
    2334:	62 1f       	adc	r22, r18
    2336:	73 9f       	mul	r23, r19
    2338:	b0 0d       	add	r27, r0
    233a:	a1 1d       	adc	r26, r1
    233c:	62 1f       	adc	r22, r18
    233e:	83 9f       	mul	r24, r19
    2340:	a0 0d       	add	r26, r0
    2342:	61 1d       	adc	r22, r1
    2344:	22 1f       	adc	r18, r18
    2346:	74 9f       	mul	r23, r20
    2348:	33 27       	eor	r19, r19
    234a:	a0 0d       	add	r26, r0
    234c:	61 1d       	adc	r22, r1
    234e:	23 1f       	adc	r18, r19
    2350:	84 9f       	mul	r24, r20
    2352:	60 0d       	add	r22, r0
    2354:	21 1d       	adc	r18, r1
    2356:	82 2f       	mov	r24, r18
    2358:	76 2f       	mov	r23, r22
    235a:	6a 2f       	mov	r22, r26
    235c:	11 24       	eor	r1, r1
    235e:	9f 57       	subi	r25, 0x7F	; 127
    2360:	50 40       	sbci	r21, 0x00	; 0
    2362:	9a f0       	brmi	.+38     	; 0x238a <__mulsf3_pse+0x88>
    2364:	f1 f0       	breq	.+60     	; 0x23a2 <__mulsf3_pse+0xa0>
    2366:	88 23       	and	r24, r24
    2368:	4a f0       	brmi	.+18     	; 0x237c <__mulsf3_pse+0x7a>
    236a:	ee 0f       	add	r30, r30
    236c:	ff 1f       	adc	r31, r31
    236e:	bb 1f       	adc	r27, r27
    2370:	66 1f       	adc	r22, r22
    2372:	77 1f       	adc	r23, r23
    2374:	88 1f       	adc	r24, r24
    2376:	91 50       	subi	r25, 0x01	; 1
    2378:	50 40       	sbci	r21, 0x00	; 0
    237a:	a9 f7       	brne	.-22     	; 0x2366 <__mulsf3_pse+0x64>
    237c:	9e 3f       	cpi	r25, 0xFE	; 254
    237e:	51 05       	cpc	r21, r1
    2380:	80 f0       	brcs	.+32     	; 0x23a2 <__mulsf3_pse+0xa0>
    2382:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <__fp_inf>
    2386:	0c 94 65 11 	jmp	0x22ca	; 0x22ca <__fp_szero>
    238a:	5f 3f       	cpi	r21, 0xFF	; 255
    238c:	e4 f3       	brlt	.-8      	; 0x2386 <__mulsf3_pse+0x84>
    238e:	98 3e       	cpi	r25, 0xE8	; 232
    2390:	d4 f3       	brlt	.-12     	; 0x2386 <__mulsf3_pse+0x84>
    2392:	86 95       	lsr	r24
    2394:	77 95       	ror	r23
    2396:	67 95       	ror	r22
    2398:	b7 95       	ror	r27
    239a:	f7 95       	ror	r31
    239c:	e7 95       	ror	r30
    239e:	9f 5f       	subi	r25, 0xFF	; 255
    23a0:	c1 f7       	brne	.-16     	; 0x2392 <__mulsf3_pse+0x90>
    23a2:	fe 2b       	or	r31, r30
    23a4:	88 0f       	add	r24, r24
    23a6:	91 1d       	adc	r25, r1
    23a8:	96 95       	lsr	r25
    23aa:	87 95       	ror	r24
    23ac:	97 f9       	bld	r25, 7
    23ae:	08 95       	ret

000023b0 <__udivmodsi4>:
    23b0:	a1 e2       	ldi	r26, 0x21	; 33
    23b2:	1a 2e       	mov	r1, r26
    23b4:	aa 1b       	sub	r26, r26
    23b6:	bb 1b       	sub	r27, r27
    23b8:	fd 01       	movw	r30, r26
    23ba:	0d c0       	rjmp	.+26     	; 0x23d6 <__udivmodsi4_ep>

000023bc <__udivmodsi4_loop>:
    23bc:	aa 1f       	adc	r26, r26
    23be:	bb 1f       	adc	r27, r27
    23c0:	ee 1f       	adc	r30, r30
    23c2:	ff 1f       	adc	r31, r31
    23c4:	a2 17       	cp	r26, r18
    23c6:	b3 07       	cpc	r27, r19
    23c8:	e4 07       	cpc	r30, r20
    23ca:	f5 07       	cpc	r31, r21
    23cc:	20 f0       	brcs	.+8      	; 0x23d6 <__udivmodsi4_ep>
    23ce:	a2 1b       	sub	r26, r18
    23d0:	b3 0b       	sbc	r27, r19
    23d2:	e4 0b       	sbc	r30, r20
    23d4:	f5 0b       	sbc	r31, r21

000023d6 <__udivmodsi4_ep>:
    23d6:	66 1f       	adc	r22, r22
    23d8:	77 1f       	adc	r23, r23
    23da:	88 1f       	adc	r24, r24
    23dc:	99 1f       	adc	r25, r25
    23de:	1a 94       	dec	r1
    23e0:	69 f7       	brne	.-38     	; 0x23bc <__udivmodsi4_loop>
    23e2:	60 95       	com	r22
    23e4:	70 95       	com	r23
    23e6:	80 95       	com	r24
    23e8:	90 95       	com	r25
    23ea:	9b 01       	movw	r18, r22
    23ec:	ac 01       	movw	r20, r24
    23ee:	bd 01       	movw	r22, r26
    23f0:	cf 01       	movw	r24, r30
    23f2:	08 95       	ret

000023f4 <__umulhisi3>:
    23f4:	a2 9f       	mul	r26, r18
    23f6:	b0 01       	movw	r22, r0
    23f8:	b3 9f       	mul	r27, r19
    23fa:	c0 01       	movw	r24, r0
    23fc:	a3 9f       	mul	r26, r19
    23fe:	70 0d       	add	r23, r0
    2400:	81 1d       	adc	r24, r1
    2402:	11 24       	eor	r1, r1
    2404:	91 1d       	adc	r25, r1
    2406:	b2 9f       	mul	r27, r18
    2408:	70 0d       	add	r23, r0
    240a:	81 1d       	adc	r24, r1
    240c:	11 24       	eor	r1, r1
    240e:	91 1d       	adc	r25, r1
    2410:	08 95       	ret

00002412 <_exit>:
    2412:	f8 94       	cli

00002414 <__stop_program>:
    2414:	ff cf       	rjmp	.-2      	; 0x2414 <__stop_program>
